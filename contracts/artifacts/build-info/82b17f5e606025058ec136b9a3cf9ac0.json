{
	"id": "82b17f5e606025058ec136b9a3cf9ac0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.2;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract staking is Ownable {\r\n  // Library usage\r\n  using SafeMath for uint;\r\n\r\n  struct stakingInfo {\r\n      uint amount;\r\n      uint alreadyWithdrawn;\r\n      uint releaseDate; //update release date after each stake\r\n  }\r\n  \r\n  mapping (address => bool) public validTokens; //valid Token addresses\r\n  mapping (address => mapping(address => stakingInfo)) public StakeMap; //tokenAddr to user to stake amount\r\n  mapping (address => uint) public tokenTotalStaked; //tokenAddr to total token staked\r\n    \r\n  // Events\r\n  event tokensStaked(address _from, uint _amount);\r\n  event TokensUnstaked(address _to, uint _amount);\r\n\r\n  modifier isValidToken(address _tokenAddr){\r\n    require(validTokens[_tokenAddr]);\r\n    _;\r\n  }\r\n\r\n  /**\r\n  * add token address \r\n  */\r\n  function addToken( address _tokenAddr) onlyOwner external {\r\n    validTokens[_tokenAddr] = true;\r\n  }\r\n    \r\n  /**\r\n  * remove token address\r\n  */\r\n  function removeToken( address _tokenAddr) onlyOwner external {\r\n    validTokens[_tokenAddr] = false;\r\n  }\r\n\r\n  /**\r\n  * Stake tokens\r\n  */\r\n  function stake(uint _amount, address _tokenAddr, uint _daysCount) isValidToken(_tokenAddr) external payable returns (bool){\r\n    require(_amount <= IERC20(_tokenAddr).balanceOf(msg.sender), \"Not enough STATE tokens in your wallet, please try lesser amount\");\r\n    require(IERC20(_tokenAddr).transferFrom(msg.sender, address(this), _amount));\r\n\r\n    if (StakeMap[_tokenAddr][msg.sender].amount == 0){\r\n      StakeMap[_tokenAddr][msg.sender].amount = _amount;\r\n      StakeMap[_tokenAddr][msg.sender].releaseDate = block.timestamp + _daysCount * 1 days;\r\n    }else{\r\n      StakeMap[_tokenAddr][msg.sender].amount = StakeMap[_tokenAddr][msg.sender].amount.add(_amount);\r\n      StakeMap[_tokenAddr][msg.sender].releaseDate = block.timestamp + _daysCount * 1 days;\r\n    }\r\n    tokenTotalStaked[_tokenAddr] = tokenTotalStaked[_tokenAddr].add(_amount);\r\n\r\n    emit tokensStaked(msg.sender, _amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n  * Unstake tokens\r\n  */\r\n  function unstake(uint _amount, address _tokenAddr) isValidToken(_tokenAddr) external payable returns (bool){\r\n    require(StakeMap[_tokenAddr][msg.sender].amount > 0);\r\n    require(block.timestamp > StakeMap[_tokenAddr][msg.sender].releaseDate, \"Tokens are only available after correct time period has elapsed\");\r\n    require(IERC20(_tokenAddr).transfer(msg.sender, _amount));\r\n\r\n    tokenTotalStaked[_tokenAddr] = tokenTotalStaked[_tokenAddr].sub(_amount);\r\n    StakeMap[_tokenAddr][msg.sender].alreadyWithdrawn = StakeMap[_tokenAddr][msg.sender].alreadyWithdrawn.add(_amount);\r\n\r\n    emit TokensUnstaked(msg.sender, _amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n  * get User Staking Info \r\n  */\r\n  function getUserInfo(address _tokenAddr) isValidToken(_tokenAddr) external view returns(stakingInfo memory){\r\n    return StakeMap[_tokenAddr][msg.sender];\r\n  }\r\n\r\n  \r\n  /**\r\n  * get tokenTotalStaked\r\n  */\r\n  function getTokenTotalStaked(address _tokenAddr) isValidToken(_tokenAddr) external view returns(uint){\r\n    return tokenTotalStaked[_tokenAddr];\r\n  }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IERC20 {\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\t\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address to, uint256 amount) external returns (bool);\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x38c95ad718376d43cca7df7654cd2afa13244b72836368619f1109f716e3ded4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18fa7864518cb5acc4d3bf5fb2cbfcd365b0a605585496393a53468cacb4850d\",\"dweb:/ipfs/QmWptKmAm8QGuVhBHfRASuw4JZdLJpPRPEoYEyQ6G5qnni\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH3 0x45A187 CALLDATALOAD EQ SLT DUP2 PUSH21 0x8AEC4A20E7C2295C1EAAEA54CC6B0412F32D5DB605 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6300:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH3 0x45A187 CALLDATALOAD EQ SLT DUP2 PUSH21 0x8AEC4A20E7C2295C1EAAEA54CC6B0412F32D5DB605 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6300:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/staking.sol": {
				"staking": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "TokensUnstaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "tokensStaked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "StakeMap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "alreadyWithdrawn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "releaseDate",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddr",
									"type": "address"
								}
							],
							"name": "addToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddr",
									"type": "address"
								}
							],
							"name": "getTokenTotalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddr",
									"type": "address"
								}
							],
							"name": "getUserInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "alreadyWithdrawn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "releaseDate",
											"type": "uint256"
										}
									],
									"internalType": "struct staking.stakingInfo",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddr",
									"type": "address"
								}
							],
							"name": "removeToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_tokenAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_daysCount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenTotalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_tokenAddr",
									"type": "address"
								}
							],
							"name": "unstake",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "validTokens",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/staking.sol\":233:3297  contract staking is Ownable {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/staking.sol\":233:3297  contract staking is Ownable {\r... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/staking.sol\":233:3297  contract staking is Ownable {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/staking.sol\":233:3297  contract staking is Ownable {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8381e182\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8381e182\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xd48bfca7\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdcb43191\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe12fb1b9\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_14:\n      dup1\n      0x4302a2f2\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x5fa7b584\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6386c1c7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6e9c931c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x83374cab\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/staking.sol\":645:694  mapping (address => uint) public tokenTotalStaked */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":1145:1250  function removeToken( address _tokenAddr) onlyOwner external {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_24:\n      tag_25\n      jump\t// in\n    tag_23:\n      stop\n        /* \"contracts/staking.sol\":2937:3096  function getUserInfo(address _tokenAddr) isValidToken(_tokenAddr) external view returns(stakingInfo memory){\r... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":1287:2201  function stake(uint _amount, address _tokenAddr, uint _daysCount) isValidToken(_tokenAddr) external payable returns (bool){\r... */\n    tag_5:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/staking.sol\":3145:3294  function getTokenTotalStaked(address _tokenAddr) isValidToken(_tokenAddr) external view returns(uint){\r... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":2240:2890  function unstake(uint _amount, address _tokenAddr) isValidToken(_tokenAddr) external payable returns (bool){\r... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":995:1096  function addToken( address _tokenAddr) onlyOwner external {\r... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/staking.sol\":536:604  mapping (address => mapping(address => stakingInfo)) public StakeMap */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":463:507  mapping (address => bool) public validTokens */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/staking.sol\":645:694  mapping (address => uint) public tokenTotalStaked */\n    tag_19:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":1145:1250  function removeToken( address _tokenAddr) onlyOwner external {\r... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"contracts/staking.sol\":1239:1244  false */\n      0x00\n        /* \"contracts/staking.sol\":1213:1224  validTokens */\n      0x01\n        /* \"contracts/staking.sol\":1213:1236  validTokens[_tokenAddr] */\n      0x00\n        /* \"contracts/staking.sol\":1225:1235  _tokenAddr */\n      dup4\n        /* \"contracts/staking.sol\":1213:1236  validTokens[_tokenAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/staking.sol\":1213:1244  validTokens[_tokenAddr] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":1145:1250  function removeToken( address _tokenAddr) onlyOwner external {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/staking.sol\":2937:3096  function getUserInfo(address _tokenAddr) isValidToken(_tokenAddr) external view returns(stakingInfo memory){\r... */\n    tag_29:\n        /* \"contracts/staking.sol\":3025:3043  stakingInfo memory */\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"contracts/staking.sol\":2991:3001  _tokenAddr */\n      dup2\n        /* \"contracts/staking.sol\":914:925  validTokens */\n      0x01\n        /* \"contracts/staking.sol\":914:937  validTokens[_tokenAddr] */\n      0x00\n        /* \"contracts/staking.sol\":926:936  _tokenAddr */\n      dup3\n        /* \"contracts/staking.sol\":914:937  validTokens[_tokenAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/staking.sol\":906:938  require(validTokens[_tokenAddr]) */\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n        /* \"contracts/staking.sol\":3058:3066  StakeMap */\n      0x02\n        /* \"contracts/staking.sol\":3058:3078  StakeMap[_tokenAddr] */\n      0x00\n        /* \"contracts/staking.sol\":3067:3077  _tokenAddr */\n      dup5\n        /* \"contracts/staking.sol\":3058:3078  StakeMap[_tokenAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":3058:3090  StakeMap[_tokenAddr][msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":3079:3089  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":3058:3090  StakeMap[_tokenAddr][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":3051:3090  return StakeMap[_tokenAddr][msg.sender] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap2\n      pop\n        /* \"contracts/staking.sol\":2937:3096  function getUserInfo(address _tokenAddr) isValidToken(_tokenAddr) external view returns(stakingInfo memory){\r... */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/staking.sol\":1287:2201  function stake(uint _amount, address _tokenAddr, uint _daysCount) isValidToken(_tokenAddr) external payable returns (bool){\r... */\n    tag_35:\n        /* \"contracts/staking.sol\":1404:1408  bool */\n      0x00\n        /* \"contracts/staking.sol\":1366:1376  _tokenAddr */\n      dup3\n        /* \"contracts/staking.sol\":914:925  validTokens */\n      0x01\n        /* \"contracts/staking.sol\":914:937  validTokens[_tokenAddr] */\n      0x00\n        /* \"contracts/staking.sol\":926:936  _tokenAddr */\n      dup3\n        /* \"contracts/staking.sol\":914:937  validTokens[_tokenAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/staking.sol\":906:938  require(validTokens[_tokenAddr]) */\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n        /* \"contracts/staking.sol\":1442:1452  _tokenAddr */\n      dup4\n        /* \"contracts/staking.sol\":1435:1463  IERC20(_tokenAddr).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/staking.sol\":1464:1474  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1435:1475  IERC20(_tokenAddr).balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_92:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"contracts/staking.sol\":1424:1431  _amount */\n      dup6\n        /* \"contracts/staking.sol\":1424:1475  _amount <= IERC20(_tokenAddr).balanceOf(msg.sender) */\n      gt\n      iszero\n        /* \"contracts/staking.sol\":1416:1544  require(_amount <= IERC20(_tokenAddr).balanceOf(msg.sender), \"Not enough STATE tokens in your wallet, please try lesser amount\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"contracts/staking.sol\":1566:1576  _tokenAddr */\n      dup4\n        /* \"contracts/staking.sol\":1559:1590  IERC20(_tokenAddr).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/staking.sol\":1591:1601  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1611:1615  this */\n      address\n        /* \"contracts/staking.sol\":1618:1625  _amount */\n      dup9\n        /* \"contracts/staking.sol\":1559:1626  IERC20(_tokenAddr).transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"contracts/staking.sol\":1551:1627  require(IERC20(_tokenAddr).transferFrom(msg.sender, address(this), _amount)) */\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n        /* \"contracts/staking.sol\":1683:1684  0 */\n      0x00\n        /* \"contracts/staking.sol\":1640:1648  StakeMap */\n      0x02\n        /* \"contracts/staking.sol\":1640:1660  StakeMap[_tokenAddr] */\n      0x00\n        /* \"contracts/staking.sol\":1649:1659  _tokenAddr */\n      dup7\n        /* \"contracts/staking.sol\":1640:1660  StakeMap[_tokenAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":1640:1672  StakeMap[_tokenAddr][msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":1661:1671  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1640:1672  StakeMap[_tokenAddr][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":1640:1679  StakeMap[_tokenAddr][msg.sender].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/staking.sol\":1640:1684  StakeMap[_tokenAddr][msg.sender].amount == 0 */\n      eq\n        /* \"contracts/staking.sol\":1636:2052  if (StakeMap[_tokenAddr][msg.sender].amount == 0){\r... */\n      iszero\n      tag_109\n      jumpi\n        /* \"contracts/staking.sol\":1736:1743  _amount */\n      dup5\n        /* \"contracts/staking.sol\":1694:1702  StakeMap */\n      0x02\n        /* \"contracts/staking.sol\":1694:1714  StakeMap[_tokenAddr] */\n      0x00\n        /* \"contracts/staking.sol\":1703:1713  _tokenAddr */\n      dup7\n        /* \"contracts/staking.sol\":1694:1714  StakeMap[_tokenAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":1694:1726  StakeMap[_tokenAddr][msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":1715:1725  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1694:1726  StakeMap[_tokenAddr][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":1694:1733  StakeMap[_tokenAddr][msg.sender].amount */\n      0x00\n      add\n        /* \"contracts/staking.sol\":1694:1743  StakeMap[_tokenAddr][msg.sender].amount = _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":1830:1836  1 days */\n      0x015180\n        /* \"contracts/staking.sol\":1817:1827  _daysCount */\n      dup4\n        /* \"contracts/staking.sol\":1817:1836  _daysCount * 1 days */\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"contracts/staking.sol\":1799:1814  block.timestamp */\n      timestamp\n        /* \"contracts/staking.sol\":1799:1836  block.timestamp + _daysCount * 1 days */\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"contracts/staking.sol\":1752:1760  StakeMap */\n      0x02\n        /* \"contracts/staking.sol\":1752:1772  StakeMap[_tokenAddr] */\n      0x00\n        /* \"contracts/staking.sol\":1761:1771  _tokenAddr */\n      dup7\n        /* \"contracts/staking.sol\":1752:1772  StakeMap[_tokenAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":1752:1784  StakeMap[_tokenAddr][msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":1773:1783  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1752:1784  StakeMap[_tokenAddr][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":1752:1796  StakeMap[_tokenAddr][msg.sender].releaseDate */\n      0x02\n      add\n        /* \"contracts/staking.sol\":1752:1836  StakeMap[_tokenAddr][msg.sender].releaseDate = block.timestamp + _daysCount * 1 days */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":1636:2052  if (StakeMap[_tokenAddr][msg.sender].amount == 0){\r... */\n      jump(tag_114)\n    tag_109:\n        /* \"contracts/staking.sol\":1899:1951  StakeMap[_tokenAddr][msg.sender].amount.add(_amount) */\n      tag_115\n        /* \"contracts/staking.sol\":1943:1950  _amount */\n      dup6\n        /* \"contracts/staking.sol\":1899:1907  StakeMap */\n      0x02\n        /* \"contracts/staking.sol\":1899:1919  StakeMap[_tokenAddr] */\n      0x00\n        /* \"contracts/staking.sol\":1908:1918  _tokenAddr */\n      dup8\n        /* \"contracts/staking.sol\":1899:1919  StakeMap[_tokenAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":1899:1931  StakeMap[_tokenAddr][msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":1920:1930  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1899:1931  StakeMap[_tokenAddr][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":1899:1938  StakeMap[_tokenAddr][msg.sender].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/staking.sol\":1899:1942  StakeMap[_tokenAddr][msg.sender].amount.add */\n      tag_116\n      swap1\n        /* \"contracts/staking.sol\":1899:1951  StakeMap[_tokenAddr][msg.sender].amount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_115:\n        /* \"contracts/staking.sol\":1857:1865  StakeMap */\n      0x02\n        /* \"contracts/staking.sol\":1857:1877  StakeMap[_tokenAddr] */\n      0x00\n        /* \"contracts/staking.sol\":1866:1876  _tokenAddr */\n      dup7\n        /* \"contracts/staking.sol\":1857:1877  StakeMap[_tokenAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":1857:1889  StakeMap[_tokenAddr][msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":1878:1888  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1857:1889  StakeMap[_tokenAddr][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":1857:1896  StakeMap[_tokenAddr][msg.sender].amount */\n      0x00\n      add\n        /* \"contracts/staking.sol\":1857:1951  StakeMap[_tokenAddr][msg.sender].amount = StakeMap[_tokenAddr][msg.sender].amount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":2038:2044  1 days */\n      0x015180\n        /* \"contracts/staking.sol\":2025:2035  _daysCount */\n      dup4\n        /* \"contracts/staking.sol\":2025:2044  _daysCount * 1 days */\n      tag_117\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_117:\n        /* \"contracts/staking.sol\":2007:2022  block.timestamp */\n      timestamp\n        /* \"contracts/staking.sol\":2007:2044  block.timestamp + _daysCount * 1 days */\n      tag_118\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_118:\n        /* \"contracts/staking.sol\":1960:1968  StakeMap */\n      0x02\n        /* \"contracts/staking.sol\":1960:1980  StakeMap[_tokenAddr] */\n      0x00\n        /* \"contracts/staking.sol\":1969:1979  _tokenAddr */\n      dup7\n        /* \"contracts/staking.sol\":1960:1980  StakeMap[_tokenAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":1960:1992  StakeMap[_tokenAddr][msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":1981:1991  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1960:1992  StakeMap[_tokenAddr][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":1960:2004  StakeMap[_tokenAddr][msg.sender].releaseDate */\n      0x02\n      add\n        /* \"contracts/staking.sol\":1960:2044  StakeMap[_tokenAddr][msg.sender].releaseDate = block.timestamp + _daysCount * 1 days */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":1636:2052  if (StakeMap[_tokenAddr][msg.sender].amount == 0){\r... */\n    tag_114:\n        /* \"contracts/staking.sol\":2089:2130  tokenTotalStaked[_tokenAddr].add(_amount) */\n      tag_119\n        /* \"contracts/staking.sol\":2122:2129  _amount */\n      dup6\n        /* \"contracts/staking.sol\":2089:2105  tokenTotalStaked */\n      0x03\n        /* \"contracts/staking.sol\":2089:2117  tokenTotalStaked[_tokenAddr] */\n      0x00\n        /* \"contracts/staking.sol\":2106:2116  _tokenAddr */\n      dup8\n        /* \"contracts/staking.sol\":2089:2117  tokenTotalStaked[_tokenAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/staking.sol\":2089:2121  tokenTotalStaked[_tokenAddr].add */\n      tag_116\n      swap1\n        /* \"contracts/staking.sol\":2089:2130  tokenTotalStaked[_tokenAddr].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_119:\n        /* \"contracts/staking.sol\":2058:2074  tokenTotalStaked */\n      0x03\n        /* \"contracts/staking.sol\":2058:2086  tokenTotalStaked[_tokenAddr] */\n      0x00\n        /* \"contracts/staking.sol\":2075:2085  _tokenAddr */\n      dup7\n        /* \"contracts/staking.sol\":2058:2086  tokenTotalStaked[_tokenAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":2058:2130  tokenTotalStaked[_tokenAddr] = tokenTotalStaked[_tokenAddr].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":2144:2177  tokensStaked(msg.sender, _amount) */\n      0xe5cfeeb5fcb96c1c52a55137c15e7f46d34d100d256c5396efc087c43d2fde4b\n        /* \"contracts/staking.sol\":2157:2167  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":2169:2176  _amount */\n      dup7\n        /* \"contracts/staking.sol\":2144:2177  tokensStaked(msg.sender, _amount) */\n      mload(0x40)\n      tag_120\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/staking.sol\":2191:2195  true */\n      0x01\n        /* \"contracts/staking.sol\":2184:2195  return true */\n      swap2\n      pop\n        /* \"contracts/staking.sol\":1287:2201  function stake(uint _amount, address _tokenAddr, uint _daysCount) isValidToken(_tokenAddr) external payable returns (bool){\r... */\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_82\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/staking.sol\":3145:3294  function getTokenTotalStaked(address _tokenAddr) isValidToken(_tokenAddr) external view returns(uint){\r... */\n    tag_44:\n        /* \"contracts/staking.sol\":3241:3245  uint */\n      0x00\n        /* \"contracts/staking.sol\":3207:3217  _tokenAddr */\n      dup2\n        /* \"contracts/staking.sol\":914:925  validTokens */\n      0x01\n        /* \"contracts/staking.sol\":914:937  validTokens[_tokenAddr] */\n      0x00\n        /* \"contracts/staking.sol\":926:936  _tokenAddr */\n      dup3\n        /* \"contracts/staking.sol\":914:937  validTokens[_tokenAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/staking.sol\":906:938  require(validTokens[_tokenAddr]) */\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n        /* \"contracts/staking.sol\":3260:3276  tokenTotalStaked */\n      0x03\n        /* \"contracts/staking.sol\":3260:3288  tokenTotalStaked[_tokenAddr] */\n      0x00\n        /* \"contracts/staking.sol\":3277:3287  _tokenAddr */\n      dup5\n        /* \"contracts/staking.sol\":3260:3288  tokenTotalStaked[_tokenAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/staking.sol\":3253:3288  return tokenTotalStaked[_tokenAddr] */\n      swap2\n      pop\n        /* \"contracts/staking.sol\":3145:3294  function getTokenTotalStaked(address _tokenAddr) isValidToken(_tokenAddr) external view returns(uint){\r... */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/staking.sol\":2240:2890  function unstake(uint _amount, address _tokenAddr) isValidToken(_tokenAddr) external payable returns (bool){\r... */\n    tag_49:\n        /* \"contracts/staking.sol\":2342:2346  bool */\n      0x00\n        /* \"contracts/staking.sol\":2304:2314  _tokenAddr */\n      dup2\n        /* \"contracts/staking.sol\":914:925  validTokens */\n      0x01\n        /* \"contracts/staking.sol\":914:937  validTokens[_tokenAddr] */\n      0x00\n        /* \"contracts/staking.sol\":926:936  _tokenAddr */\n      dup3\n        /* \"contracts/staking.sol\":914:937  validTokens[_tokenAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/staking.sol\":906:938  require(validTokens[_tokenAddr]) */\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n        /* \"contracts/staking.sol\":2404:2405  0 */\n      0x00\n        /* \"contracts/staking.sol\":2362:2370  StakeMap */\n      0x02\n        /* \"contracts/staking.sol\":2362:2382  StakeMap[_tokenAddr] */\n      0x00\n        /* \"contracts/staking.sol\":2371:2381  _tokenAddr */\n      dup6\n        /* \"contracts/staking.sol\":2362:2382  StakeMap[_tokenAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":2362:2394  StakeMap[_tokenAddr][msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":2383:2393  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":2362:2394  StakeMap[_tokenAddr][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":2362:2401  StakeMap[_tokenAddr][msg.sender].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/staking.sol\":2362:2405  StakeMap[_tokenAddr][msg.sender].amount > 0 */\n      gt\n        /* \"contracts/staking.sol\":2354:2406  require(StakeMap[_tokenAddr][msg.sender].amount > 0) */\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n        /* \"contracts/staking.sol\":2439:2447  StakeMap */\n      0x02\n        /* \"contracts/staking.sol\":2439:2459  StakeMap[_tokenAddr] */\n      0x00\n        /* \"contracts/staking.sol\":2448:2458  _tokenAddr */\n      dup5\n        /* \"contracts/staking.sol\":2439:2459  StakeMap[_tokenAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":2439:2471  StakeMap[_tokenAddr][msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":2460:2470  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":2439:2471  StakeMap[_tokenAddr][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":2439:2483  StakeMap[_tokenAddr][msg.sender].releaseDate */\n      0x02\n      add\n      sload\n        /* \"contracts/staking.sol\":2421:2436  block.timestamp */\n      timestamp\n        /* \"contracts/staking.sol\":2421:2483  block.timestamp > StakeMap[_tokenAddr][msg.sender].releaseDate */\n      gt\n        /* \"contracts/staking.sol\":2413:2551  require(block.timestamp > StakeMap[_tokenAddr][msg.sender].releaseDate, \"Tokens are only available after correct time period has elapsed\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"contracts/staking.sol\":2573:2583  _tokenAddr */\n      dup3\n        /* \"contracts/staking.sol\":2566:2593  IERC20(_tokenAddr).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/staking.sol\":2594:2604  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":2606:2613  _amount */\n      dup7\n        /* \"contracts/staking.sol\":2566:2614  IERC20(_tokenAddr).transfer(msg.sender, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_140:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_143\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_144:\n        /* \"contracts/staking.sol\":2558:2615  require(IERC20(_tokenAddr).transfer(msg.sender, _amount)) */\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n        /* \"contracts/staking.sol\":2655:2696  tokenTotalStaked[_tokenAddr].sub(_amount) */\n      tag_146\n        /* \"contracts/staking.sol\":2688:2695  _amount */\n      dup5\n        /* \"contracts/staking.sol\":2655:2671  tokenTotalStaked */\n      0x03\n        /* \"contracts/staking.sol\":2655:2683  tokenTotalStaked[_tokenAddr] */\n      0x00\n        /* \"contracts/staking.sol\":2672:2682  _tokenAddr */\n      dup7\n        /* \"contracts/staking.sol\":2655:2683  tokenTotalStaked[_tokenAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/staking.sol\":2655:2687  tokenTotalStaked[_tokenAddr].sub */\n      tag_147\n      swap1\n        /* \"contracts/staking.sol\":2655:2696  tokenTotalStaked[_tokenAddr].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_146:\n        /* \"contracts/staking.sol\":2624:2640  tokenTotalStaked */\n      0x03\n        /* \"contracts/staking.sol\":2624:2652  tokenTotalStaked[_tokenAddr] */\n      0x00\n        /* \"contracts/staking.sol\":2641:2651  _tokenAddr */\n      dup6\n        /* \"contracts/staking.sol\":2624:2652  tokenTotalStaked[_tokenAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":2624:2696  tokenTotalStaked[_tokenAddr] = tokenTotalStaked[_tokenAddr].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":2755:2817  StakeMap[_tokenAddr][msg.sender].alreadyWithdrawn.add(_amount) */\n      tag_148\n        /* \"contracts/staking.sol\":2809:2816  _amount */\n      dup5\n        /* \"contracts/staking.sol\":2755:2763  StakeMap */\n      0x02\n        /* \"contracts/staking.sol\":2755:2775  StakeMap[_tokenAddr] */\n      0x00\n        /* \"contracts/staking.sol\":2764:2774  _tokenAddr */\n      dup7\n        /* \"contracts/staking.sol\":2755:2775  StakeMap[_tokenAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":2755:2787  StakeMap[_tokenAddr][msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":2776:2786  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":2755:2787  StakeMap[_tokenAddr][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":2755:2804  StakeMap[_tokenAddr][msg.sender].alreadyWithdrawn */\n      0x01\n      add\n      sload\n        /* \"contracts/staking.sol\":2755:2808  StakeMap[_tokenAddr][msg.sender].alreadyWithdrawn.add */\n      tag_116\n      swap1\n        /* \"contracts/staking.sol\":2755:2817  StakeMap[_tokenAddr][msg.sender].alreadyWithdrawn.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_148:\n        /* \"contracts/staking.sol\":2703:2711  StakeMap */\n      0x02\n        /* \"contracts/staking.sol\":2703:2723  StakeMap[_tokenAddr] */\n      0x00\n        /* \"contracts/staking.sol\":2712:2722  _tokenAddr */\n      dup6\n        /* \"contracts/staking.sol\":2703:2723  StakeMap[_tokenAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":2703:2735  StakeMap[_tokenAddr][msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":2724:2734  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":2703:2735  StakeMap[_tokenAddr][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":2703:2752  StakeMap[_tokenAddr][msg.sender].alreadyWithdrawn */\n      0x01\n      add\n        /* \"contracts/staking.sol\":2703:2817  StakeMap[_tokenAddr][msg.sender].alreadyWithdrawn = StakeMap[_tokenAddr][msg.sender].alreadyWithdrawn.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":2831:2866  TokensUnstaked(msg.sender, _amount) */\n      0x9845e367b683334e5c0b12d7b81721ac518e649376fa65e3d68324e8f34f2679\n        /* \"contracts/staking.sol\":2846:2856  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":2858:2865  _amount */\n      dup6\n        /* \"contracts/staking.sol\":2831:2866  TokensUnstaked(msg.sender, _amount) */\n      mload(0x40)\n      tag_149\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/staking.sol\":2880:2884  true */\n      0x01\n        /* \"contracts/staking.sol\":2873:2884  return true */\n      swap2\n      pop\n        /* \"contracts/staking.sol\":2240:2890  function unstake(uint _amount, address _tokenAddr) isValidToken(_tokenAddr) external payable returns (bool){\r... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/staking.sol\":995:1096  function addToken( address _tokenAddr) onlyOwner external {\r... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap1\n      tag_82\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"contracts/staking.sol\":1086:1090  true */\n      0x01\n        /* \"contracts/staking.sol\":1060:1071  validTokens */\n      dup1\n        /* \"contracts/staking.sol\":1060:1083  validTokens[_tokenAddr] */\n      0x00\n        /* \"contracts/staking.sol\":1072:1082  _tokenAddr */\n      dup4\n        /* \"contracts/staking.sol\":1060:1083  validTokens[_tokenAddr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/staking.sol\":1060:1090  validTokens[_tokenAddr] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":995:1096  function addToken( address _tokenAddr) onlyOwner external {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/staking.sol\":536:604  mapping (address => mapping(address => stakingInfo)) public StakeMap */\n    tag_64:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/staking.sol\":463:507  mapping (address => bool) public validTokens */\n    tag_70:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_82\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_169\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_172\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_85:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_175:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_177\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_179:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_181\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_183:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_185\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_187:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_189\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_186\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":440:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:918   */\n    tag_18:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:784   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":703:782   */\n      tag_192\n      tag_193\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":665:784   */\n    tag_191:\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":848:901   */\n      tag_194\n        /* \"#utility.yul\":893:900   */\n      dup5\n        /* \"#utility.yul\":884:890   */\n      dup3\n        /* \"#utility.yul\":873:882   */\n      dup6\n        /* \"#utility.yul\":869:891   */\n      add\n        /* \"#utility.yul\":848:901   */\n      tag_175\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":838:901   */\n      swap2\n      pop\n        /* \"#utility.yul\":794:911   */\n      pop\n        /* \"#utility.yul\":589:918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1398   */\n    tag_63:\n        /* \"#utility.yul\":992:998   */\n      0x00\n        /* \"#utility.yul\":1000:1006   */\n      dup1\n        /* \"#utility.yul\":1049:1051   */\n      0x40\n        /* \"#utility.yul\":1037:1046   */\n      dup4\n        /* \"#utility.yul\":1028:1035   */\n      dup6\n        /* \"#utility.yul\":1024:1047   */\n      sub\n        /* \"#utility.yul\":1020:1052   */\n      slt\n        /* \"#utility.yul\":1017:1136   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":1055:1134   */\n      tag_197\n      tag_193\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":1017:1136   */\n    tag_196:\n        /* \"#utility.yul\":1175:1176   */\n      0x00\n        /* \"#utility.yul\":1200:1253   */\n      tag_198\n        /* \"#utility.yul\":1245:1252   */\n      dup6\n        /* \"#utility.yul\":1236:1242   */\n      dup3\n        /* \"#utility.yul\":1225:1234   */\n      dup7\n        /* \"#utility.yul\":1221:1243   */\n      add\n        /* \"#utility.yul\":1200:1253   */\n      tag_175\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1190:1253   */\n      swap3\n      pop\n        /* \"#utility.yul\":1146:1263   */\n      pop\n        /* \"#utility.yul\":1302:1304   */\n      0x20\n        /* \"#utility.yul\":1328:1381   */\n      tag_199\n        /* \"#utility.yul\":1373:1380   */\n      dup6\n        /* \"#utility.yul\":1364:1370   */\n      dup3\n        /* \"#utility.yul\":1353:1362   */\n      dup7\n        /* \"#utility.yul\":1349:1371   */\n      add\n        /* \"#utility.yul\":1328:1381   */\n      tag_175\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":1318:1381   */\n      swap2\n      pop\n        /* \"#utility.yul\":1273:1391   */\n      pop\n        /* \"#utility.yul\":924:1398   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1404:1749   */\n    tag_107:\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1520:1522   */\n      0x20\n        /* \"#utility.yul\":1508:1517   */\n      dup3\n        /* \"#utility.yul\":1499:1506   */\n      dup5\n        /* \"#utility.yul\":1495:1518   */\n      sub\n        /* \"#utility.yul\":1491:1523   */\n      slt\n        /* \"#utility.yul\":1488:1607   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":1526:1605   */\n      tag_202\n      tag_193\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":1488:1607   */\n    tag_201:\n        /* \"#utility.yul\":1646:1647   */\n      0x00\n        /* \"#utility.yul\":1671:1732   */\n      tag_203\n        /* \"#utility.yul\":1724:1731   */\n      dup5\n        /* \"#utility.yul\":1715:1721   */\n      dup3\n        /* \"#utility.yul\":1704:1713   */\n      dup6\n        /* \"#utility.yul\":1700:1722   */\n      add\n        /* \"#utility.yul\":1671:1732   */\n      tag_179\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":1661:1732   */\n      swap2\n      pop\n        /* \"#utility.yul\":1617:1742   */\n      pop\n        /* \"#utility.yul\":1404:1749   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1755:2106   */\n    tag_97:\n        /* \"#utility.yul\":1825:1831   */\n      0x00\n        /* \"#utility.yul\":1874:1876   */\n      0x20\n        /* \"#utility.yul\":1862:1871   */\n      dup3\n        /* \"#utility.yul\":1853:1860   */\n      dup5\n        /* \"#utility.yul\":1849:1872   */\n      sub\n        /* \"#utility.yul\":1845:1877   */\n      slt\n        /* \"#utility.yul\":1842:1961   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":1880:1959   */\n      tag_206\n      tag_193\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":1842:1961   */\n    tag_205:\n        /* \"#utility.yul\":2000:2001   */\n      0x00\n        /* \"#utility.yul\":2025:2089   */\n      tag_207\n        /* \"#utility.yul\":2081:2088   */\n      dup5\n        /* \"#utility.yul\":2072:2078   */\n      dup3\n        /* \"#utility.yul\":2061:2070   */\n      dup6\n        /* \"#utility.yul\":2057:2079   */\n      add\n        /* \"#utility.yul\":2025:2089   */\n      tag_187\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":2015:2089   */\n      swap2\n      pop\n        /* \"#utility.yul\":1971:2099   */\n      pop\n        /* \"#utility.yul\":1755:2106   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2112:2586   */\n    tag_48:\n        /* \"#utility.yul\":2180:2186   */\n      0x00\n        /* \"#utility.yul\":2188:2194   */\n      dup1\n        /* \"#utility.yul\":2237:2239   */\n      0x40\n        /* \"#utility.yul\":2225:2234   */\n      dup4\n        /* \"#utility.yul\":2216:2223   */\n      dup6\n        /* \"#utility.yul\":2212:2235   */\n      sub\n        /* \"#utility.yul\":2208:2240   */\n      slt\n        /* \"#utility.yul\":2205:2324   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":2243:2322   */\n      tag_210\n      tag_193\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2205:2324   */\n    tag_209:\n        /* \"#utility.yul\":2363:2364   */\n      0x00\n        /* \"#utility.yul\":2388:2441   */\n      tag_211\n        /* \"#utility.yul\":2433:2440   */\n      dup6\n        /* \"#utility.yul\":2424:2430   */\n      dup3\n        /* \"#utility.yul\":2413:2422   */\n      dup7\n        /* \"#utility.yul\":2409:2431   */\n      add\n        /* \"#utility.yul\":2388:2441   */\n      tag_183\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2378:2441   */\n      swap3\n      pop\n        /* \"#utility.yul\":2334:2451   */\n      pop\n        /* \"#utility.yul\":2490:2492   */\n      0x20\n        /* \"#utility.yul\":2516:2569   */\n      tag_212\n        /* \"#utility.yul\":2561:2568   */\n      dup6\n        /* \"#utility.yul\":2552:2558   */\n      dup3\n        /* \"#utility.yul\":2541:2550   */\n      dup7\n        /* \"#utility.yul\":2537:2559   */\n      add\n        /* \"#utility.yul\":2516:2569   */\n      tag_175\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2506:2569   */\n      swap2\n      pop\n        /* \"#utility.yul\":2461:2579   */\n      pop\n        /* \"#utility.yul\":2112:2586   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2592:3211   */\n    tag_34:\n        /* \"#utility.yul\":2669:2675   */\n      0x00\n        /* \"#utility.yul\":2677:2683   */\n      dup1\n        /* \"#utility.yul\":2685:2691   */\n      0x00\n        /* \"#utility.yul\":2734:2736   */\n      0x60\n        /* \"#utility.yul\":2722:2731   */\n      dup5\n        /* \"#utility.yul\":2713:2720   */\n      dup7\n        /* \"#utility.yul\":2709:2732   */\n      sub\n        /* \"#utility.yul\":2705:2737   */\n      slt\n        /* \"#utility.yul\":2702:2821   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":2740:2819   */\n      tag_215\n      tag_193\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":2702:2821   */\n    tag_214:\n        /* \"#utility.yul\":2860:2861   */\n      0x00\n        /* \"#utility.yul\":2885:2938   */\n      tag_216\n        /* \"#utility.yul\":2930:2937   */\n      dup7\n        /* \"#utility.yul\":2921:2927   */\n      dup3\n        /* \"#utility.yul\":2910:2919   */\n      dup8\n        /* \"#utility.yul\":2906:2928   */\n      add\n        /* \"#utility.yul\":2885:2938   */\n      tag_183\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":2875:2938   */\n      swap4\n      pop\n        /* \"#utility.yul\":2831:2948   */\n      pop\n        /* \"#utility.yul\":2987:2989   */\n      0x20\n        /* \"#utility.yul\":3013:3066   */\n      tag_217\n        /* \"#utility.yul\":3058:3065   */\n      dup7\n        /* \"#utility.yul\":3049:3055   */\n      dup3\n        /* \"#utility.yul\":3038:3047   */\n      dup8\n        /* \"#utility.yul\":3034:3056   */\n      add\n        /* \"#utility.yul\":3013:3066   */\n      tag_175\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3003:3066   */\n      swap3\n      pop\n        /* \"#utility.yul\":2958:3076   */\n      pop\n        /* \"#utility.yul\":3115:3117   */\n      0x40\n        /* \"#utility.yul\":3141:3194   */\n      tag_218\n        /* \"#utility.yul\":3186:3193   */\n      dup7\n        /* \"#utility.yul\":3177:3183   */\n      dup3\n        /* \"#utility.yul\":3166:3175   */\n      dup8\n        /* \"#utility.yul\":3162:3184   */\n      add\n        /* \"#utility.yul\":3141:3194   */\n      tag_183\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":3131:3194   */\n      swap2\n      pop\n        /* \"#utility.yul\":3086:3204   */\n      pop\n        /* \"#utility.yul\":2592:3211   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3217:3335   */\n    tag_219:\n        /* \"#utility.yul\":3304:3328   */\n      tag_221\n        /* \"#utility.yul\":3322:3327   */\n      dup2\n        /* \"#utility.yul\":3304:3328   */\n      tag_222\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3299:3302   */\n      dup3\n        /* \"#utility.yul\":3292:3329   */\n      mstore\n        /* \"#utility.yul\":3217:3335   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3341:3450   */\n    tag_223:\n        /* \"#utility.yul\":3422:3443   */\n      tag_225\n        /* \"#utility.yul\":3437:3442   */\n      dup2\n        /* \"#utility.yul\":3422:3443   */\n      tag_226\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":3417:3420   */\n      dup3\n        /* \"#utility.yul\":3410:3444   */\n      mstore\n        /* \"#utility.yul\":3341:3450   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3456:3822   */\n    tag_227:\n        /* \"#utility.yul\":3598:3601   */\n      0x00\n        /* \"#utility.yul\":3619:3686   */\n      tag_229\n        /* \"#utility.yul\":3683:3685   */\n      0x26\n        /* \"#utility.yul\":3678:3681   */\n      dup4\n        /* \"#utility.yul\":3619:3686   */\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":3612:3686   */\n      swap2\n      pop\n        /* \"#utility.yul\":3695:3788   */\n      tag_231\n        /* \"#utility.yul\":3784:3787   */\n      dup3\n        /* \"#utility.yul\":3695:3788   */\n      tag_232\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":3813:3815   */\n      0x40\n        /* \"#utility.yul\":3808:3811   */\n      dup3\n        /* \"#utility.yul\":3804:3816   */\n      add\n        /* \"#utility.yul\":3797:3816   */\n      swap1\n      pop\n        /* \"#utility.yul\":3456:3822   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3828:4194   */\n    tag_233:\n        /* \"#utility.yul\":3970:3973   */\n      0x00\n        /* \"#utility.yul\":3991:4058   */\n      tag_235\n        /* \"#utility.yul\":4055:4057   */\n      0x3f\n        /* \"#utility.yul\":4050:4053   */\n      dup4\n        /* \"#utility.yul\":3991:4058   */\n      tag_230\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":3984:4058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4067:4160   */\n      tag_236\n        /* \"#utility.yul\":4156:4159   */\n      dup3\n        /* \"#utility.yul\":4067:4160   */\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":4185:4187   */\n      0x40\n        /* \"#utility.yul\":4180:4183   */\n      dup3\n        /* \"#utility.yul\":4176:4188   */\n      add\n        /* \"#utility.yul\":4169:4188   */\n      swap1\n      pop\n        /* \"#utility.yul\":3828:4194   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4200:4566   */\n    tag_238:\n        /* \"#utility.yul\":4342:4345   */\n      0x00\n        /* \"#utility.yul\":4363:4430   */\n      tag_240\n        /* \"#utility.yul\":4427:4429   */\n      0x40\n        /* \"#utility.yul\":4422:4425   */\n      dup4\n        /* \"#utility.yul\":4363:4430   */\n      tag_230\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":4356:4430   */\n      swap2\n      pop\n        /* \"#utility.yul\":4439:4532   */\n      tag_241\n        /* \"#utility.yul\":4528:4531   */\n      dup3\n        /* \"#utility.yul\":4439:4532   */\n      tag_242\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":4557:4559   */\n      0x40\n        /* \"#utility.yul\":4552:4555   */\n      dup3\n        /* \"#utility.yul\":4548:4560   */\n      add\n        /* \"#utility.yul\":4541:4560   */\n      swap1\n      pop\n        /* \"#utility.yul\":4200:4566   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4572:4938   */\n    tag_243:\n        /* \"#utility.yul\":4714:4717   */\n      0x00\n        /* \"#utility.yul\":4735:4802   */\n      tag_245\n        /* \"#utility.yul\":4799:4801   */\n      0x20\n        /* \"#utility.yul\":4794:4797   */\n      dup4\n        /* \"#utility.yul\":4735:4802   */\n      tag_230\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":4728:4802   */\n      swap2\n      pop\n        /* \"#utility.yul\":4811:4904   */\n      tag_246\n        /* \"#utility.yul\":4900:4903   */\n      dup3\n        /* \"#utility.yul\":4811:4904   */\n      tag_247\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":4929:4931   */\n      0x20\n        /* \"#utility.yul\":4924:4927   */\n      dup3\n        /* \"#utility.yul\":4920:4932   */\n      add\n        /* \"#utility.yul\":4913:4932   */\n      swap1\n      pop\n        /* \"#utility.yul\":4572:4938   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5008:5716   */\n    tag_248:\n        /* \"#utility.yul\":5161:5165   */\n      0x60\n        /* \"#utility.yul\":5156:5159   */\n      dup3\n        /* \"#utility.yul\":5152:5166   */\n      add\n        /* \"#utility.yul\":5250:5254   */\n      0x00\n        /* \"#utility.yul\":5243:5248   */\n      dup3\n        /* \"#utility.yul\":5239:5255   */\n      add\n        /* \"#utility.yul\":5233:5256   */\n      mload\n        /* \"#utility.yul\":5269:5332   */\n      tag_250\n        /* \"#utility.yul\":5326:5330   */\n      0x00\n        /* \"#utility.yul\":5321:5324   */\n      dup6\n        /* \"#utility.yul\":5317:5331   */\n      add\n        /* \"#utility.yul\":5303:5315   */\n      dup3\n        /* \"#utility.yul\":5269:5332   */\n      tag_251\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":5176:5342   */\n      pop\n        /* \"#utility.yul\":5436:5440   */\n      0x20\n        /* \"#utility.yul\":5429:5434   */\n      dup3\n        /* \"#utility.yul\":5425:5441   */\n      add\n        /* \"#utility.yul\":5419:5442   */\n      mload\n        /* \"#utility.yul\":5455:5518   */\n      tag_252\n        /* \"#utility.yul\":5512:5516   */\n      0x20\n        /* \"#utility.yul\":5507:5510   */\n      dup6\n        /* \"#utility.yul\":5503:5517   */\n      add\n        /* \"#utility.yul\":5489:5501   */\n      dup3\n        /* \"#utility.yul\":5455:5518   */\n      tag_251\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":5352:5528   */\n      pop\n        /* \"#utility.yul\":5617:5621   */\n      0x40\n        /* \"#utility.yul\":5610:5615   */\n      dup3\n        /* \"#utility.yul\":5606:5622   */\n      add\n        /* \"#utility.yul\":5600:5623   */\n      mload\n        /* \"#utility.yul\":5636:5699   */\n      tag_253\n        /* \"#utility.yul\":5693:5697   */\n      0x40\n        /* \"#utility.yul\":5688:5691   */\n      dup6\n        /* \"#utility.yul\":5684:5698   */\n      add\n        /* \"#utility.yul\":5670:5682   */\n      dup3\n        /* \"#utility.yul\":5636:5699   */\n      tag_251\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":5538:5709   */\n      pop\n        /* \"#utility.yul\":5130:5716   */\n      pop\n        /* \"#utility.yul\":5008:5716   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5722:5830   */\n    tag_251:\n        /* \"#utility.yul\":5799:5823   */\n      tag_255\n        /* \"#utility.yul\":5817:5822   */\n      dup2\n        /* \"#utility.yul\":5799:5823   */\n      tag_256\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":5794:5797   */\n      dup3\n        /* \"#utility.yul\":5787:5824   */\n      mstore\n        /* \"#utility.yul\":5722:5830   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5836:5954   */\n    tag_257:\n        /* \"#utility.yul\":5923:5947   */\n      tag_259\n        /* \"#utility.yul\":5941:5946   */\n      dup2\n        /* \"#utility.yul\":5923:5947   */\n      tag_256\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":5918:5921   */\n      dup3\n        /* \"#utility.yul\":5911:5948   */\n      mstore\n        /* \"#utility.yul\":5836:5954   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5960:6182   */\n    tag_55:\n        /* \"#utility.yul\":6053:6057   */\n      0x00\n        /* \"#utility.yul\":6091:6093   */\n      0x20\n        /* \"#utility.yul\":6080:6089   */\n      dup3\n        /* \"#utility.yul\":6076:6094   */\n      add\n        /* \"#utility.yul\":6068:6094   */\n      swap1\n      pop\n        /* \"#utility.yul\":6104:6175   */\n      tag_261\n        /* \"#utility.yul\":6172:6173   */\n      0x00\n        /* \"#utility.yul\":6161:6170   */\n      dup4\n        /* \"#utility.yul\":6157:6174   */\n      add\n        /* \"#utility.yul\":6148:6154   */\n      dup5\n        /* \"#utility.yul\":6104:6175   */\n      tag_219\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":5960:6182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6188:6630   */\n    tag_102:\n        /* \"#utility.yul\":6337:6341   */\n      0x00\n        /* \"#utility.yul\":6375:6377   */\n      0x60\n        /* \"#utility.yul\":6364:6373   */\n      dup3\n        /* \"#utility.yul\":6360:6378   */\n      add\n        /* \"#utility.yul\":6352:6378   */\n      swap1\n      pop\n        /* \"#utility.yul\":6388:6459   */\n      tag_263\n        /* \"#utility.yul\":6456:6457   */\n      0x00\n        /* \"#utility.yul\":6445:6454   */\n      dup4\n        /* \"#utility.yul\":6441:6458   */\n      add\n        /* \"#utility.yul\":6432:6438   */\n      dup7\n        /* \"#utility.yul\":6388:6459   */\n      tag_219\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":6469:6541   */\n      tag_264\n        /* \"#utility.yul\":6537:6539   */\n      0x20\n        /* \"#utility.yul\":6526:6535   */\n      dup4\n        /* \"#utility.yul\":6522:6540   */\n      add\n        /* \"#utility.yul\":6513:6519   */\n      dup6\n        /* \"#utility.yul\":6469:6541   */\n      tag_219\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":6551:6623   */\n      tag_265\n        /* \"#utility.yul\":6619:6621   */\n      0x40\n        /* \"#utility.yul\":6608:6617   */\n      dup4\n        /* \"#utility.yul\":6604:6622   */\n      add\n        /* \"#utility.yul\":6595:6601   */\n      dup5\n        /* \"#utility.yul\":6551:6623   */\n      tag_257\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":6188:6630   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6636:6968   */\n    tag_121:\n        /* \"#utility.yul\":6757:6761   */\n      0x00\n        /* \"#utility.yul\":6795:6797   */\n      0x40\n        /* \"#utility.yul\":6784:6793   */\n      dup3\n        /* \"#utility.yul\":6780:6798   */\n      add\n        /* \"#utility.yul\":6772:6798   */\n      swap1\n      pop\n        /* \"#utility.yul\":6808:6879   */\n      tag_267\n        /* \"#utility.yul\":6876:6877   */\n      0x00\n        /* \"#utility.yul\":6865:6874   */\n      dup4\n        /* \"#utility.yul\":6861:6878   */\n      add\n        /* \"#utility.yul\":6852:6858   */\n      dup6\n        /* \"#utility.yul\":6808:6879   */\n      tag_219\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":6889:6961   */\n      tag_268\n        /* \"#utility.yul\":6957:6959   */\n      0x20\n        /* \"#utility.yul\":6946:6955   */\n      dup4\n        /* \"#utility.yul\":6942:6960   */\n      add\n        /* \"#utility.yul\":6933:6939   */\n      dup5\n        /* \"#utility.yul\":6889:6961   */\n      tag_257\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":6636:6968   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6974:7184   */\n    tag_37:\n        /* \"#utility.yul\":7061:7065   */\n      0x00\n        /* \"#utility.yul\":7099:7101   */\n      0x20\n        /* \"#utility.yul\":7088:7097   */\n      dup3\n        /* \"#utility.yul\":7084:7102   */\n      add\n        /* \"#utility.yul\":7076:7102   */\n      swap1\n      pop\n        /* \"#utility.yul\":7112:7177   */\n      tag_270\n        /* \"#utility.yul\":7174:7175   */\n      0x00\n        /* \"#utility.yul\":7163:7172   */\n      dup4\n        /* \"#utility.yul\":7159:7176   */\n      add\n        /* \"#utility.yul\":7150:7156   */\n      dup5\n        /* \"#utility.yul\":7112:7177   */\n      tag_223\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":6974:7184   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7190:7609   */\n    tag_165:\n        /* \"#utility.yul\":7356:7360   */\n      0x00\n        /* \"#utility.yul\":7394:7396   */\n      0x20\n        /* \"#utility.yul\":7383:7392   */\n      dup3\n        /* \"#utility.yul\":7379:7397   */\n      add\n        /* \"#utility.yul\":7371:7397   */\n      swap1\n      pop\n        /* \"#utility.yul\":7443:7452   */\n      dup2\n        /* \"#utility.yul\":7437:7441   */\n      dup2\n        /* \"#utility.yul\":7433:7453   */\n      sub\n        /* \"#utility.yul\":7429:7430   */\n      0x00\n        /* \"#utility.yul\":7418:7427   */\n      dup4\n        /* \"#utility.yul\":7414:7431   */\n      add\n        /* \"#utility.yul\":7407:7454   */\n      mstore\n        /* \"#utility.yul\":7471:7602   */\n      tag_272\n        /* \"#utility.yul\":7597:7601   */\n      dup2\n        /* \"#utility.yul\":7471:7602   */\n      tag_227\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":7463:7602   */\n      swap1\n      pop\n        /* \"#utility.yul\":7190:7609   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7615:8034   */\n    tag_139:\n        /* \"#utility.yul\":7781:7785   */\n      0x00\n        /* \"#utility.yul\":7819:7821   */\n      0x20\n        /* \"#utility.yul\":7808:7817   */\n      dup3\n        /* \"#utility.yul\":7804:7822   */\n      add\n        /* \"#utility.yul\":7796:7822   */\n      swap1\n      pop\n        /* \"#utility.yul\":7868:7877   */\n      dup2\n        /* \"#utility.yul\":7862:7866   */\n      dup2\n        /* \"#utility.yul\":7858:7878   */\n      sub\n        /* \"#utility.yul\":7854:7855   */\n      0x00\n        /* \"#utility.yul\":7843:7852   */\n      dup4\n        /* \"#utility.yul\":7839:7856   */\n      add\n        /* \"#utility.yul\":7832:7879   */\n      mstore\n        /* \"#utility.yul\":7896:8027   */\n      tag_274\n        /* \"#utility.yul\":8022:8026   */\n      dup2\n        /* \"#utility.yul\":7896:8027   */\n      tag_233\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":7888:8027   */\n      swap1\n      pop\n        /* \"#utility.yul\":7615:8034   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8040:8459   */\n    tag_100:\n        /* \"#utility.yul\":8206:8210   */\n      0x00\n        /* \"#utility.yul\":8244:8246   */\n      0x20\n        /* \"#utility.yul\":8233:8242   */\n      dup3\n        /* \"#utility.yul\":8229:8247   */\n      add\n        /* \"#utility.yul\":8221:8247   */\n      swap1\n      pop\n        /* \"#utility.yul\":8293:8302   */\n      dup2\n        /* \"#utility.yul\":8287:8291   */\n      dup2\n        /* \"#utility.yul\":8283:8303   */\n      sub\n        /* \"#utility.yul\":8279:8280   */\n      0x00\n        /* \"#utility.yul\":8268:8277   */\n      dup4\n        /* \"#utility.yul\":8264:8281   */\n      add\n        /* \"#utility.yul\":8257:8304   */\n      mstore\n        /* \"#utility.yul\":8321:8452   */\n      tag_276\n        /* \"#utility.yul\":8447:8451   */\n      dup2\n        /* \"#utility.yul\":8321:8452   */\n      tag_238\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":8313:8452   */\n      swap1\n      pop\n        /* \"#utility.yul\":8040:8459   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8465:8884   */\n    tag_82:\n        /* \"#utility.yul\":8631:8635   */\n      0x00\n        /* \"#utility.yul\":8669:8671   */\n      0x20\n        /* \"#utility.yul\":8658:8667   */\n      dup3\n        /* \"#utility.yul\":8654:8672   */\n      add\n        /* \"#utility.yul\":8646:8672   */\n      swap1\n      pop\n        /* \"#utility.yul\":8718:8727   */\n      dup2\n        /* \"#utility.yul\":8712:8716   */\n      dup2\n        /* \"#utility.yul\":8708:8728   */\n      sub\n        /* \"#utility.yul\":8704:8705   */\n      0x00\n        /* \"#utility.yul\":8693:8702   */\n      dup4\n        /* \"#utility.yul\":8689:8706   */\n      add\n        /* \"#utility.yul\":8682:8729   */\n      mstore\n        /* \"#utility.yul\":8746:8877   */\n      tag_278\n        /* \"#utility.yul\":8872:8876   */\n      dup2\n        /* \"#utility.yul\":8746:8877   */\n      tag_243\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":8738:8877   */\n      swap1\n      pop\n        /* \"#utility.yul\":8465:8884   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8890:9224   */\n    tag_31:\n        /* \"#utility.yul\":9039:9043   */\n      0x00\n        /* \"#utility.yul\":9077:9079   */\n      0x60\n        /* \"#utility.yul\":9066:9075   */\n      dup3\n        /* \"#utility.yul\":9062:9080   */\n      add\n        /* \"#utility.yul\":9054:9080   */\n      swap1\n      pop\n        /* \"#utility.yul\":9090:9217   */\n      tag_280\n        /* \"#utility.yul\":9214:9215   */\n      0x00\n        /* \"#utility.yul\":9203:9212   */\n      dup4\n        /* \"#utility.yul\":9199:9216   */\n      add\n        /* \"#utility.yul\":9190:9196   */\n      dup5\n        /* \"#utility.yul\":9090:9217   */\n      tag_248\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":8890:9224   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9230:9452   */\n    tag_21:\n        /* \"#utility.yul\":9323:9327   */\n      0x00\n        /* \"#utility.yul\":9361:9363   */\n      0x20\n        /* \"#utility.yul\":9350:9359   */\n      dup3\n        /* \"#utility.yul\":9346:9364   */\n      add\n        /* \"#utility.yul\":9338:9364   */\n      swap1\n      pop\n        /* \"#utility.yul\":9374:9445   */\n      tag_282\n        /* \"#utility.yul\":9442:9443   */\n      0x00\n        /* \"#utility.yul\":9431:9440   */\n      dup4\n        /* \"#utility.yul\":9427:9444   */\n      add\n        /* \"#utility.yul\":9418:9424   */\n      dup5\n        /* \"#utility.yul\":9374:9445   */\n      tag_257\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":9230:9452   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9458:9900   */\n    tag_66:\n        /* \"#utility.yul\":9607:9611   */\n      0x00\n        /* \"#utility.yul\":9645:9647   */\n      0x60\n        /* \"#utility.yul\":9634:9643   */\n      dup3\n        /* \"#utility.yul\":9630:9648   */\n      add\n        /* \"#utility.yul\":9622:9648   */\n      swap1\n      pop\n        /* \"#utility.yul\":9658:9729   */\n      tag_284\n        /* \"#utility.yul\":9726:9727   */\n      0x00\n        /* \"#utility.yul\":9715:9724   */\n      dup4\n        /* \"#utility.yul\":9711:9728   */\n      add\n        /* \"#utility.yul\":9702:9708   */\n      dup7\n        /* \"#utility.yul\":9658:9729   */\n      tag_257\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":9739:9811   */\n      tag_285\n        /* \"#utility.yul\":9807:9809   */\n      0x20\n        /* \"#utility.yul\":9796:9805   */\n      dup4\n        /* \"#utility.yul\":9792:9810   */\n      add\n        /* \"#utility.yul\":9783:9789   */\n      dup6\n        /* \"#utility.yul\":9739:9811   */\n      tag_257\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":9821:9893   */\n      tag_286\n        /* \"#utility.yul\":9889:9891   */\n      0x40\n        /* \"#utility.yul\":9878:9887   */\n      dup4\n        /* \"#utility.yul\":9874:9892   */\n      add\n        /* \"#utility.yul\":9865:9871   */\n      dup5\n        /* \"#utility.yul\":9821:9893   */\n      tag_257\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":9458:9900   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9987:10156   */\n    tag_230:\n        /* \"#utility.yul\":10071:10082   */\n      0x00\n        /* \"#utility.yul\":10105:10111   */\n      dup3\n        /* \"#utility.yul\":10100:10103   */\n      dup3\n        /* \"#utility.yul\":10093:10112   */\n      mstore\n        /* \"#utility.yul\":10145:10149   */\n      0x20\n        /* \"#utility.yul\":10140:10143   */\n      dup3\n        /* \"#utility.yul\":10136:10150   */\n      add\n        /* \"#utility.yul\":10121:10150   */\n      swap1\n      pop\n        /* \"#utility.yul\":9987:10156   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10162:10467   */\n    tag_113:\n        /* \"#utility.yul\":10202:10205   */\n      0x00\n        /* \"#utility.yul\":10221:10241   */\n      tag_291\n        /* \"#utility.yul\":10239:10240   */\n      dup3\n        /* \"#utility.yul\":10221:10241   */\n      tag_256\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":10216:10241   */\n      swap2\n      pop\n        /* \"#utility.yul\":10255:10275   */\n      tag_292\n        /* \"#utility.yul\":10273:10274   */\n      dup4\n        /* \"#utility.yul\":10255:10275   */\n      tag_256\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":10250:10275   */\n      swap3\n      pop\n        /* \"#utility.yul\":10409:10410   */\n      dup3\n        /* \"#utility.yul\":10341:10407   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10337:10411   */\n      sub\n        /* \"#utility.yul\":10334:10335   */\n      dup3\n        /* \"#utility.yul\":10331:10412   */\n      gt\n        /* \"#utility.yul\":10328:10435   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":10415:10433   */\n      tag_294\n      tag_295\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":10328:10435   */\n    tag_293:\n        /* \"#utility.yul\":10459:10460   */\n      dup3\n        /* \"#utility.yul\":10456:10457   */\n      dup3\n        /* \"#utility.yul\":10452:10461   */\n      add\n        /* \"#utility.yul\":10445:10461   */\n      swap1\n      pop\n        /* \"#utility.yul\":10162:10467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10473:10821   */\n    tag_111:\n        /* \"#utility.yul\":10513:10520   */\n      0x00\n        /* \"#utility.yul\":10536:10556   */\n      tag_297\n        /* \"#utility.yul\":10554:10555   */\n      dup3\n        /* \"#utility.yul\":10536:10556   */\n      tag_256\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":10531:10556   */\n      swap2\n      pop\n        /* \"#utility.yul\":10570:10590   */\n      tag_298\n        /* \"#utility.yul\":10588:10589   */\n      dup4\n        /* \"#utility.yul\":10570:10590   */\n      tag_256\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":10565:10590   */\n      swap3\n      pop\n        /* \"#utility.yul\":10758:10759   */\n      dup2\n        /* \"#utility.yul\":10690:10756   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10686:10760   */\n      div\n        /* \"#utility.yul\":10683:10684   */\n      dup4\n        /* \"#utility.yul\":10680:10761   */\n      gt\n        /* \"#utility.yul\":10675:10676   */\n      dup3\n        /* \"#utility.yul\":10668:10677   */\n      iszero\n        /* \"#utility.yul\":10661:10678   */\n      iszero\n        /* \"#utility.yul\":10657:10762   */\n      and\n        /* \"#utility.yul\":10654:10785   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":10765:10783   */\n      tag_300\n      tag_295\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":10654:10785   */\n    tag_299:\n        /* \"#utility.yul\":10813:10814   */\n      dup3\n        /* \"#utility.yul\":10810:10811   */\n      dup3\n        /* \"#utility.yul\":10806:10815   */\n      mul\n        /* \"#utility.yul\":10795:10815   */\n      swap1\n      pop\n        /* \"#utility.yul\":10473:10821   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10827:11018   */\n    tag_173:\n        /* \"#utility.yul\":10867:10871   */\n      0x00\n        /* \"#utility.yul\":10887:10907   */\n      tag_302\n        /* \"#utility.yul\":10905:10906   */\n      dup3\n        /* \"#utility.yul\":10887:10907   */\n      tag_256\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":10882:10907   */\n      swap2\n      pop\n        /* \"#utility.yul\":10921:10941   */\n      tag_303\n        /* \"#utility.yul\":10939:10940   */\n      dup4\n        /* \"#utility.yul\":10921:10941   */\n      tag_256\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":10916:10941   */\n      swap3\n      pop\n        /* \"#utility.yul\":10960:10961   */\n      dup3\n        /* \"#utility.yul\":10957:10958   */\n      dup3\n        /* \"#utility.yul\":10954:10962   */\n      lt\n        /* \"#utility.yul\":10951:10985   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":10965:10983   */\n      tag_305\n      tag_295\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":10951:10985   */\n    tag_304:\n        /* \"#utility.yul\":11010:11011   */\n      dup3\n        /* \"#utility.yul\":11007:11008   */\n      dup3\n        /* \"#utility.yul\":11003:11012   */\n      sub\n        /* \"#utility.yul\":10995:11012   */\n      swap1\n      pop\n        /* \"#utility.yul\":10827:11018   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11024:11120   */\n    tag_222:\n        /* \"#utility.yul\":11061:11068   */\n      0x00\n        /* \"#utility.yul\":11090:11114   */\n      tag_307\n        /* \"#utility.yul\":11108:11113   */\n      dup3\n        /* \"#utility.yul\":11090:11114   */\n      tag_308\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":11079:11114   */\n      swap1\n      pop\n        /* \"#utility.yul\":11024:11120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11126:11216   */\n    tag_226:\n        /* \"#utility.yul\":11160:11167   */\n      0x00\n        /* \"#utility.yul\":11203:11208   */\n      dup2\n        /* \"#utility.yul\":11196:11209   */\n      iszero\n        /* \"#utility.yul\":11189:11210   */\n      iszero\n        /* \"#utility.yul\":11178:11210   */\n      swap1\n      pop\n        /* \"#utility.yul\":11126:11216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11222:11348   */\n    tag_308:\n        /* \"#utility.yul\":11259:11266   */\n      0x00\n        /* \"#utility.yul\":11299:11341   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11292:11297   */\n      dup3\n        /* \"#utility.yul\":11288:11342   */\n      and\n        /* \"#utility.yul\":11277:11342   */\n      swap1\n      pop\n        /* \"#utility.yul\":11222:11348   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11354:11431   */\n    tag_256:\n        /* \"#utility.yul\":11391:11398   */\n      0x00\n        /* \"#utility.yul\":11420:11425   */\n      dup2\n        /* \"#utility.yul\":11409:11425   */\n      swap1\n      pop\n        /* \"#utility.yul\":11354:11431   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11437:11617   */\n    tag_295:\n        /* \"#utility.yul\":11485:11562   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11482:11483   */\n      0x00\n        /* \"#utility.yul\":11475:11563   */\n      mstore\n        /* \"#utility.yul\":11582:11586   */\n      0x11\n        /* \"#utility.yul\":11579:11580   */\n      0x04\n        /* \"#utility.yul\":11572:11587   */\n      mstore\n        /* \"#utility.yul\":11606:11610   */\n      0x24\n        /* \"#utility.yul\":11603:11604   */\n      0x00\n        /* \"#utility.yul\":11596:11611   */\n      revert\n        /* \"#utility.yul\":11746:11863   */\n    tag_193:\n        /* \"#utility.yul\":11855:11856   */\n      0x00\n        /* \"#utility.yul\":11852:11853   */\n      dup1\n        /* \"#utility.yul\":11845:11857   */\n      revert\n        /* \"#utility.yul\":11869:12094   */\n    tag_232:\n        /* \"#utility.yul\":12009:12043   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":12005:12006   */\n      0x00\n        /* \"#utility.yul\":11997:12003   */\n      dup3\n        /* \"#utility.yul\":11993:12007   */\n      add\n        /* \"#utility.yul\":11986:12044   */\n      mstore\n        /* \"#utility.yul\":12078:12086   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12073:12075   */\n      0x20\n        /* \"#utility.yul\":12065:12071   */\n      dup3\n        /* \"#utility.yul\":12061:12076   */\n      add\n        /* \"#utility.yul\":12054:12087   */\n      mstore\n        /* \"#utility.yul\":11869:12094   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12100:12350   */\n    tag_237:\n        /* \"#utility.yul\":12240:12274   */\n      0x546f6b656e7320617265206f6e6c7920617661696c61626c6520616674657220\n        /* \"#utility.yul\":12236:12237   */\n      0x00\n        /* \"#utility.yul\":12228:12234   */\n      dup3\n        /* \"#utility.yul\":12224:12238   */\n      add\n        /* \"#utility.yul\":12217:12275   */\n      mstore\n        /* \"#utility.yul\":12309:12342   */\n      0x636f72726563742074696d6520706572696f642068617320656c617073656400\n        /* \"#utility.yul\":12304:12306   */\n      0x20\n        /* \"#utility.yul\":12296:12302   */\n      dup3\n        /* \"#utility.yul\":12292:12307   */\n      add\n        /* \"#utility.yul\":12285:12343   */\n      mstore\n        /* \"#utility.yul\":12100:12350   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12356:12607   */\n    tag_242:\n        /* \"#utility.yul\":12496:12530   */\n      0x4e6f7420656e6f75676820535441544520746f6b656e7320696e20796f757220\n        /* \"#utility.yul\":12492:12493   */\n      0x00\n        /* \"#utility.yul\":12484:12490   */\n      dup3\n        /* \"#utility.yul\":12480:12494   */\n      add\n        /* \"#utility.yul\":12473:12531   */\n      mstore\n        /* \"#utility.yul\":12565:12599   */\n      0x77616c6c65742c20706c6561736520747279206c657373657220616d6f756e74\n        /* \"#utility.yul\":12560:12562   */\n      0x20\n        /* \"#utility.yul\":12552:12558   */\n      dup3\n        /* \"#utility.yul\":12548:12563   */\n      add\n        /* \"#utility.yul\":12541:12600   */\n      mstore\n        /* \"#utility.yul\":12356:12607   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12613:12795   */\n    tag_247:\n        /* \"#utility.yul\":12753:12787   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12749:12750   */\n      0x00\n        /* \"#utility.yul\":12741:12747   */\n      dup3\n        /* \"#utility.yul\":12737:12751   */\n      add\n        /* \"#utility.yul\":12730:12788   */\n      mstore\n        /* \"#utility.yul\":12613:12795   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12801:12923   */\n    tag_178:\n        /* \"#utility.yul\":12874:12898   */\n      tag_321\n        /* \"#utility.yul\":12892:12897   */\n      dup2\n        /* \"#utility.yul\":12874:12898   */\n      tag_222\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":12867:12872   */\n      dup2\n        /* \"#utility.yul\":12864:12899   */\n      eq\n        /* \"#utility.yul\":12854:12917   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":12913:12914   */\n      0x00\n        /* \"#utility.yul\":12910:12911   */\n      dup1\n        /* \"#utility.yul\":12903:12915   */\n      revert\n        /* \"#utility.yul\":12854:12917   */\n    tag_322:\n        /* \"#utility.yul\":12801:12923   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12929:13045   */\n    tag_182:\n        /* \"#utility.yul\":12999:13020   */\n      tag_324\n        /* \"#utility.yul\":13014:13019   */\n      dup2\n        /* \"#utility.yul\":12999:13020   */\n      tag_226\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":12992:12997   */\n      dup2\n        /* \"#utility.yul\":12989:13021   */\n      eq\n        /* \"#utility.yul\":12979:13039   */\n      tag_325\n      jumpi\n        /* \"#utility.yul\":13035:13036   */\n      0x00\n        /* \"#utility.yul\":13032:13033   */\n      dup1\n        /* \"#utility.yul\":13025:13037   */\n      revert\n        /* \"#utility.yul\":12979:13039   */\n    tag_325:\n        /* \"#utility.yul\":12929:13045   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13051:13173   */\n    tag_186:\n        /* \"#utility.yul\":13124:13148   */\n      tag_327\n        /* \"#utility.yul\":13142:13147   */\n      dup2\n        /* \"#utility.yul\":13124:13148   */\n      tag_256\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":13117:13122   */\n      dup2\n        /* \"#utility.yul\":13114:13149   */\n      eq\n        /* \"#utility.yul\":13104:13167   */\n      tag_328\n      jumpi\n        /* \"#utility.yul\":13163:13164   */\n      0x00\n        /* \"#utility.yul\":13160:13161   */\n      dup1\n        /* \"#utility.yul\":13153:13165   */\n      revert\n        /* \"#utility.yul\":13104:13167   */\n    tag_328:\n        /* \"#utility.yul\":13051:13173   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207625a176fe696cd0adb5a835b84eb3c394b5f4fac65df23fba79bec06e98b74564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_154": {
									"entryPoint": 50,
									"id": 154,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 58,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611ae58061010d6000396000f3fe6080604052600436106100a75760003560e01c80638381e182116100645780638381e182146101d35780638da5cb5b14610203578063d48bfca71461022e578063dcb4319114610257578063e12fb1b914610296578063f2fde38b146102d3576100a7565b80634302a2f2146100ac5780635fa7b584146100e95780636386c1c7146101125780636e9c931c1461014f578063715018a61461017f57806383374cab14610196575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce91906113fc565b6102fc565b6040516100e09190611791565b60405180910390f35b3480156100f557600080fd5b50610110600480360381019061010b91906113fc565b610314565b005b34801561011e57600080fd5b50610139600480360381019061013491906113fc565b6103eb565b6040516101469190611776565b60405180910390f35b61016960048036038101906101649190611503565b6104f7565b60405161017691906116db565b60405180910390f35b34801561018b57600080fd5b50610194610aee565b005b3480156101a257600080fd5b506101bd60048036038101906101b891906113fc565b610b76565b6040516101ca9190611791565b60405180910390f35b6101ed60048036038101906101e891906114c3565b610c17565b6040516101fa91906116db565b60405180910390f35b34801561020f57600080fd5b50610218611041565b6040516102259190611660565b60405180910390f35b34801561023a57600080fd5b50610255600480360381019061025091906113fc565b61106a565b005b34801561026357600080fd5b5061027e60048036038101906102799190611429565b611140565b60405161028d939291906117ac565b60405180910390f35b3480156102a257600080fd5b506102bd60048036038101906102b891906113fc565b611177565b6040516102ca91906116db565b60405180910390f35b3480156102df57600080fd5b506102fa60048036038101906102f591906113fc565b611197565b005b60036020528060005260406000206000915090505481565b61031c61128f565b73ffffffffffffffffffffffffffffffffffffffff1661033a611041565b73ffffffffffffffffffffffffffffffffffffffff1614610390576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038790611756565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6103f3611387565b81600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661044a57600080fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820154815260200160018201548152602001600282015481525050915050919050565b600082600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661055057600080fd5b8373ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016105899190611660565b60206040518083038186803b1580156105a157600080fd5b505afa1580156105b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d99190611496565b85111561061b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061290611736565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b81526004016106589392919061167b565b602060405180830381600087803b15801561067257600080fd5b505af1158015610686573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106aa9190611469565b6106b357600080fd5b6000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414156108615784600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555062015180836107ce919061184a565b426107d991906117f4565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550610a14565b6108f385600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461129790919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506201518083610985919061184a565b4261099091906117f4565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055505b610a6685600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461129790919063ffffffff16565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fe5cfeeb5fcb96c1c52a55137c15e7f46d34d100d256c5396efc087c43d2fde4b3386604051610ada9291906116b2565b60405180910390a160019150509392505050565b610af661128f565b73ffffffffffffffffffffffffffffffffffffffff16610b14611041565b73ffffffffffffffffffffffffffffffffffffffff1614610b6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6190611756565b60405180910390fd5b610b7460006112ad565b565b600081600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610bcf57600080fd5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b600081600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610c7057600080fd5b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015411610cfc57600080fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201544211610dbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db490611716565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610df89291906116b2565b602060405180830381600087803b158015610e1257600080fd5b505af1158015610e26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4a9190611469565b610e5357600080fd5b610ea584600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461137190919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f7a84600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015461129790919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f9845e367b683334e5c0b12d7b81721ac518e649376fa65e3d68324e8f34f2679338560405161102e9291906116b2565b60405180910390a1600191505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61107261128f565b73ffffffffffffffffffffffffffffffffffffffff16611090611041565b73ffffffffffffffffffffffffffffffffffffffff16146110e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110dd90611756565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6002602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020154905083565b60016020528060005260406000206000915054906101000a900460ff1681565b61119f61128f565b73ffffffffffffffffffffffffffffffffffffffff166111bd611041565b73ffffffffffffffffffffffffffffffffffffffff1614611213576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120a90611756565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611283576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127a906116f6565b60405180910390fd5b61128c816112ad565b50565b600033905090565b600081836112a591906117f4565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000818361137f91906118a4565b905092915050565b60405180606001604052806000815260200160008152602001600081525090565b6000813590506113b781611a6a565b92915050565b6000815190506113cc81611a81565b92915050565b6000813590506113e181611a98565b92915050565b6000815190506113f681611a98565b92915050565b6000602082840312156114125761141161194f565b5b6000611420848285016113a8565b91505092915050565b600080604083850312156114405761143f61194f565b5b600061144e858286016113a8565b925050602061145f858286016113a8565b9150509250929050565b60006020828403121561147f5761147e61194f565b5b600061148d848285016113bd565b91505092915050565b6000602082840312156114ac576114ab61194f565b5b60006114ba848285016113e7565b91505092915050565b600080604083850312156114da576114d961194f565b5b60006114e8858286016113d2565b92505060206114f9858286016113a8565b9150509250929050565b60008060006060848603121561151c5761151b61194f565b5b600061152a868287016113d2565b935050602061153b868287016113a8565b925050604061154c868287016113d2565b9150509250925092565b61155f816118d8565b82525050565b61156e816118ea565b82525050565b60006115816026836117e3565b915061158c82611954565b604082019050919050565b60006115a4603f836117e3565b91506115af826119a3565b604082019050919050565b60006115c76040836117e3565b91506115d2826119f2565b604082019050919050565b60006115ea6020836117e3565b91506115f582611a41565b602082019050919050565b6060820160008201516116166000850182611642565b5060208201516116296020850182611642565b50604082015161163c6040850182611642565b50505050565b61164b81611916565b82525050565b61165a81611916565b82525050565b60006020820190506116756000830184611556565b92915050565b60006060820190506116906000830186611556565b61169d6020830185611556565b6116aa6040830184611651565b949350505050565b60006040820190506116c76000830185611556565b6116d46020830184611651565b9392505050565b60006020820190506116f06000830184611565565b92915050565b6000602082019050818103600083015261170f81611574565b9050919050565b6000602082019050818103600083015261172f81611597565b9050919050565b6000602082019050818103600083015261174f816115ba565b9050919050565b6000602082019050818103600083015261176f816115dd565b9050919050565b600060608201905061178b6000830184611600565b92915050565b60006020820190506117a66000830184611651565b92915050565b60006060820190506117c16000830186611651565b6117ce6020830185611651565b6117db6040830184611651565b949350505050565b600082825260208201905092915050565b60006117ff82611916565b915061180a83611916565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561183f5761183e611920565b5b828201905092915050565b600061185582611916565b915061186083611916565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561189957611898611920565b5b828202905092915050565b60006118af82611916565b91506118ba83611916565b9250828210156118cd576118cc611920565b5b828203905092915050565b60006118e3826118f6565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e7320617265206f6e6c7920617661696c61626c652061667465722060008201527f636f72726563742074696d6520706572696f642068617320656c617073656400602082015250565b7f4e6f7420656e6f75676820535441544520746f6b656e7320696e20796f75722060008201527f77616c6c65742c20706c6561736520747279206c657373657220616d6f756e74602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b611a73816118d8565b8114611a7e57600080fd5b50565b611a8a816118ea565b8114611a9557600080fd5b50565b611aa181611916565b8114611aac57600080fd5b5056fea26469706673582212207625a176fe696cd0adb5a835b84eb3c394b5f4fac65df23fba79bec06e98b74564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1AE5 DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8381E182 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8381E182 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0xD48BFCA7 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xDCB43191 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xE12FB1B9 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D3 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x4302A2F2 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x5FA7B584 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x6386C1C7 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x6E9C931C EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x83374CAB EQ PUSH2 0x196 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x1791 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x314 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1503 JUMP JUMPDEST PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH2 0xAEE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1791 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x14C3 JUMP JUMPDEST PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x218 PUSH2 0x1041 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x1660 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x106A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x1429 JUMP JUMPDEST PUSH2 0x1140 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x1197 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x31C PUSH2 0x128F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x33A PUSH2 0x1041 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x390 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x387 SWAP1 PUSH2 0x1756 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x1387 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x550 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x1660 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D9 SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x61B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x612 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x658 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x686 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x861 JUMPI DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH3 0x15180 DUP4 PUSH2 0x7CE SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST TIMESTAMP PUSH2 0x7D9 SWAP2 SWAP1 PUSH2 0x17F4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xA14 JUMP JUMPDEST PUSH2 0x8F3 DUP6 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1297 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH3 0x15180 DUP4 PUSH2 0x985 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST TIMESTAMP PUSH2 0x990 SWAP2 SWAP1 PUSH2 0x17F4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0xA66 DUP6 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1297 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xE5CFEEB5FCB96C1C52A55137C15E7F46D34D100D256C5396EFC087C43D2FDE4B CALLER DUP7 PUSH1 0x40 MLOAD PUSH2 0xADA SWAP3 SWAP2 SWAP1 PUSH2 0x16B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xAF6 PUSH2 0x128F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB14 PUSH2 0x1041 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB61 SWAP1 PUSH2 0x1756 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB74 PUSH1 0x0 PUSH2 0x12AD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT PUSH2 0xCFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0xDBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB4 SWAP1 PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF8 SWAP3 SWAP2 SWAP1 PUSH2 0x16B2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE4A SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0xE53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEA5 DUP5 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1371 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xF7A DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1297 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x9845E367B683334E5C0B12D7B81721AC518E649376FA65E3D68324E8F34F2679 CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0x102E SWAP3 SWAP2 SWAP1 PUSH2 0x16B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1072 PUSH2 0x128F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1090 PUSH2 0x1041 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DD SWAP1 PUSH2 0x1756 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x119F PUSH2 0x128F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11BD PUSH2 0x1041 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1213 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120A SWAP1 PUSH2 0x1756 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1283 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127A SWAP1 PUSH2 0x16F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x128C DUP2 PUSH2 0x12AD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x12A5 SWAP2 SWAP1 PUSH2 0x17F4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x137F SWAP2 SWAP1 PUSH2 0x18A4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13B7 DUP2 PUSH2 0x1A6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x13CC DUP2 PUSH2 0x1A81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13E1 DUP2 PUSH2 0x1A98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x13F6 DUP2 PUSH2 0x1A98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1412 JUMPI PUSH2 0x1411 PUSH2 0x194F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1420 DUP5 DUP3 DUP6 ADD PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1440 JUMPI PUSH2 0x143F PUSH2 0x194F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x144E DUP6 DUP3 DUP7 ADD PUSH2 0x13A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x145F DUP6 DUP3 DUP7 ADD PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x147F JUMPI PUSH2 0x147E PUSH2 0x194F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x148D DUP5 DUP3 DUP6 ADD PUSH2 0x13BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14AC JUMPI PUSH2 0x14AB PUSH2 0x194F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14BA DUP5 DUP3 DUP6 ADD PUSH2 0x13E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14DA JUMPI PUSH2 0x14D9 PUSH2 0x194F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14E8 DUP6 DUP3 DUP7 ADD PUSH2 0x13D2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14F9 DUP6 DUP3 DUP7 ADD PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x151C JUMPI PUSH2 0x151B PUSH2 0x194F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x152A DUP7 DUP3 DUP8 ADD PUSH2 0x13D2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x153B DUP7 DUP3 DUP8 ADD PUSH2 0x13A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x154C DUP7 DUP3 DUP8 ADD PUSH2 0x13D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x155F DUP2 PUSH2 0x18D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x156E DUP2 PUSH2 0x18EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1581 PUSH1 0x26 DUP4 PUSH2 0x17E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x158C DUP3 PUSH2 0x1954 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A4 PUSH1 0x3F DUP4 PUSH2 0x17E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x15AF DUP3 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C7 PUSH1 0x40 DUP4 PUSH2 0x17E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x15D2 DUP3 PUSH2 0x19F2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15EA PUSH1 0x20 DUP4 PUSH2 0x17E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x15F5 DUP3 PUSH2 0x1A41 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1616 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1642 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1629 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1642 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x163C PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1642 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x164B DUP2 PUSH2 0x1916 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x165A DUP2 PUSH2 0x1916 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1675 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1556 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1690 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x169D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x16AA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1651 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16C7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x16D4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1651 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16F0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1565 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x170F DUP2 PUSH2 0x1574 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x172F DUP2 PUSH2 0x1597 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x174F DUP2 PUSH2 0x15BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x176F DUP2 PUSH2 0x15DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x178B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1600 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1651 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x17C1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x17CE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x17DB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1651 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17FF DUP3 PUSH2 0x1916 JUMP JUMPDEST SWAP2 POP PUSH2 0x180A DUP4 PUSH2 0x1916 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x183F JUMPI PUSH2 0x183E PUSH2 0x1920 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1855 DUP3 PUSH2 0x1916 JUMP JUMPDEST SWAP2 POP PUSH2 0x1860 DUP4 PUSH2 0x1916 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1899 JUMPI PUSH2 0x1898 PUSH2 0x1920 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18AF DUP3 PUSH2 0x1916 JUMP JUMPDEST SWAP2 POP PUSH2 0x18BA DUP4 PUSH2 0x1916 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x18CD JUMPI PUSH2 0x18CC PUSH2 0x1920 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E3 DUP3 PUSH2 0x18F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E7320617265206F6E6C7920617661696C61626C6520616674657220 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x636F72726563742074696D6520706572696F642068617320656C617073656400 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820535441544520746F6B656E7320696E20796F757220 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x77616C6C65742C20706C6561736520747279206C657373657220616D6F756E74 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1A73 DUP2 PUSH2 0x18D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A8A DUP2 PUSH2 0x18EA JUMP JUMPDEST DUP2 EQ PUSH2 0x1A95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1AA1 DUP2 PUSH2 0x1916 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x25A176FE696CD0ADB5A835B84EB3C394B5F4FAC65DF23F 0xBA PUSH26 0xBEC06E98B74564736F6C63430008070033000000000000000000 ",
							"sourceMap": "233:3064:4:-:0;;;;;;;;;;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;233:3064:4;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;233:3064:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@StakeMap_504": {
									"entryPoint": 4416,
									"id": 504,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_154": {
									"entryPoint": 4751,
									"id": 154,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 4781,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addToken_547": {
									"entryPoint": 4202,
									"id": 547,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_340": {
									"entryPoint": 4759,
									"id": 340,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getTokenTotalStaked_821": {
									"entryPoint": 2934,
									"id": 821,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserInfo_805": {
									"entryPoint": 1003,
									"id": 805,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": 4161,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeToken_562": {
									"entryPoint": 788,
									"id": 562,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_60": {
									"entryPoint": 2798,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_696": {
									"entryPoint": 1271,
									"id": 696,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@sub_355": {
									"entryPoint": 4977,
									"id": 355,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenTotalStaked_508": {
									"entryPoint": 764,
									"id": 508,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 4503,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstake_785": {
									"entryPoint": 3095,
									"id": 785,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@validTokens_497": {
									"entryPoint": 4471,
									"id": 497,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 5315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256": {
									"entryPoint": 5379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68af102850755d0b1e4ca466e6b03033fe428ed967826f39fe50c0d5fdcd1a5a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_967147515f75b3023d408738777e319efb166df8b2b46ac44263682325f5cb28_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_stakingInfo_$493_memory_ptr_to_t_struct$_stakingInfo_$493_memory_ptr_fromStack": {
									"entryPoint": 5632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 5698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5755,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5810,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68af102850755d0b1e4ca466e6b03033fe428ed967826f39fe50c0d5fdcd1a5a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_967147515f75b3023d408738777e319efb166df8b2b46ac44263682325f5cb28__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_stakingInfo_$493_memory_ptr__to_t_struct$_stakingInfo_$493_memory_ptr__fromStack_reversed": {
									"entryPoint": 6006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6060,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6432,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6479,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 6484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68af102850755d0b1e4ca466e6b03033fe428ed967826f39fe50c0d5fdcd1a5a": {
									"entryPoint": 6563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_967147515f75b3023d408738777e319efb166df8b2b46ac44263682325f5cb28": {
									"entryPoint": 6642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 6721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13176:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "7:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:5",
														"type": ""
													}
												],
												"src": "152:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:5",
														"type": ""
													}
												],
												"src": "295:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:5",
														"type": ""
													}
												],
												"src": "440:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "703:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:5"
															},
															"nodeType": "YulIf",
															"src": "665:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "794:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "809:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "813:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "838:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "884:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "893:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "848:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "838:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:5",
														"type": ""
													}
												],
												"src": "589:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1007:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1053:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1055:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1055:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1055:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1028:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1037:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1024:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1024:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1049:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1020:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1020:32:5"
															},
															"nodeType": "YulIf",
															"src": "1017:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1146:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1161:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1175:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1165:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1190:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1225:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1236:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1221:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1221:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1245:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1200:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1200:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1190:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1273:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1288:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1302:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1292:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1318:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1353:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1364:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1349:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1349:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1373:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1328:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1328:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1318:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "969:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "980:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "992:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1000:6:5",
														"type": ""
													}
												],
												"src": "924:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1478:271:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1524:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1526:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1526:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1499:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1508:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1495:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1495:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1520:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1491:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:32:5"
															},
															"nodeType": "YulIf",
															"src": "1488:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1617:125:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1632:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1646:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1636:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1661:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1704:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1715:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1700:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1700:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1724:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1671:28:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1671:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1661:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1448:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1459:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1471:6:5",
														"type": ""
													}
												],
												"src": "1404:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1832:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1878:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1880:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1880:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1853:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1862:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1849:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1849:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1874:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1845:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1845:32:5"
															},
															"nodeType": "YulIf",
															"src": "1842:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1971:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1986:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2000:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1990:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2015:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2061:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2072:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2057:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2057:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2081:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2025:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2025:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2015:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1802:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1813:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1825:6:5",
														"type": ""
													}
												],
												"src": "1755:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2195:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2241:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2243:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2243:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2243:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2216:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2225:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2212:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2212:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2237:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2208:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2208:32:5"
															},
															"nodeType": "YulIf",
															"src": "2205:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2334:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2349:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2363:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2353:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2378:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2413:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2424:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2409:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2409:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2433:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2388:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2388:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2378:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2461:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2476:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2490:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2480:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2506:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2541:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2552:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2537:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2537:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2561:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2516:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2516:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2506:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2157:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2168:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2180:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2188:6:5",
														"type": ""
													}
												],
												"src": "2112:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2692:519:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2738:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2740:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2740:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2740:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2713:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2722:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2709:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2709:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2734:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2705:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:32:5"
															},
															"nodeType": "YulIf",
															"src": "2702:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2831:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2846:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2860:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2850:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2875:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2910:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2921:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2906:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2906:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2930:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2885:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2885:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2875:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2958:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2973:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2987:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2977:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3003:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3038:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3049:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3034:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3034:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3058:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3013:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3013:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3003:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3086:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3101:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3115:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3105:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3131:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3166:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3177:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3162:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3162:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3186:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3141:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3141:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3131:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2646:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2657:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2669:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2677:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2685:6:5",
														"type": ""
													}
												],
												"src": "2592:619:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3299:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3322:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3304:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3304:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3292:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3270:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3277:3:5",
														"type": ""
													}
												],
												"src": "3217:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3400:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3417:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3437:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3422:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3422:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3410:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3410:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3410:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3388:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3395:3:5",
														"type": ""
													}
												],
												"src": "3341:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3602:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3612:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3678:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3683:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3619:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3619:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3612:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3784:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "3695:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3695:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3695:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3797:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3808:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3813:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3804:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3797:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3590:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3598:3:5",
														"type": ""
													}
												],
												"src": "3456:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3974:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3984:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4050:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4055:2:5",
																		"type": "",
																		"value": "63"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3991:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3991:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3984:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4156:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68af102850755d0b1e4ca466e6b03033fe428ed967826f39fe50c0d5fdcd1a5a",
																	"nodeType": "YulIdentifier",
																	"src": "4067:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4067:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4067:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4169:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4180:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4185:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4176:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4176:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4169:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68af102850755d0b1e4ca466e6b03033fe428ed967826f39fe50c0d5fdcd1a5a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3962:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3970:3:5",
														"type": ""
													}
												],
												"src": "3828:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4346:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4356:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4422:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4427:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4363:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4363:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4356:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4528:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_967147515f75b3023d408738777e319efb166df8b2b46ac44263682325f5cb28",
																	"nodeType": "YulIdentifier",
																	"src": "4439:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4439:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4439:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4541:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4552:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4557:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4548:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4548:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4541:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_967147515f75b3023d408738777e319efb166df8b2b46ac44263682325f5cb28_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4334:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4342:3:5",
														"type": ""
													}
												],
												"src": "4200:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4718:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4728:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4794:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4799:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4735:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4735:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4728:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4900:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4811:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4811:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4811:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4913:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4924:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4929:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4920:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4920:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4913:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4706:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4714:3:5",
														"type": ""
													}
												],
												"src": "4572:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5130:586:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5140:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5156:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5161:4:5",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5152:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5152:14:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "5144:4:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5176:166:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5213:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5243:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5250:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5239:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5239:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5233:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5233:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5217:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5303:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5321:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5326:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5317:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5317:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5269:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5269:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5269:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5352:176:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5429:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5436:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5425:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5425:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5419:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5419:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5403:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5489:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5507:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5512:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5503:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5503:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5455:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5455:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5455:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5538:171:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5580:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5610:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5617:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5606:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5606:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5600:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5600:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5584:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5670:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5688:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5693:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5684:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5684:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5636:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5636:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5636:63:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_stakingInfo_$493_memory_ptr_to_t_struct$_stakingInfo_$493_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5117:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5124:3:5",
														"type": ""
													}
												],
												"src": "5008:708:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5777:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5794:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5817:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5799:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5799:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5787:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5787:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5787:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5765:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5772:3:5",
														"type": ""
													}
												],
												"src": "5722:108:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5901:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5918:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5941:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5923:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5923:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5911:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5911:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5911:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5889:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5896:3:5",
														"type": ""
													}
												],
												"src": "5836:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6058:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6068:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6080:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6091:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6076:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6076:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6068:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6148:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6161:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6172:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6157:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6157:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6104:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6104:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6104:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6030:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6042:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6053:4:5",
														"type": ""
													}
												],
												"src": "5960:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6342:288:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6352:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6364:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6375:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6360:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6360:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6352:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6432:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6445:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6456:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6441:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6441:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6388:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6388:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6388:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6513:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6526:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6537:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6522:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6522:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6469:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6469:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6469:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6595:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6608:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6619:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6604:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6604:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6551:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6551:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6551:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6298:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6310:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6318:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6326:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6337:4:5",
														"type": ""
													}
												],
												"src": "6188:442:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6762:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6772:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6784:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6795:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6780:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6780:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6772:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6852:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6865:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6876:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6861:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6861:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6808:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6808:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6808:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6933:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6946:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6957:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6942:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6942:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6889:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6889:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6889:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6726:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6738:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6746:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6757:4:5",
														"type": ""
													}
												],
												"src": "6636:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7066:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7076:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7088:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7099:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7084:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7084:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7076:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7150:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7163:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7174:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7159:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7159:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7112:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7112:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7112:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7038:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7050:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7061:4:5",
														"type": ""
													}
												],
												"src": "6974:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7361:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7371:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7383:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7394:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7379:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7379:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7371:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7418:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7429:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7414:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7414:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7437:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7443:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7433:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7433:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7407:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7407:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7407:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7463:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7597:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7471:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7471:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7463:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7341:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7356:4:5",
														"type": ""
													}
												],
												"src": "7190:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7786:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7796:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7808:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7819:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7804:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7804:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7796:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7843:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7854:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7839:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7839:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7862:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7868:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7858:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7858:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7832:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7832:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7832:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7888:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8022:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68af102850755d0b1e4ca466e6b03033fe428ed967826f39fe50c0d5fdcd1a5a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7896:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7896:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7888:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68af102850755d0b1e4ca466e6b03033fe428ed967826f39fe50c0d5fdcd1a5a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7766:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7781:4:5",
														"type": ""
													}
												],
												"src": "7615:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8211:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8221:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8233:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8244:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8229:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8229:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8221:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8268:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8279:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8264:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8264:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8287:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8293:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8283:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8283:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8257:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8257:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8257:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8313:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8447:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_967147515f75b3023d408738777e319efb166df8b2b46ac44263682325f5cb28_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8321:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8321:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8313:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_967147515f75b3023d408738777e319efb166df8b2b46ac44263682325f5cb28__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8191:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8206:4:5",
														"type": ""
													}
												],
												"src": "8040:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8636:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8646:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8658:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8669:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8654:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8654:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8646:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8693:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8704:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8689:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8689:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8712:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8718:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8708:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8708:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8682:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8682:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8682:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8738:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8872:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8746:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8746:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8738:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8616:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8631:4:5",
														"type": ""
													}
												],
												"src": "8465:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9044:180:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9054:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9066:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9077:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9062:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9062:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9054:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9190:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9203:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9214:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9199:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9199:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_stakingInfo_$493_memory_ptr_to_t_struct$_stakingInfo_$493_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9090:99:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9090:127:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9090:127:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_stakingInfo_$493_memory_ptr__to_t_struct$_stakingInfo_$493_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9016:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9028:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9039:4:5",
														"type": ""
													}
												],
												"src": "8890:334:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9328:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9338:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9350:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9361:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9346:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9346:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9338:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9418:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9431:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9442:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9427:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9427:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9374:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9374:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9374:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9300:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9312:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9323:4:5",
														"type": ""
													}
												],
												"src": "9230:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9612:288:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9622:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9634:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9645:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9630:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9630:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9622:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9702:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9715:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9726:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9711:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9711:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9658:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9658:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9658:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9783:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9796:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9807:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9792:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9792:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9739:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9739:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9739:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9865:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9878:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9889:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9874:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9874:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9821:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9821:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9821:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9568:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9580:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9588:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9596:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9607:4:5",
														"type": ""
													}
												],
												"src": "9458:442:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9946:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9956:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9972:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9966:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9966:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9956:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9939:6:5",
														"type": ""
													}
												],
												"src": "9906:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10083:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10100:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10105:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10093:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10093:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10093:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10121:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10140:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10145:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10136:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10136:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10121:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10055:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10060:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10071:11:5",
														"type": ""
													}
												],
												"src": "9987:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10206:261:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10216:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10239:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10221:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10221:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10216:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10250:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10273:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10255:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10255:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10250:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10413:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10415:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10415:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10415:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10334:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10341:66:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10409:1:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10337:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10337:74:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10331:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10331:81:5"
															},
															"nodeType": "YulIf",
															"src": "10328:107:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10445:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10456:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10459:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10452:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10452:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10445:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10193:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10196:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10202:3:5",
														"type": ""
													}
												],
												"src": "10162:305:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10521:300:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10531:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10554:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10536:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10536:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10531:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10565:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10588:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10570:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10570:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10565:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10763:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10765:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10765:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10765:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10675:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10668:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10668:9:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10661:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10661:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10683:1:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10690:66:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10758:1:5"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "10686:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10686:74:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10680:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10680:81:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10657:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10657:105:5"
															},
															"nodeType": "YulIf",
															"src": "10654:131:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10795:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10810:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10813:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10806:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10806:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10795:7:5"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10504:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10507:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10513:7:5",
														"type": ""
													}
												],
												"src": "10473:348:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10872:146:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10882:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10905:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10887:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10887:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10882:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10916:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10939:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10921:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10921:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10916:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10963:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10965:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10965:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10965:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10957:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10960:1:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10954:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10954:8:5"
															},
															"nodeType": "YulIf",
															"src": "10951:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10995:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11007:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11010:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11003:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11003:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10995:4:5"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10858:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10861:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10867:4:5",
														"type": ""
													}
												],
												"src": "10827:191:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11069:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11079:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11108:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11090:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11090:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11079:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11051:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11061:7:5",
														"type": ""
													}
												],
												"src": "11024:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11168:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11178:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11203:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11196:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11196:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11189:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11189:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11178:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11150:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11160:7:5",
														"type": ""
													}
												],
												"src": "11126:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11267:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11277:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11292:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11299:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11288:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11288:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11277:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11249:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11259:7:5",
														"type": ""
													}
												],
												"src": "11222:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11399:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11409:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11420:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11409:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11381:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11391:7:5",
														"type": ""
													}
												],
												"src": "11354:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11465:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11482:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11485:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11475:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11475:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11475:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11579:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11582:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11572:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11572:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11572:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11603:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11606:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11596:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11596:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11596:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11437:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11712:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11729:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11732:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11722:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11722:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11722:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "11623:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11835:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11852:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11855:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11845:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11845:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11845:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "11746:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11975:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11997:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12005:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11993:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11993:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12009:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11986:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11986:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11986:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12065:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12073:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12061:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12061:15:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12078:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12054:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12054:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12054:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11967:6:5",
														"type": ""
													}
												],
												"src": "11869:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12206:144:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12228:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12236:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12224:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12224:14:5"
																	},
																	{
																		"hexValue": "546f6b656e7320617265206f6e6c7920617661696c61626c6520616674657220",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12240:34:5",
																		"type": "",
																		"value": "Tokens are only available after "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12217:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12217:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12217:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12296:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12304:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12292:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12292:15:5"
																	},
																	{
																		"hexValue": "636f72726563742074696d6520706572696f642068617320656c6170736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12309:33:5",
																		"type": "",
																		"value": "correct time period has elapsed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12285:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12285:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12285:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_68af102850755d0b1e4ca466e6b03033fe428ed967826f39fe50c0d5fdcd1a5a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12198:6:5",
														"type": ""
													}
												],
												"src": "12100:250:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12462:145:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12484:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12492:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12480:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12480:14:5"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820535441544520746f6b656e7320696e20796f757220",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12496:34:5",
																		"type": "",
																		"value": "Not enough STATE tokens in your "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12473:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12473:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12473:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12552:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12560:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12548:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12548:15:5"
																	},
																	{
																		"hexValue": "77616c6c65742c20706c6561736520747279206c657373657220616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12565:34:5",
																		"type": "",
																		"value": "wallet, please try lesser amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12541:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12541:59:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12541:59:5"
														}
													]
												},
												"name": "store_literal_in_memory_967147515f75b3023d408738777e319efb166df8b2b46ac44263682325f5cb28",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12454:6:5",
														"type": ""
													}
												],
												"src": "12356:251:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12719:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12741:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12749:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12737:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12737:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12753:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12730:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12730:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12730:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12711:6:5",
														"type": ""
													}
												],
												"src": "12613:182:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12844:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12901:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12910:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12913:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12903:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12903:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12903:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12867:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12892:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "12874:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12874:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12864:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12864:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12857:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12857:43:5"
															},
															"nodeType": "YulIf",
															"src": "12854:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12837:5:5",
														"type": ""
													}
												],
												"src": "12801:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12969:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13023:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13032:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13035:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13025:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13025:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13025:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12992:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13014:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "12999:14:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12999:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12989:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12989:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12982:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12982:40:5"
															},
															"nodeType": "YulIf",
															"src": "12979:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12962:5:5",
														"type": ""
													}
												],
												"src": "12929:116:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13094:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13151:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13160:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13163:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13153:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13153:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13153:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13117:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13142:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "13124:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13124:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13114:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13114:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13107:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13107:43:5"
															},
															"nodeType": "YulIf",
															"src": "13104:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13087:5:5",
														"type": ""
													}
												],
												"src": "13051:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_68af102850755d0b1e4ca466e6b03033fe428ed967826f39fe50c0d5fdcd1a5a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 63)\n        store_literal_in_memory_68af102850755d0b1e4ca466e6b03033fe428ed967826f39fe50c0d5fdcd1a5a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_967147515f75b3023d408738777e319efb166df8b2b46ac44263682325f5cb28_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 64)\n        store_literal_in_memory_967147515f75b3023d408738777e319efb166df8b2b46ac44263682325f5cb28(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    // struct staking.stakingInfo -> struct staking.stakingInfo\n    function abi_encode_t_struct$_stakingInfo_$493_memory_ptr_to_t_struct$_stakingInfo_$493_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // alreadyWithdrawn\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // releaseDate\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_68af102850755d0b1e4ca466e6b03033fe428ed967826f39fe50c0d5fdcd1a5a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68af102850755d0b1e4ca466e6b03033fe428ed967826f39fe50c0d5fdcd1a5a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_967147515f75b3023d408738777e319efb166df8b2b46ac44263682325f5cb28__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_967147515f75b3023d408738777e319efb166df8b2b46ac44263682325f5cb28_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_stakingInfo_$493_memory_ptr__to_t_struct$_stakingInfo_$493_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_struct$_stakingInfo_$493_memory_ptr_to_t_struct$_stakingInfo_$493_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_68af102850755d0b1e4ca466e6b03033fe428ed967826f39fe50c0d5fdcd1a5a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tokens are only available after \")\n\n        mstore(add(memPtr, 32), \"correct time period has elapsed\")\n\n    }\n\n    function store_literal_in_memory_967147515f75b3023d408738777e319efb166df8b2b46ac44263682325f5cb28(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough STATE tokens in your \")\n\n        mstore(add(memPtr, 32), \"wallet, please try lesser amount\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100a75760003560e01c80638381e182116100645780638381e182146101d35780638da5cb5b14610203578063d48bfca71461022e578063dcb4319114610257578063e12fb1b914610296578063f2fde38b146102d3576100a7565b80634302a2f2146100ac5780635fa7b584146100e95780636386c1c7146101125780636e9c931c1461014f578063715018a61461017f57806383374cab14610196575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce91906113fc565b6102fc565b6040516100e09190611791565b60405180910390f35b3480156100f557600080fd5b50610110600480360381019061010b91906113fc565b610314565b005b34801561011e57600080fd5b50610139600480360381019061013491906113fc565b6103eb565b6040516101469190611776565b60405180910390f35b61016960048036038101906101649190611503565b6104f7565b60405161017691906116db565b60405180910390f35b34801561018b57600080fd5b50610194610aee565b005b3480156101a257600080fd5b506101bd60048036038101906101b891906113fc565b610b76565b6040516101ca9190611791565b60405180910390f35b6101ed60048036038101906101e891906114c3565b610c17565b6040516101fa91906116db565b60405180910390f35b34801561020f57600080fd5b50610218611041565b6040516102259190611660565b60405180910390f35b34801561023a57600080fd5b50610255600480360381019061025091906113fc565b61106a565b005b34801561026357600080fd5b5061027e60048036038101906102799190611429565b611140565b60405161028d939291906117ac565b60405180910390f35b3480156102a257600080fd5b506102bd60048036038101906102b891906113fc565b611177565b6040516102ca91906116db565b60405180910390f35b3480156102df57600080fd5b506102fa60048036038101906102f591906113fc565b611197565b005b60036020528060005260406000206000915090505481565b61031c61128f565b73ffffffffffffffffffffffffffffffffffffffff1661033a611041565b73ffffffffffffffffffffffffffffffffffffffff1614610390576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038790611756565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6103f3611387565b81600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661044a57600080fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820154815260200160018201548152602001600282015481525050915050919050565b600082600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661055057600080fd5b8373ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016105899190611660565b60206040518083038186803b1580156105a157600080fd5b505afa1580156105b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d99190611496565b85111561061b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061290611736565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b81526004016106589392919061167b565b602060405180830381600087803b15801561067257600080fd5b505af1158015610686573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106aa9190611469565b6106b357600080fd5b6000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414156108615784600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555062015180836107ce919061184a565b426107d991906117f4565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550610a14565b6108f385600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461129790919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506201518083610985919061184a565b4261099091906117f4565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055505b610a6685600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461129790919063ffffffff16565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fe5cfeeb5fcb96c1c52a55137c15e7f46d34d100d256c5396efc087c43d2fde4b3386604051610ada9291906116b2565b60405180910390a160019150509392505050565b610af661128f565b73ffffffffffffffffffffffffffffffffffffffff16610b14611041565b73ffffffffffffffffffffffffffffffffffffffff1614610b6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6190611756565b60405180910390fd5b610b7460006112ad565b565b600081600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610bcf57600080fd5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b600081600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610c7057600080fd5b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015411610cfc57600080fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201544211610dbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db490611716565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610df89291906116b2565b602060405180830381600087803b158015610e1257600080fd5b505af1158015610e26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4a9190611469565b610e5357600080fd5b610ea584600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461137190919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f7a84600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015461129790919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f9845e367b683334e5c0b12d7b81721ac518e649376fa65e3d68324e8f34f2679338560405161102e9291906116b2565b60405180910390a1600191505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61107261128f565b73ffffffffffffffffffffffffffffffffffffffff16611090611041565b73ffffffffffffffffffffffffffffffffffffffff16146110e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110dd90611756565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6002602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020154905083565b60016020528060005260406000206000915054906101000a900460ff1681565b61119f61128f565b73ffffffffffffffffffffffffffffffffffffffff166111bd611041565b73ffffffffffffffffffffffffffffffffffffffff1614611213576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120a90611756565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611283576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127a906116f6565b60405180910390fd5b61128c816112ad565b50565b600033905090565b600081836112a591906117f4565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000818361137f91906118a4565b905092915050565b60405180606001604052806000815260200160008152602001600081525090565b6000813590506113b781611a6a565b92915050565b6000815190506113cc81611a81565b92915050565b6000813590506113e181611a98565b92915050565b6000815190506113f681611a98565b92915050565b6000602082840312156114125761141161194f565b5b6000611420848285016113a8565b91505092915050565b600080604083850312156114405761143f61194f565b5b600061144e858286016113a8565b925050602061145f858286016113a8565b9150509250929050565b60006020828403121561147f5761147e61194f565b5b600061148d848285016113bd565b91505092915050565b6000602082840312156114ac576114ab61194f565b5b60006114ba848285016113e7565b91505092915050565b600080604083850312156114da576114d961194f565b5b60006114e8858286016113d2565b92505060206114f9858286016113a8565b9150509250929050565b60008060006060848603121561151c5761151b61194f565b5b600061152a868287016113d2565b935050602061153b868287016113a8565b925050604061154c868287016113d2565b9150509250925092565b61155f816118d8565b82525050565b61156e816118ea565b82525050565b60006115816026836117e3565b915061158c82611954565b604082019050919050565b60006115a4603f836117e3565b91506115af826119a3565b604082019050919050565b60006115c76040836117e3565b91506115d2826119f2565b604082019050919050565b60006115ea6020836117e3565b91506115f582611a41565b602082019050919050565b6060820160008201516116166000850182611642565b5060208201516116296020850182611642565b50604082015161163c6040850182611642565b50505050565b61164b81611916565b82525050565b61165a81611916565b82525050565b60006020820190506116756000830184611556565b92915050565b60006060820190506116906000830186611556565b61169d6020830185611556565b6116aa6040830184611651565b949350505050565b60006040820190506116c76000830185611556565b6116d46020830184611651565b9392505050565b60006020820190506116f06000830184611565565b92915050565b6000602082019050818103600083015261170f81611574565b9050919050565b6000602082019050818103600083015261172f81611597565b9050919050565b6000602082019050818103600083015261174f816115ba565b9050919050565b6000602082019050818103600083015261176f816115dd565b9050919050565b600060608201905061178b6000830184611600565b92915050565b60006020820190506117a66000830184611651565b92915050565b60006060820190506117c16000830186611651565b6117ce6020830185611651565b6117db6040830184611651565b949350505050565b600082825260208201905092915050565b60006117ff82611916565b915061180a83611916565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561183f5761183e611920565b5b828201905092915050565b600061185582611916565b915061186083611916565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561189957611898611920565b5b828202905092915050565b60006118af82611916565b91506118ba83611916565b9250828210156118cd576118cc611920565b5b828203905092915050565b60006118e3826118f6565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e7320617265206f6e6c7920617661696c61626c652061667465722060008201527f636f72726563742074696d6520706572696f642068617320656c617073656400602082015250565b7f4e6f7420656e6f75676820535441544520746f6b656e7320696e20796f75722060008201527f77616c6c65742c20706c6561736520747279206c657373657220616d6f756e74602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b611a73816118d8565b8114611a7e57600080fd5b50565b611a8a816118ea565b8114611a9557600080fd5b50565b611aa181611916565b8114611aac57600080fd5b5056fea26469706673582212207625a176fe696cd0adb5a835b84eb3c394b5f4fac65df23fba79bec06e98b74564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8381E182 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8381E182 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0xD48BFCA7 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xDCB43191 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xE12FB1B9 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D3 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x4302A2F2 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x5FA7B584 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x6386C1C7 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x6E9C931C EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x83374CAB EQ PUSH2 0x196 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x1791 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x314 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1503 JUMP JUMPDEST PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH2 0xAEE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1791 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x14C3 JUMP JUMPDEST PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x218 PUSH2 0x1041 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x1660 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x106A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x1429 JUMP JUMPDEST PUSH2 0x1140 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x16DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x1197 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x31C PUSH2 0x128F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x33A PUSH2 0x1041 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x390 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x387 SWAP1 PUSH2 0x1756 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x1387 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x550 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x1660 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D9 SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x61B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x612 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x658 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x686 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x861 JUMPI DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH3 0x15180 DUP4 PUSH2 0x7CE SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST TIMESTAMP PUSH2 0x7D9 SWAP2 SWAP1 PUSH2 0x17F4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xA14 JUMP JUMPDEST PUSH2 0x8F3 DUP6 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1297 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH3 0x15180 DUP4 PUSH2 0x985 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST TIMESTAMP PUSH2 0x990 SWAP2 SWAP1 PUSH2 0x17F4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0xA66 DUP6 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1297 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xE5CFEEB5FCB96C1C52A55137C15E7F46D34D100D256C5396EFC087C43D2FDE4B CALLER DUP7 PUSH1 0x40 MLOAD PUSH2 0xADA SWAP3 SWAP2 SWAP1 PUSH2 0x16B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xAF6 PUSH2 0x128F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB14 PUSH2 0x1041 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB61 SWAP1 PUSH2 0x1756 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB74 PUSH1 0x0 PUSH2 0x12AD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT PUSH2 0xCFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0xDBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB4 SWAP1 PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF8 SWAP3 SWAP2 SWAP1 PUSH2 0x16B2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE4A SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0xE53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEA5 DUP5 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1371 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xF7A DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1297 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x9845E367B683334E5C0B12D7B81721AC518E649376FA65E3D68324E8F34F2679 CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0x102E SWAP3 SWAP2 SWAP1 PUSH2 0x16B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1072 PUSH2 0x128F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1090 PUSH2 0x1041 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DD SWAP1 PUSH2 0x1756 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x119F PUSH2 0x128F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11BD PUSH2 0x1041 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1213 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120A SWAP1 PUSH2 0x1756 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1283 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127A SWAP1 PUSH2 0x16F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x128C DUP2 PUSH2 0x12AD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x12A5 SWAP2 SWAP1 PUSH2 0x17F4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x137F SWAP2 SWAP1 PUSH2 0x18A4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13B7 DUP2 PUSH2 0x1A6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x13CC DUP2 PUSH2 0x1A81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13E1 DUP2 PUSH2 0x1A98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x13F6 DUP2 PUSH2 0x1A98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1412 JUMPI PUSH2 0x1411 PUSH2 0x194F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1420 DUP5 DUP3 DUP6 ADD PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1440 JUMPI PUSH2 0x143F PUSH2 0x194F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x144E DUP6 DUP3 DUP7 ADD PUSH2 0x13A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x145F DUP6 DUP3 DUP7 ADD PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x147F JUMPI PUSH2 0x147E PUSH2 0x194F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x148D DUP5 DUP3 DUP6 ADD PUSH2 0x13BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14AC JUMPI PUSH2 0x14AB PUSH2 0x194F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14BA DUP5 DUP3 DUP6 ADD PUSH2 0x13E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14DA JUMPI PUSH2 0x14D9 PUSH2 0x194F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14E8 DUP6 DUP3 DUP7 ADD PUSH2 0x13D2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14F9 DUP6 DUP3 DUP7 ADD PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x151C JUMPI PUSH2 0x151B PUSH2 0x194F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x152A DUP7 DUP3 DUP8 ADD PUSH2 0x13D2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x153B DUP7 DUP3 DUP8 ADD PUSH2 0x13A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x154C DUP7 DUP3 DUP8 ADD PUSH2 0x13D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x155F DUP2 PUSH2 0x18D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x156E DUP2 PUSH2 0x18EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1581 PUSH1 0x26 DUP4 PUSH2 0x17E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x158C DUP3 PUSH2 0x1954 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A4 PUSH1 0x3F DUP4 PUSH2 0x17E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x15AF DUP3 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C7 PUSH1 0x40 DUP4 PUSH2 0x17E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x15D2 DUP3 PUSH2 0x19F2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15EA PUSH1 0x20 DUP4 PUSH2 0x17E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x15F5 DUP3 PUSH2 0x1A41 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1616 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1642 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1629 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1642 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x163C PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1642 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x164B DUP2 PUSH2 0x1916 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x165A DUP2 PUSH2 0x1916 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1675 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1556 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1690 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x169D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x16AA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1651 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16C7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x16D4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1651 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16F0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1565 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x170F DUP2 PUSH2 0x1574 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x172F DUP2 PUSH2 0x1597 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x174F DUP2 PUSH2 0x15BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x176F DUP2 PUSH2 0x15DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x178B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1600 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1651 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x17C1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x17CE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x17DB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1651 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17FF DUP3 PUSH2 0x1916 JUMP JUMPDEST SWAP2 POP PUSH2 0x180A DUP4 PUSH2 0x1916 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x183F JUMPI PUSH2 0x183E PUSH2 0x1920 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1855 DUP3 PUSH2 0x1916 JUMP JUMPDEST SWAP2 POP PUSH2 0x1860 DUP4 PUSH2 0x1916 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1899 JUMPI PUSH2 0x1898 PUSH2 0x1920 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18AF DUP3 PUSH2 0x1916 JUMP JUMPDEST SWAP2 POP PUSH2 0x18BA DUP4 PUSH2 0x1916 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x18CD JUMPI PUSH2 0x18CC PUSH2 0x1920 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E3 DUP3 PUSH2 0x18F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E7320617265206F6E6C7920617661696C61626C6520616674657220 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x636F72726563742074696D6520706572696F642068617320656C617073656400 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820535441544520746F6B656E7320696E20796F757220 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x77616C6C65742C20706C6561736520747279206C657373657220616D6F756E74 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1A73 DUP2 PUSH2 0x18D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A8A DUP2 PUSH2 0x18EA JUMP JUMPDEST DUP2 EQ PUSH2 0x1A95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1AA1 DUP2 PUSH2 0x1916 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x25A176FE696CD0ADB5A835B84EB3C394B5F4FAC65DF23F 0xBA PUSH26 0xBEC06E98B74564736F6C63430008070033000000000000000000 ",
							"sourceMap": "233:3064:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;645:49;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1145:105;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2937:159;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1287:914;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:0;;;;;;;;;;;;;:::i;:::-;;3145:149:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2240:650;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;995:101:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;536:68;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;463:44;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;645:49:4;;;;;;;;;;;;;;;;;:::o;1145:105::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1239:5:4::1;1213:11;:23;1225:10;1213:23;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;1145:105:::0;:::o;2937:159::-;3025:18;;:::i;:::-;2991:10;914:11;:23;926:10;914:23;;;;;;;;;;;;;;;;;;;;;;;;;906:32;;;;;;3058:8:::1;:20;3067:10;3058:20;;;;;;;;;;;;;;;:32;3079:10;3058:32;;;;;;;;;;;;;;;3051:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;2937:159:::0;;;;:::o;1287:914::-;1404:4;1366:10;914:11;:23;926:10;914:23;;;;;;;;;;;;;;;;;;;;;;;;;906:32;;;;;;1442:10:::1;1435:28;;;1464:10;1435:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1424:7;:51;;1416:128;;;;;;;;;;;;:::i;:::-;;;;;;;;;1566:10;1559:31;;;1591:10;1611:4;1618:7;1559:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1551:76;;;::::0;::::1;;1683:1;1640:8;:20;1649:10;1640:20;;;;;;;;;;;;;;;:32;1661:10;1640:32;;;;;;;;;;;;;;;:39;;;:44;1636:416;;;1736:7;1694:8;:20;1703:10;1694:20;;;;;;;;;;;;;;;:32;1715:10;1694:32;;;;;;;;;;;;;;;:39;;:49;;;;1830:6;1817:10;:19;;;;:::i;:::-;1799:15;:37;;;;:::i;:::-;1752:8;:20;1761:10;1752:20;;;;;;;;;;;;;;;:32;1773:10;1752:32;;;;;;;;;;;;;;;:44;;:84;;;;1636:416;;;1899:52;1943:7;1899:8;:20;1908:10;1899:20;;;;;;;;;;;;;;;:32;1920:10;1899:32;;;;;;;;;;;;;;;:39;;;:43;;:52;;;;:::i;:::-;1857:8;:20;1866:10;1857:20;;;;;;;;;;;;;;;:32;1878:10;1857:32;;;;;;;;;;;;;;;:39;;:94;;;;2038:6;2025:10;:19;;;;:::i;:::-;2007:15;:37;;;;:::i;:::-;1960:8;:20;1969:10;1960:20;;;;;;;;;;;;;;;:32;1981:10;1960:32;;;;;;;;;;;;;;;:44;;:84;;;;1636:416;2089:41;2122:7;2089:16;:28;2106:10;2089:28;;;;;;;;;;;;;;;;:32;;:41;;;;:::i;:::-;2058:16;:28;2075:10;2058:28;;;;;;;;;;;;;;;:72;;;;2144:33;2157:10;2169:7;2144:33;;;;;;;:::i;:::-;;;;;;;;2191:4;2184:11;;1287:914:::0;;;;;;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;3145:149:4:-;3241:4;3207:10;914:11;:23;926:10;914:23;;;;;;;;;;;;;;;;;;;;;;;;;906:32;;;;;;3260:16:::1;:28;3277:10;3260:28;;;;;;;;;;;;;;;;3253:35;;3145:149:::0;;;;:::o;2240:650::-;2342:4;2304:10;914:11;:23;926:10;914:23;;;;;;;;;;;;;;;;;;;;;;;;;906:32;;;;;;2404:1:::1;2362:8;:20;2371:10;2362:20;;;;;;;;;;;;;;;:32;2383:10;2362:32;;;;;;;;;;;;;;;:39;;;:43;2354:52;;;::::0;::::1;;2439:8;:20;2448:10;2439:20;;;;;;;;;;;;;;;:32;2460:10;2439:32;;;;;;;;;;;;;;;:44;;;2421:15;:62;2413:138;;;;;;;;;;;;:::i;:::-;;;;;;;;;2573:10;2566:27;;;2594:10;2606:7;2566:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2558:57;;;::::0;::::1;;2655:41;2688:7;2655:16;:28;2672:10;2655:28;;;;;;;;;;;;;;;;:32;;:41;;;;:::i;:::-;2624:16;:28;2641:10;2624:28;;;;;;;;;;;;;;;:72;;;;2755:62;2809:7;2755:8;:20;2764:10;2755:20;;;;;;;;;;;;;;;:32;2776:10;2755:32;;;;;;;;;;;;;;;:49;;;:53;;:62;;;;:::i;:::-;2703:8;:20;2712:10;2703:20;;;;;;;;;;;;;;;:32;2724:10;2703:32;;;;;;;;;;;;;;;:49;;:114;;;;2831:35;2846:10;2858:7;2831:35;;;;;;;:::i;:::-;;;;;;;;2880:4;2873:11;;2240:650:::0;;;;;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;995:101:4:-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1086:4:4::1;1060:11:::0;:23:::1;1072:10;1060:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;995:101:::0;:::o;536:68::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;463:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;2755::3:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;3122:96:3:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;440:143;;;;:::o;589:329::-;648:6;697:2;685:9;676:7;672:23;668:32;665:119;;;703:79;;:::i;:::-;665:119;823:1;848:53;893:7;884:6;873:9;869:22;848:53;:::i;:::-;838:63;;794:117;589:329;;;;:::o;924:474::-;992:6;1000;1049:2;1037:9;1028:7;1024:23;1020:32;1017:119;;;1055:79;;:::i;:::-;1017:119;1175:1;1200:53;1245:7;1236:6;1225:9;1221:22;1200:53;:::i;:::-;1190:63;;1146:117;1302:2;1328:53;1373:7;1364:6;1353:9;1349:22;1328:53;:::i;:::-;1318:63;;1273:118;924:474;;;;;:::o;1404:345::-;1471:6;1520:2;1508:9;1499:7;1495:23;1491:32;1488:119;;;1526:79;;:::i;:::-;1488:119;1646:1;1671:61;1724:7;1715:6;1704:9;1700:22;1671:61;:::i;:::-;1661:71;;1617:125;1404:345;;;;:::o;1755:351::-;1825:6;1874:2;1862:9;1853:7;1849:23;1845:32;1842:119;;;1880:79;;:::i;:::-;1842:119;2000:1;2025:64;2081:7;2072:6;2061:9;2057:22;2025:64;:::i;:::-;2015:74;;1971:128;1755:351;;;;:::o;2112:474::-;2180:6;2188;2237:2;2225:9;2216:7;2212:23;2208:32;2205:119;;;2243:79;;:::i;:::-;2205:119;2363:1;2388:53;2433:7;2424:6;2413:9;2409:22;2388:53;:::i;:::-;2378:63;;2334:117;2490:2;2516:53;2561:7;2552:6;2541:9;2537:22;2516:53;:::i;:::-;2506:63;;2461:118;2112:474;;;;;:::o;2592:619::-;2669:6;2677;2685;2734:2;2722:9;2713:7;2709:23;2705:32;2702:119;;;2740:79;;:::i;:::-;2702:119;2860:1;2885:53;2930:7;2921:6;2910:9;2906:22;2885:53;:::i;:::-;2875:63;;2831:117;2987:2;3013:53;3058:7;3049:6;3038:9;3034:22;3013:53;:::i;:::-;3003:63;;2958:118;3115:2;3141:53;3186:7;3177:6;3166:9;3162:22;3141:53;:::i;:::-;3131:63;;3086:118;2592:619;;;;;:::o;3217:118::-;3304:24;3322:5;3304:24;:::i;:::-;3299:3;3292:37;3217:118;;:::o;3341:109::-;3422:21;3437:5;3422:21;:::i;:::-;3417:3;3410:34;3341:109;;:::o;3456:366::-;3598:3;3619:67;3683:2;3678:3;3619:67;:::i;:::-;3612:74;;3695:93;3784:3;3695:93;:::i;:::-;3813:2;3808:3;3804:12;3797:19;;3456:366;;;:::o;3828:::-;3970:3;3991:67;4055:2;4050:3;3991:67;:::i;:::-;3984:74;;4067:93;4156:3;4067:93;:::i;:::-;4185:2;4180:3;4176:12;4169:19;;3828:366;;;:::o;4200:::-;4342:3;4363:67;4427:2;4422:3;4363:67;:::i;:::-;4356:74;;4439:93;4528:3;4439:93;:::i;:::-;4557:2;4552:3;4548:12;4541:19;;4200:366;;;:::o;4572:::-;4714:3;4735:67;4799:2;4794:3;4735:67;:::i;:::-;4728:74;;4811:93;4900:3;4811:93;:::i;:::-;4929:2;4924:3;4920:12;4913:19;;4572:366;;;:::o;5008:708::-;5161:4;5156:3;5152:14;5250:4;5243:5;5239:16;5233:23;5269:63;5326:4;5321:3;5317:14;5303:12;5269:63;:::i;:::-;5176:166;5436:4;5429:5;5425:16;5419:23;5455:63;5512:4;5507:3;5503:14;5489:12;5455:63;:::i;:::-;5352:176;5617:4;5610:5;5606:16;5600:23;5636:63;5693:4;5688:3;5684:14;5670:12;5636:63;:::i;:::-;5538:171;5130:586;5008:708;;:::o;5722:108::-;5799:24;5817:5;5799:24;:::i;:::-;5794:3;5787:37;5722:108;;:::o;5836:118::-;5923:24;5941:5;5923:24;:::i;:::-;5918:3;5911:37;5836:118;;:::o;5960:222::-;6053:4;6091:2;6080:9;6076:18;6068:26;;6104:71;6172:1;6161:9;6157:17;6148:6;6104:71;:::i;:::-;5960:222;;;;:::o;6188:442::-;6337:4;6375:2;6364:9;6360:18;6352:26;;6388:71;6456:1;6445:9;6441:17;6432:6;6388:71;:::i;:::-;6469:72;6537:2;6526:9;6522:18;6513:6;6469:72;:::i;:::-;6551;6619:2;6608:9;6604:18;6595:6;6551:72;:::i;:::-;6188:442;;;;;;:::o;6636:332::-;6757:4;6795:2;6784:9;6780:18;6772:26;;6808:71;6876:1;6865:9;6861:17;6852:6;6808:71;:::i;:::-;6889:72;6957:2;6946:9;6942:18;6933:6;6889:72;:::i;:::-;6636:332;;;;;:::o;6974:210::-;7061:4;7099:2;7088:9;7084:18;7076:26;;7112:65;7174:1;7163:9;7159:17;7150:6;7112:65;:::i;:::-;6974:210;;;;:::o;7190:419::-;7356:4;7394:2;7383:9;7379:18;7371:26;;7443:9;7437:4;7433:20;7429:1;7418:9;7414:17;7407:47;7471:131;7597:4;7471:131;:::i;:::-;7463:139;;7190:419;;;:::o;7615:::-;7781:4;7819:2;7808:9;7804:18;7796:26;;7868:9;7862:4;7858:20;7854:1;7843:9;7839:17;7832:47;7896:131;8022:4;7896:131;:::i;:::-;7888:139;;7615:419;;;:::o;8040:::-;8206:4;8244:2;8233:9;8229:18;8221:26;;8293:9;8287:4;8283:20;8279:1;8268:9;8264:17;8257:47;8321:131;8447:4;8321:131;:::i;:::-;8313:139;;8040:419;;;:::o;8465:::-;8631:4;8669:2;8658:9;8654:18;8646:26;;8718:9;8712:4;8708:20;8704:1;8693:9;8689:17;8682:47;8746:131;8872:4;8746:131;:::i;:::-;8738:139;;8465:419;;;:::o;8890:334::-;9039:4;9077:2;9066:9;9062:18;9054:26;;9090:127;9214:1;9203:9;9199:17;9190:6;9090:127;:::i;:::-;8890:334;;;;:::o;9230:222::-;9323:4;9361:2;9350:9;9346:18;9338:26;;9374:71;9442:1;9431:9;9427:17;9418:6;9374:71;:::i;:::-;9230:222;;;;:::o;9458:442::-;9607:4;9645:2;9634:9;9630:18;9622:26;;9658:71;9726:1;9715:9;9711:17;9702:6;9658:71;:::i;:::-;9739:72;9807:2;9796:9;9792:18;9783:6;9739:72;:::i;:::-;9821;9889:2;9878:9;9874:18;9865:6;9821:72;:::i;:::-;9458:442;;;;;;:::o;9987:169::-;10071:11;10105:6;10100:3;10093:19;10145:4;10140:3;10136:14;10121:29;;9987:169;;;;:::o;10162:305::-;10202:3;10221:20;10239:1;10221:20;:::i;:::-;10216:25;;10255:20;10273:1;10255:20;:::i;:::-;10250:25;;10409:1;10341:66;10337:74;10334:1;10331:81;10328:107;;;10415:18;;:::i;:::-;10328:107;10459:1;10456;10452:9;10445:16;;10162:305;;;;:::o;10473:348::-;10513:7;10536:20;10554:1;10536:20;:::i;:::-;10531:25;;10570:20;10588:1;10570:20;:::i;:::-;10565:25;;10758:1;10690:66;10686:74;10683:1;10680:81;10675:1;10668:9;10661:17;10657:105;10654:131;;;10765:18;;:::i;:::-;10654:131;10813:1;10810;10806:9;10795:20;;10473:348;;;;:::o;10827:191::-;10867:4;10887:20;10905:1;10887:20;:::i;:::-;10882:25;;10921:20;10939:1;10921:20;:::i;:::-;10916:25;;10960:1;10957;10954:8;10951:34;;;10965:18;;:::i;:::-;10951:34;11010:1;11007;11003:9;10995:17;;10827:191;;;;:::o;11024:96::-;11061:7;11090:24;11108:5;11090:24;:::i;:::-;11079:35;;11024:96;;;:::o;11126:90::-;11160:7;11203:5;11196:13;11189:21;11178:32;;11126:90;;;:::o;11222:126::-;11259:7;11299:42;11292:5;11288:54;11277:65;;11222:126;;;:::o;11354:77::-;11391:7;11420:5;11409:16;;11354:77;;;:::o;11437:180::-;11485:77;11482:1;11475:88;11582:4;11579:1;11572:15;11606:4;11603:1;11596:15;11746:117;11855:1;11852;11845:12;11869:225;12009:34;12005:1;11997:6;11993:14;11986:58;12078:8;12073:2;12065:6;12061:15;12054:33;11869:225;:::o;12100:250::-;12240:34;12236:1;12228:6;12224:14;12217:58;12309:33;12304:2;12296:6;12292:15;12285:58;12100:250;:::o;12356:251::-;12496:34;12492:1;12484:6;12480:14;12473:58;12565:34;12560:2;12552:6;12548:15;12541:59;12356:251;:::o;12613:182::-;12753:34;12749:1;12741:6;12737:14;12730:58;12613:182;:::o;12801:122::-;12874:24;12892:5;12874:24;:::i;:::-;12867:5;12864:35;12854:63;;12913:1;12910;12903:12;12854:63;12801:122;:::o;12929:116::-;12999:21;13014:5;12999:21;:::i;:::-;12992:5;12989:32;12979:60;;13035:1;13032;13025:12;12979:60;12929:116;:::o;13051:122::-;13124:24;13142:5;13124:24;:::i;:::-;13117:5;13114:35;13104:63;;13163:1;13160;13153:12;13104:63;13051:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1377000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"StakeMap(address,address)": "infinite",
								"addToken(address)": "27096",
								"getTokenTotalStaked(address)": "5200",
								"getUserInfo(address)": "infinite",
								"owner()": "2544",
								"removeToken(address)": "27075",
								"renounceOwnership()": "30463",
								"stake(uint256,address,uint256)": "infinite",
								"tokenTotalStaked(address)": "2815",
								"transferOwnership(address)": "30833",
								"unstake(uint256,address)": "infinite",
								"validTokens(address)": "2933"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 3297,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 233,
									"end": 3297,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 233,
									"end": 3297,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 233,
									"end": 3297,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 233,
									"end": 3297,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 233,
									"end": 3297,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 233,
									"end": 3297,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 3297,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 233,
									"end": 3297,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 3297,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 233,
									"end": 3297,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 233,
									"end": 3297,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 3297,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 233,
									"end": 3297,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 233,
									"end": 3297,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 233,
									"end": 3297,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 233,
									"end": 3297,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 233,
									"end": 3297,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 233,
									"end": 3297,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 3297,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 233,
									"end": 3297,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 3297,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 3297,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 233,
									"end": 3297,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 3297,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207625a176fe696cd0adb5a835b84eb3c394b5f4fac65df23fba79bec06e98b74564736f6c63430008070033",
									".code": [
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH",
											"source": 4,
											"value": "8381E182"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH",
											"source": 4,
											"value": "8381E182"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH",
											"source": 4,
											"value": "D48BFCA7"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH",
											"source": 4,
											"value": "DCB43191"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH",
											"source": 4,
											"value": "E12FB1B9"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH",
											"source": 4,
											"value": "4302A2F2"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH",
											"source": 4,
											"value": "5FA7B584"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH",
											"source": 4,
											"value": "6386C1C7"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH",
											"source": 4,
											"value": "6E9C931C"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH",
											"source": 4,
											"value": "83374CAB"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 233,
											"end": 3297,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 645,
											"end": 694,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 694,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 645,
											"end": 694,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1244,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1235,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1250,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3025,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3025,
											"end": 3043,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3025,
											"end": 3043,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3025,
											"end": 3043,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2991,
											"end": 3001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 914,
											"end": 925,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 936,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 906,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 906,
											"end": 938,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 906,
											"end": 938,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 938,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 906,
											"end": 938,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 906,
											"end": 938,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 906,
											"end": 938,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3066,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3058,
											"end": 3078,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3067,
											"end": 3077,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3078,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3058,
											"end": 3078,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3078,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3058,
											"end": 3078,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3078,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3058,
											"end": 3078,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3078,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3058,
											"end": 3078,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3078,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3078,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3090,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3089,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3090,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3058,
											"end": 3090,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3090,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3058,
											"end": 3090,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3090,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3090,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3058,
											"end": 3090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3090,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3090,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3058,
											"end": 3090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3090,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3090,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 3096,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1366,
											"end": 1376,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 914,
											"end": 925,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 936,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 906,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 906,
											"end": 938,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 906,
											"end": 938,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 938,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 906,
											"end": 938,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 906,
											"end": 938,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 906,
											"end": 938,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1442,
											"end": 1452,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1463,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1435,
											"end": 1463,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1463,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1464,
											"end": 1474,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1435,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1431,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1475,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1475,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1416,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1416,
											"end": 1544,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1416,
											"end": 1544,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1416,
											"end": 1544,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1416,
											"end": 1544,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1416,
											"end": 1544,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1416,
											"end": 1544,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1416,
											"end": 1544,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1416,
											"end": 1544,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1416,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1416,
											"end": 1544,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1416,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1416,
											"end": 1544,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1416,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1416,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1416,
											"end": 1544,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1416,
											"end": 1544,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1416,
											"end": 1544,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1416,
											"end": 1544,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1416,
											"end": 1544,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1416,
											"end": 1544,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1416,
											"end": 1544,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1416,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1416,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1576,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1590,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1559,
											"end": 1590,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1590,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1591,
											"end": 1601,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1615,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1625,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1559,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1551,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1551,
											"end": 1627,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1551,
											"end": 1627,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1551,
											"end": 1627,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1551,
											"end": 1627,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1551,
											"end": 1627,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1551,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 1684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1648,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1640,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1659,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1640,
											"end": 1660,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1640,
											"end": 1660,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1640,
											"end": 1660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1640,
											"end": 1660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1660,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1672,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1671,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1672,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1640,
											"end": 1672,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1672,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1640,
											"end": 1672,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1672,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1672,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1672,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1640,
											"end": 1672,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1672,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1672,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1672,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1672,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1640,
											"end": 1672,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1672,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1672,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1679,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1679,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1679,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1684,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 2052,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1636,
											"end": 2052,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1743,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1702,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1694,
											"end": 1714,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1713,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1714,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1694,
											"end": 1714,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1714,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1694,
											"end": 1714,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1714,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1714,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1714,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1694,
											"end": 1714,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1714,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1714,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1714,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1714,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1694,
											"end": 1714,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1714,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1694,
											"end": 1714,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1725,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1726,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1694,
											"end": 1726,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1726,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1694,
											"end": 1726,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1726,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1726,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1726,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1694,
											"end": 1726,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1726,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1726,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1726,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1726,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1694,
											"end": 1726,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1694,
											"end": 1726,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1733,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1694,
											"end": 1733,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1743,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1743,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1743,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1743,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "PUSH",
											"source": 4,
											"value": "15180"
										},
										{
											"begin": 1817,
											"end": 1827,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1814,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1799,
											"end": 1836,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1799,
											"end": 1836,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1799,
											"end": 1836,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1799,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1752,
											"end": 1772,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1771,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1772,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1752,
											"end": 1772,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1772,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1752,
											"end": 1772,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1772,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1772,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1772,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1752,
											"end": 1772,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1772,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1772,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1772,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1772,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1752,
											"end": 1772,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1772,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1752,
											"end": 1772,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1784,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1773,
											"end": 1783,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1784,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1752,
											"end": 1784,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1784,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1752,
											"end": 1784,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1784,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1784,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1752,
											"end": 1784,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1784,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1784,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1752,
											"end": 1784,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1784,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1752,
											"end": 1784,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1796,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1752,
											"end": 1796,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1836,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1836,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1836,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1636,
											"end": 2052,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 2052,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1636,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1943,
											"end": 1950,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1907,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1899,
											"end": 1919,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1918,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1919,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1899,
											"end": 1919,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1919,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1899,
											"end": 1919,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1919,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1919,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1919,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1919,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1919,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1919,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1919,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1919,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1919,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1919,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1930,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1931,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1899,
											"end": 1931,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1931,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1899,
											"end": 1931,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1931,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1931,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1931,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1931,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1931,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1931,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1931,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1931,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1931,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1931,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1899,
											"end": 1942,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1951,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1951,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1951,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1899,
											"end": 1951,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1951,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1899,
											"end": 1951,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1899,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1865,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1857,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1857,
											"end": 1877,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1857,
											"end": 1877,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1877,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1877,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1857,
											"end": 1877,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1877,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1877,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1877,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1857,
											"end": 1877,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1877,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1889,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1878,
											"end": 1888,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1889,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1857,
											"end": 1889,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1889,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1857,
											"end": 1889,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1889,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1889,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1889,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1857,
											"end": 1889,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1889,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1889,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1889,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1889,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1857,
											"end": 1889,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1889,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1889,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1896,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1951,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1951,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1951,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1951,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2044,
											"name": "PUSH",
											"source": 4,
											"value": "15180"
										},
										{
											"begin": 2025,
											"end": 2035,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2025,
											"end": 2044,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2044,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2025,
											"end": 2044,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2025,
											"end": 2044,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2025,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2022,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2007,
											"end": 2044,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2044,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2007,
											"end": 2044,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2007,
											"end": 2044,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2007,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1968,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1960,
											"end": 1980,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1979,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1980,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1980,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1980,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1980,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1980,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1980,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1980,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1980,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1980,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1980,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1980,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1980,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1980,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1980,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1980,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1992,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 1991,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1992,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1992,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1992,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1992,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1992,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1992,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1992,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1992,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1992,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1992,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1992,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1992,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1992,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1992,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1992,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2004,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1960,
											"end": 2004,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2044,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2044,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2044,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2044,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 2052,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1636,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2122,
											"end": 2129,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2105,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2089,
											"end": 2117,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2116,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2117,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2089,
											"end": 2117,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2117,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2089,
											"end": 2117,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2117,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2117,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2117,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2089,
											"end": 2117,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2117,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2117,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2117,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2117,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2089,
											"end": 2117,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2117,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2117,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2117,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2089,
											"end": 2121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2130,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2130,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2089,
											"end": 2130,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2130,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2089,
											"end": 2130,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2089,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2058,
											"end": 2074,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2058,
											"end": 2086,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2085,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2058,
											"end": 2086,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2058,
											"end": 2086,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2058,
											"end": 2086,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2058,
											"end": 2086,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2058,
											"end": 2086,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2058,
											"end": 2086,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2058,
											"end": 2086,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2058,
											"end": 2086,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2058,
											"end": 2086,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2058,
											"end": 2086,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2058,
											"end": 2086,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2058,
											"end": 2086,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2058,
											"end": 2086,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2058,
											"end": 2086,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2058,
											"end": 2086,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2058,
											"end": 2130,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2058,
											"end": 2130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2058,
											"end": 2130,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2058,
											"end": 2130,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "PUSH",
											"source": 4,
											"value": "E5CFEEB5FCB96C1C52A55137C15E7F46D34D100D256C5396EFC087C43D2FDE4B"
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2176,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2195,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2184,
											"end": 2195,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 2201,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3245,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3207,
											"end": 3217,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 914,
											"end": 925,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 936,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 906,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 906,
											"end": 938,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 906,
											"end": 938,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 938,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 906,
											"end": 938,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 906,
											"end": 938,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 906,
											"end": 938,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3260,
											"end": 3276,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3260,
											"end": 3288,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3277,
											"end": 3287,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3260,
											"end": 3288,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3260,
											"end": 3288,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3260,
											"end": 3288,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3260,
											"end": 3288,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3260,
											"end": 3288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3260,
											"end": 3288,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3260,
											"end": 3288,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3260,
											"end": 3288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3260,
											"end": 3288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3260,
											"end": 3288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3260,
											"end": 3288,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3260,
											"end": 3288,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3260,
											"end": 3288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3260,
											"end": 3288,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3260,
											"end": 3288,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3260,
											"end": 3288,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3253,
											"end": 3288,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3253,
											"end": 3288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3294,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2342,
											"end": 2346,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2304,
											"end": 2314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 914,
											"end": 925,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 936,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 914,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 914,
											"end": 937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 906,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 906,
											"end": 938,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 906,
											"end": 938,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 938,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 906,
											"end": 938,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 906,
											"end": 938,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 906,
											"end": 938,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2404,
											"end": 2405,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2370,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2381,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2393,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2401,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2401,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2401,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2405,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2354,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2354,
											"end": 2406,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2354,
											"end": 2406,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2406,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2354,
											"end": 2406,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2354,
											"end": 2406,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2354,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2439,
											"end": 2459,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2458,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2459,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2439,
											"end": 2459,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2459,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2439,
											"end": 2459,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2459,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2459,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2459,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2439,
											"end": 2459,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2459,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2459,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2459,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2459,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2439,
											"end": 2459,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2459,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2459,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2470,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2483,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2439,
											"end": 2483,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2483,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2421,
											"end": 2436,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2421,
											"end": 2483,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2413,
											"end": 2551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2551,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2413,
											"end": 2551,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2551,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2413,
											"end": 2551,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2551,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2551,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2413,
											"end": 2551,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2413,
											"end": 2551,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2413,
											"end": 2551,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2413,
											"end": 2551,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2413,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2551,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2413,
											"end": 2551,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2551,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2551,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2551,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2551,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2551,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2413,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2573,
											"end": 2583,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2593,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2593,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2593,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 2594,
											"end": 2604,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2613,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2566,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2558,
											"end": 2615,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2615,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2615,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2615,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2615,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2558,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2688,
											"end": 2695,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2671,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2655,
											"end": 2683,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2682,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2683,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2655,
											"end": 2683,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2683,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2655,
											"end": 2683,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2683,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2683,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2683,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2655,
											"end": 2683,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2683,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2683,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2683,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2683,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2655,
											"end": 2683,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2683,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2683,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2683,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2655,
											"end": 2687,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2696,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2696,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2696,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2655,
											"end": 2696,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2696,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2655,
											"end": 2696,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2655,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 2640,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2624,
											"end": 2652,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2641,
											"end": 2651,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 2652,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2624,
											"end": 2652,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 2652,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2624,
											"end": 2652,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 2652,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 2652,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 2652,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2624,
											"end": 2652,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 2652,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 2652,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 2652,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 2652,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2624,
											"end": 2652,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 2652,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2624,
											"end": 2652,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 2696,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 2696,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 2696,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 2696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2755,
											"end": 2775,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2775,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2755,
											"end": 2775,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2775,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2755,
											"end": 2775,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2775,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2775,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2775,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2755,
											"end": 2775,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2775,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2775,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2775,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2775,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2755,
											"end": 2775,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2775,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2775,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2787,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2786,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2787,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2755,
											"end": 2787,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2787,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2755,
											"end": 2787,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2787,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2787,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2787,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2755,
											"end": 2787,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2787,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2787,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2787,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2755,
											"end": 2787,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2787,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2787,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2804,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2755,
											"end": 2804,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2804,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2755,
											"end": 2808,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2817,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2817,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2817,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2755,
											"end": 2817,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2817,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2755,
											"end": 2817,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2755,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2711,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2703,
											"end": 2723,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2722,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2723,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2703,
											"end": 2723,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2723,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2703,
											"end": 2723,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2723,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2723,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2723,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2703,
											"end": 2723,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2723,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2723,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2723,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2723,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2703,
											"end": 2723,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2723,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2723,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 2734,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2752,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2703,
											"end": 2752,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2817,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2817,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2817,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2817,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2831,
											"end": 2866,
											"name": "PUSH",
											"source": 4,
											"value": "9845E367B683334E5C0B12D7B81721AC518E649376FA65E3D68324E8F34F2679"
										},
										{
											"begin": 2846,
											"end": 2856,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2865,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2831,
											"end": 2866,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2831,
											"end": 2866,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2831,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2831,
											"end": 2866,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2831,
											"end": 2866,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2831,
											"end": 2866,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2831,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2831,
											"end": 2866,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2831,
											"end": 2866,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2831,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2831,
											"end": 2866,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2831,
											"end": 2866,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2831,
											"end": 2866,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2831,
											"end": 2866,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2831,
											"end": 2866,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2831,
											"end": 2866,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2831,
											"end": 2866,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2884,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2873,
											"end": 2884,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2873,
											"end": 2884,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2890,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1090,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1082,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1083,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1060,
											"end": 1083,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1083,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1060,
											"end": 1083,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1083,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1083,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1083,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1060,
											"end": 1083,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1083,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1083,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1083,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1083,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1060,
											"end": 1083,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1083,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1090,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1060,
											"end": 1090,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1090,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1090,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1060,
											"end": 1090,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1090,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1090,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1090,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1090,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1090,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1090,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1090,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1090,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 995,
											"end": 1096,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 536,
											"end": 604,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 463,
											"end": 507,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 463,
											"end": 507,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "85"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 665,
											"end": 784,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 665,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 665,
											"end": 784,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 838,
											"end": 901,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 838,
											"end": 901,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 794,
											"end": 911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1398,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 924,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 992,
											"end": 998,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1006,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1049,
											"end": 1051,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1037,
											"end": 1046,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1035,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1024,
											"end": 1047,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1052,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1136,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1017,
											"end": 1136,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1055,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1055,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1055,
											"end": 1134,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1055,
											"end": 1134,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1055,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1136,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1017,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1175,
											"end": 1176,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1245,
											"end": 1252,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1236,
											"end": 1242,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1225,
											"end": 1234,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1221,
											"end": 1243,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1200,
											"end": 1253,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1200,
											"end": 1253,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1200,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1190,
											"end": 1253,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1190,
											"end": 1253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1146,
											"end": 1263,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1302,
											"end": 1304,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1373,
											"end": 1380,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1370,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1328,
											"end": 1381,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1328,
											"end": 1381,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1328,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1318,
											"end": 1381,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1318,
											"end": 1381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1273,
											"end": 1391,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1398,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1398,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1398,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1398,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1398,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1398,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1404,
											"end": 1749,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1404,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1520,
											"end": 1522,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1508,
											"end": 1517,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1506,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1491,
											"end": 1523,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1607,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1488,
											"end": 1607,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1526,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1526,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1526,
											"end": 1605,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1526,
											"end": 1605,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1526,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1607,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1488,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1646,
											"end": 1647,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1724,
											"end": 1731,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1715,
											"end": 1721,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1704,
											"end": 1713,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1700,
											"end": 1722,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1671,
											"end": 1732,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1671,
											"end": 1732,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1671,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1732,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1617,
											"end": 1742,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1749,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1749,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1749,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1749,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1749,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1755,
											"end": 2106,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1755,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 1831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1876,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1862,
											"end": 1871,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1853,
											"end": 1860,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1872,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1845,
											"end": 1877,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1961,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 1842,
											"end": 1961,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 1880,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1880,
											"end": 1959,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1959,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 1880,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1961,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 1842,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2081,
											"end": 2088,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2072,
											"end": 2078,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2070,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2079,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2089,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 2106,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 2106,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 2106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 2106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 2106,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2112,
											"end": 2586,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2112,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2186,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2194,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2239,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2225,
											"end": 2234,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2223,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2212,
											"end": 2235,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2205,
											"end": 2324,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2205,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2205,
											"end": 2324,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2243,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2243,
											"end": 2322,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2243,
											"end": 2322,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2243,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2205,
											"end": 2324,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2205,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2364,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2433,
											"end": 2440,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2424,
											"end": 2430,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2413,
											"end": 2422,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2388,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2388,
											"end": 2441,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2388,
											"end": 2441,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2388,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2441,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2441,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2451,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2490,
											"end": 2492,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2516,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2561,
											"end": 2568,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2550,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2537,
											"end": 2559,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2516,
											"end": 2569,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2516,
											"end": 2569,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2516,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2506,
											"end": 2569,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2506,
											"end": 2569,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2461,
											"end": 2579,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2586,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2586,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2586,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2586,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2586,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2586,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2592,
											"end": 3211,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2592,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2669,
											"end": 2675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2683,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2685,
											"end": 2691,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2734,
											"end": 2736,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2722,
											"end": 2731,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2720,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2732,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2737,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2821,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 2702,
											"end": 2821,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2740,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 2740,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2740,
											"end": 2819,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2740,
											"end": 2819,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 2740,
											"end": 2819,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2821,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 2702,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2860,
											"end": 2861,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2885,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2930,
											"end": 2937,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2921,
											"end": 2927,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2910,
											"end": 2919,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2906,
											"end": 2928,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2885,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2885,
											"end": 2938,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2885,
											"end": 2938,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2885,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2875,
											"end": 2938,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2875,
											"end": 2938,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2831,
											"end": 2948,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2987,
											"end": 2989,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3013,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 3058,
											"end": 3065,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3049,
											"end": 3055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3038,
											"end": 3047,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3034,
											"end": 3056,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3013,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3013,
											"end": 3066,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3013,
											"end": 3066,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 3013,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 3076,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3115,
											"end": 3117,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3141,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 3186,
											"end": 3193,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3177,
											"end": 3183,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3141,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3141,
											"end": 3194,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3141,
											"end": 3194,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 3141,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3131,
											"end": 3194,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3131,
											"end": 3194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3204,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 3211,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 3211,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 3211,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 3211,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 3211,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 3211,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3217,
											"end": 3335,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 3217,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 3322,
											"end": 3327,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 3304,
											"end": 3328,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3304,
											"end": 3328,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 3304,
											"end": 3328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3302,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3292,
											"end": 3329,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3335,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3341,
											"end": 3450,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 3341,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3422,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 3437,
											"end": 3442,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3422,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 3422,
											"end": 3443,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3422,
											"end": 3443,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 3422,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3417,
											"end": 3420,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3444,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3450,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3456,
											"end": 3822,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 3456,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3598,
											"end": 3601,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 3683,
											"end": 3685,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3678,
											"end": 3681,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3619,
											"end": 3686,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3619,
											"end": 3686,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 3619,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3612,
											"end": 3686,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3612,
											"end": 3686,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3695,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3784,
											"end": 3787,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3695,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 3695,
											"end": 3788,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3695,
											"end": 3788,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3695,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3813,
											"end": 3815,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3808,
											"end": 3811,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3797,
											"end": 3816,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3797,
											"end": 3816,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3822,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3822,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3822,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3822,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3828,
											"end": 4194,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 3828,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3970,
											"end": 3973,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 4055,
											"end": 4057,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 4050,
											"end": 4053,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3991,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3991,
											"end": 4058,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3991,
											"end": 4058,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 3991,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3984,
											"end": 4058,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3984,
											"end": 4058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4067,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 4156,
											"end": 4159,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4067,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 4067,
											"end": 4160,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4067,
											"end": 4160,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 4067,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4185,
											"end": 4187,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4180,
											"end": 4183,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4176,
											"end": 4188,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4188,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4188,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3828,
											"end": 4194,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3828,
											"end": 4194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3828,
											"end": 4194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3828,
											"end": 4194,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4200,
											"end": 4566,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 4200,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4342,
											"end": 4345,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4363,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 4427,
											"end": 4429,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4422,
											"end": 4425,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4363,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 4363,
											"end": 4430,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4363,
											"end": 4430,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 4363,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4356,
											"end": 4430,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4356,
											"end": 4430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4439,
											"end": 4532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 4528,
											"end": 4531,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4439,
											"end": 4532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 4439,
											"end": 4532,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4439,
											"end": 4532,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 4439,
											"end": 4532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4557,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4552,
											"end": 4555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4541,
											"end": 4560,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4541,
											"end": 4560,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4200,
											"end": 4566,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4200,
											"end": 4566,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4200,
											"end": 4566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4200,
											"end": 4566,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4572,
											"end": 4938,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 4572,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4714,
											"end": 4717,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 4799,
											"end": 4801,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4794,
											"end": 4797,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 4735,
											"end": 4802,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4735,
											"end": 4802,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 4735,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4728,
											"end": 4802,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4728,
											"end": 4802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4811,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 4900,
											"end": 4903,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4811,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 4811,
											"end": 4904,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4811,
											"end": 4904,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 4811,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4929,
											"end": 4931,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4924,
											"end": 4927,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4920,
											"end": 4932,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4913,
											"end": 4932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4913,
											"end": 4932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4572,
											"end": 4938,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4572,
											"end": 4938,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4572,
											"end": 4938,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4572,
											"end": 4938,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5008,
											"end": 5716,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 5008,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5161,
											"end": 5165,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5156,
											"end": 5159,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5166,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5250,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5243,
											"end": 5248,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5255,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5233,
											"end": 5256,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5269,
											"end": 5332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 5326,
											"end": 5330,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5321,
											"end": 5324,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5331,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5303,
											"end": 5315,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5269,
											"end": 5332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 5269,
											"end": 5332,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5269,
											"end": 5332,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 5269,
											"end": 5332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5176,
											"end": 5342,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5436,
											"end": 5440,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5429,
											"end": 5434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5441,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5419,
											"end": 5442,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5455,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 5512,
											"end": 5516,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5507,
											"end": 5510,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5503,
											"end": 5517,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5489,
											"end": 5501,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5455,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 5455,
											"end": 5518,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5455,
											"end": 5518,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 5455,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5528,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5617,
											"end": 5621,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5615,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5606,
											"end": 5622,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5600,
											"end": 5623,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5636,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 5693,
											"end": 5697,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5688,
											"end": 5691,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5684,
											"end": 5698,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5670,
											"end": 5682,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5636,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 5636,
											"end": 5699,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5636,
											"end": 5699,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 5636,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5538,
											"end": 5709,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5130,
											"end": 5716,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5008,
											"end": 5716,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5008,
											"end": 5716,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5008,
											"end": 5716,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5722,
											"end": 5830,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 5722,
											"end": 5830,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5823,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 5817,
											"end": 5822,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5823,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 5799,
											"end": 5823,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5799,
											"end": 5823,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 5799,
											"end": 5823,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5794,
											"end": 5797,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5787,
											"end": 5824,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5722,
											"end": 5830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5722,
											"end": 5830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5722,
											"end": 5830,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5836,
											"end": 5954,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 5836,
											"end": 5954,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 5941,
											"end": 5946,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 5923,
											"end": 5947,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5923,
											"end": 5947,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 5923,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 5921,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5911,
											"end": 5948,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5954,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5954,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5954,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5960,
											"end": 6182,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 5960,
											"end": 6182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6053,
											"end": 6057,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6091,
											"end": 6093,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6080,
											"end": 6089,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6076,
											"end": 6094,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6104,
											"end": 6175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 6172,
											"end": 6173,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6161,
											"end": 6170,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6174,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6154,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6104,
											"end": 6175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 6104,
											"end": 6175,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6104,
											"end": 6175,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 6104,
											"end": 6175,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5960,
											"end": 6182,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5960,
											"end": 6182,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5960,
											"end": 6182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5960,
											"end": 6182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5960,
											"end": 6182,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6188,
											"end": 6630,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 6188,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6337,
											"end": 6341,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6375,
											"end": 6377,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6364,
											"end": 6373,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6352,
											"end": 6378,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6352,
											"end": 6378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6388,
											"end": 6459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 6456,
											"end": 6457,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6445,
											"end": 6454,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6441,
											"end": 6458,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6432,
											"end": 6438,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6388,
											"end": 6459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 6388,
											"end": 6459,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6388,
											"end": 6459,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 6388,
											"end": 6459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6469,
											"end": 6541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 6537,
											"end": 6539,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6526,
											"end": 6535,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6540,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6513,
											"end": 6519,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6469,
											"end": 6541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 6469,
											"end": 6541,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6469,
											"end": 6541,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 6469,
											"end": 6541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6551,
											"end": 6623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 6619,
											"end": 6621,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6608,
											"end": 6617,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6604,
											"end": 6622,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6595,
											"end": 6601,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6551,
											"end": 6623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 6551,
											"end": 6623,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6551,
											"end": 6623,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 6551,
											"end": 6623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6188,
											"end": 6630,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6188,
											"end": 6630,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6188,
											"end": 6630,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6188,
											"end": 6630,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6188,
											"end": 6630,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6188,
											"end": 6630,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6188,
											"end": 6630,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6636,
											"end": 6968,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 6636,
											"end": 6968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6757,
											"end": 6761,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6795,
											"end": 6797,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6793,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6780,
											"end": 6798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6772,
											"end": 6798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6772,
											"end": 6798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6808,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 6876,
											"end": 6877,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6874,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6861,
											"end": 6878,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6852,
											"end": 6858,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6808,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 6808,
											"end": 6879,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6808,
											"end": 6879,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 6808,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6889,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 6957,
											"end": 6959,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6946,
											"end": 6955,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6942,
											"end": 6960,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6933,
											"end": 6939,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6889,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 6889,
											"end": 6961,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6889,
											"end": 6961,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 6889,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6636,
											"end": 6968,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6636,
											"end": 6968,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6636,
											"end": 6968,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6636,
											"end": 6968,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6636,
											"end": 6968,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6636,
											"end": 6968,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6974,
											"end": 7184,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 6974,
											"end": 7184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7061,
											"end": 7065,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7099,
											"end": 7101,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7088,
											"end": 7097,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7084,
											"end": 7102,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7076,
											"end": 7102,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7076,
											"end": 7102,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7112,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 7174,
											"end": 7175,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7163,
											"end": 7172,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7159,
											"end": 7176,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7150,
											"end": 7156,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7112,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 7112,
											"end": 7177,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7112,
											"end": 7177,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 7112,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6974,
											"end": 7184,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6974,
											"end": 7184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6974,
											"end": 7184,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6974,
											"end": 7184,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6974,
											"end": 7184,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7190,
											"end": 7609,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 7190,
											"end": 7609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7356,
											"end": 7360,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7394,
											"end": 7396,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7383,
											"end": 7392,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7379,
											"end": 7397,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7397,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7397,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7443,
											"end": 7452,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7437,
											"end": 7441,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7433,
											"end": 7453,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7429,
											"end": 7430,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7418,
											"end": 7427,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7414,
											"end": 7431,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7407,
											"end": 7454,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7471,
											"end": 7602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 7597,
											"end": 7601,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7471,
											"end": 7602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 7471,
											"end": 7602,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7471,
											"end": 7602,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 7471,
											"end": 7602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7463,
											"end": 7602,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7463,
											"end": 7602,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7609,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7609,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7609,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7615,
											"end": 8034,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 7615,
											"end": 8034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7781,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7819,
											"end": 7821,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7808,
											"end": 7817,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7804,
											"end": 7822,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7796,
											"end": 7822,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7796,
											"end": 7822,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7868,
											"end": 7877,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7862,
											"end": 7866,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7858,
											"end": 7878,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7854,
											"end": 7855,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7843,
											"end": 7852,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 7856,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7832,
											"end": 7879,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7896,
											"end": 8027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 8022,
											"end": 8026,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7896,
											"end": 8027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 7896,
											"end": 8027,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7896,
											"end": 8027,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 7896,
											"end": 8027,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7888,
											"end": 8027,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7888,
											"end": 8027,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7615,
											"end": 8034,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7615,
											"end": 8034,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7615,
											"end": 8034,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7615,
											"end": 8034,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8040,
											"end": 8459,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 8040,
											"end": 8459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8206,
											"end": 8210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8244,
											"end": 8246,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8233,
											"end": 8242,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8247,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8221,
											"end": 8247,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8221,
											"end": 8247,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8293,
											"end": 8302,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8287,
											"end": 8291,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8283,
											"end": 8303,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8279,
											"end": 8280,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8268,
											"end": 8277,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8264,
											"end": 8281,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8257,
											"end": 8304,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8321,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 8447,
											"end": 8451,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8321,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 8321,
											"end": 8452,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8321,
											"end": 8452,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 8321,
											"end": 8452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8313,
											"end": 8452,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8313,
											"end": 8452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8040,
											"end": 8459,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8040,
											"end": 8459,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8040,
											"end": 8459,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8040,
											"end": 8459,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8465,
											"end": 8884,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 8465,
											"end": 8884,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8631,
											"end": 8635,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8669,
											"end": 8671,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8658,
											"end": 8667,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8654,
											"end": 8672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8646,
											"end": 8672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8646,
											"end": 8672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8718,
											"end": 8727,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8712,
											"end": 8716,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8708,
											"end": 8728,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8704,
											"end": 8705,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8693,
											"end": 8702,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8689,
											"end": 8706,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8682,
											"end": 8729,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8746,
											"end": 8877,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 8872,
											"end": 8876,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8746,
											"end": 8877,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 8746,
											"end": 8877,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8746,
											"end": 8877,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 8746,
											"end": 8877,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8738,
											"end": 8877,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8738,
											"end": 8877,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8465,
											"end": 8884,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8465,
											"end": 8884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8465,
											"end": 8884,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8465,
											"end": 8884,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8890,
											"end": 9224,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 8890,
											"end": 9224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9039,
											"end": 9043,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9077,
											"end": 9079,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 9066,
											"end": 9075,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9062,
											"end": 9080,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9054,
											"end": 9080,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9054,
											"end": 9080,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9090,
											"end": 9217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 9214,
											"end": 9215,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9203,
											"end": 9212,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9199,
											"end": 9216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9190,
											"end": 9196,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9090,
											"end": 9217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 9090,
											"end": 9217,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9090,
											"end": 9217,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 9090,
											"end": 9217,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8890,
											"end": 9224,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8890,
											"end": 9224,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8890,
											"end": 9224,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8890,
											"end": 9224,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8890,
											"end": 9224,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9230,
											"end": 9452,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 9230,
											"end": 9452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9323,
											"end": 9327,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9361,
											"end": 9363,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9350,
											"end": 9359,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9338,
											"end": 9364,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9338,
											"end": 9364,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9374,
											"end": 9445,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 9442,
											"end": 9443,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9431,
											"end": 9440,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9444,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9418,
											"end": 9424,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9374,
											"end": 9445,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 9374,
											"end": 9445,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9374,
											"end": 9445,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 9374,
											"end": 9445,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9230,
											"end": 9452,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9230,
											"end": 9452,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9230,
											"end": 9452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9230,
											"end": 9452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9230,
											"end": 9452,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9458,
											"end": 9900,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 9458,
											"end": 9900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9607,
											"end": 9611,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9645,
											"end": 9647,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 9634,
											"end": 9643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9630,
											"end": 9648,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9622,
											"end": 9648,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9622,
											"end": 9648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9658,
											"end": 9729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 9726,
											"end": 9727,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9715,
											"end": 9724,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9711,
											"end": 9728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9702,
											"end": 9708,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9658,
											"end": 9729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 9658,
											"end": 9729,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9658,
											"end": 9729,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 9658,
											"end": 9729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9739,
											"end": 9811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 9807,
											"end": 9809,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9796,
											"end": 9805,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9792,
											"end": 9810,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9783,
											"end": 9789,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9739,
											"end": 9811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 9739,
											"end": 9811,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9739,
											"end": 9811,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 9739,
											"end": 9811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9821,
											"end": 9893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 9889,
											"end": 9891,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9878,
											"end": 9887,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9874,
											"end": 9892,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9865,
											"end": 9871,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9821,
											"end": 9893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 9821,
											"end": 9893,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9821,
											"end": 9893,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 9821,
											"end": 9893,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9458,
											"end": 9900,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 9458,
											"end": 9900,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9458,
											"end": 9900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9458,
											"end": 9900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9458,
											"end": 9900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9458,
											"end": 9900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9458,
											"end": 9900,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9987,
											"end": 10156,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 9987,
											"end": 10156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10071,
											"end": 10082,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10100,
											"end": 10103,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10093,
											"end": 10112,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10145,
											"end": 10149,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10140,
											"end": 10143,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10136,
											"end": 10150,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10121,
											"end": 10150,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10121,
											"end": 10150,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10156,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10156,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10156,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10156,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10156,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10162,
											"end": 10467,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 10162,
											"end": 10467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10202,
											"end": 10205,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10221,
											"end": 10241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 10239,
											"end": 10240,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10221,
											"end": 10241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 10221,
											"end": 10241,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10221,
											"end": 10241,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 10221,
											"end": 10241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10216,
											"end": 10241,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10216,
											"end": 10241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10255,
											"end": 10275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 10273,
											"end": 10274,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10255,
											"end": 10275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 10255,
											"end": 10275,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10255,
											"end": 10275,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 10255,
											"end": 10275,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10250,
											"end": 10275,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10250,
											"end": 10275,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10409,
											"end": 10410,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10341,
											"end": 10407,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10337,
											"end": 10411,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10334,
											"end": 10335,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10331,
											"end": 10412,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 10328,
											"end": 10435,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10328,
											"end": 10435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 10328,
											"end": 10435,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10433,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 10415,
											"end": 10433,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 10415,
											"end": 10433,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10415,
											"end": 10433,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 10415,
											"end": 10433,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10328,
											"end": 10435,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 10328,
											"end": 10435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10459,
											"end": 10460,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10456,
											"end": 10457,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10452,
											"end": 10461,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10445,
											"end": 10461,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10445,
											"end": 10461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10162,
											"end": 10467,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10162,
											"end": 10467,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10162,
											"end": 10467,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10162,
											"end": 10467,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10162,
											"end": 10467,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10473,
											"end": 10821,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 10473,
											"end": 10821,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10513,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10536,
											"end": 10556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 10554,
											"end": 10555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10536,
											"end": 10556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 10536,
											"end": 10556,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10536,
											"end": 10556,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 10536,
											"end": 10556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10531,
											"end": 10556,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10531,
											"end": 10556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10570,
											"end": 10590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 10588,
											"end": 10589,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10570,
											"end": 10590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 10570,
											"end": 10590,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10570,
											"end": 10590,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 10570,
											"end": 10590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10565,
											"end": 10590,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10565,
											"end": 10590,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10758,
											"end": 10759,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10690,
											"end": 10756,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10686,
											"end": 10760,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 10683,
											"end": 10684,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10680,
											"end": 10761,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 10675,
											"end": 10676,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10668,
											"end": 10677,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10661,
											"end": 10678,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10657,
											"end": 10762,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10654,
											"end": 10785,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10654,
											"end": 10785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 10654,
											"end": 10785,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10765,
											"end": 10783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 10765,
											"end": 10783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 10765,
											"end": 10783,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10765,
											"end": 10783,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 10765,
											"end": 10783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10654,
											"end": 10785,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 10654,
											"end": 10785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10813,
											"end": 10814,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10810,
											"end": 10811,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10806,
											"end": 10815,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 10795,
											"end": 10815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10795,
											"end": 10815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10821,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10821,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10821,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10827,
											"end": 11018,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 10827,
											"end": 11018,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10867,
											"end": 10871,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10887,
											"end": 10907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 10905,
											"end": 10906,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10887,
											"end": 10907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 10887,
											"end": 10907,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10887,
											"end": 10907,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 10887,
											"end": 10907,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10882,
											"end": 10907,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10882,
											"end": 10907,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10921,
											"end": 10941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 10939,
											"end": 10940,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10921,
											"end": 10941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 10921,
											"end": 10941,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10921,
											"end": 10941,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 10921,
											"end": 10941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10916,
											"end": 10941,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10916,
											"end": 10941,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10960,
											"end": 10961,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10957,
											"end": 10958,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 10962,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10951,
											"end": 10985,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10951,
											"end": 10985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 10951,
											"end": 10985,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10965,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 10965,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 10965,
											"end": 10983,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10965,
											"end": 10983,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 10965,
											"end": 10983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10951,
											"end": 10985,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 10951,
											"end": 10985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11010,
											"end": 11011,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11007,
											"end": 11008,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11003,
											"end": 11012,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10995,
											"end": 11012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10995,
											"end": 11012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10827,
											"end": 11018,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10827,
											"end": 11018,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10827,
											"end": 11018,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10827,
											"end": 11018,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10827,
											"end": 11018,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11024,
											"end": 11120,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 11024,
											"end": 11120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11061,
											"end": 11068,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11090,
											"end": 11114,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 11108,
											"end": 11113,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11090,
											"end": 11114,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 11090,
											"end": 11114,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11090,
											"end": 11114,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 11090,
											"end": 11114,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11079,
											"end": 11114,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11079,
											"end": 11114,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11024,
											"end": 11120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11024,
											"end": 11120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11024,
											"end": 11120,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11024,
											"end": 11120,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11126,
											"end": 11216,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 11126,
											"end": 11216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11160,
											"end": 11167,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11203,
											"end": 11208,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11196,
											"end": 11209,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11189,
											"end": 11210,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11178,
											"end": 11210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11178,
											"end": 11210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11126,
											"end": 11216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11126,
											"end": 11216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11126,
											"end": 11216,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11126,
											"end": 11216,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11222,
											"end": 11348,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 11222,
											"end": 11348,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11259,
											"end": 11266,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11299,
											"end": 11341,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11292,
											"end": 11297,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11288,
											"end": 11342,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11277,
											"end": 11342,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11277,
											"end": 11342,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11222,
											"end": 11348,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11222,
											"end": 11348,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11222,
											"end": 11348,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11222,
											"end": 11348,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11354,
											"end": 11431,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 11354,
											"end": 11431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11398,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11420,
											"end": 11425,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11409,
											"end": 11425,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11409,
											"end": 11425,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11354,
											"end": 11431,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11354,
											"end": 11431,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11354,
											"end": 11431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11354,
											"end": 11431,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11437,
											"end": 11617,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 11437,
											"end": 11617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11485,
											"end": 11562,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11482,
											"end": 11483,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11475,
											"end": 11563,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11582,
											"end": 11586,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 11579,
											"end": 11580,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 11572,
											"end": 11587,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11606,
											"end": 11610,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 11603,
											"end": 11604,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11596,
											"end": 11611,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11746,
											"end": 11863,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 11746,
											"end": 11863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11855,
											"end": 11856,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11852,
											"end": 11853,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11845,
											"end": 11857,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11869,
											"end": 12094,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 11869,
											"end": 12094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12009,
											"end": 12043,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 12005,
											"end": 12006,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11997,
											"end": 12003,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11993,
											"end": 12007,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11986,
											"end": 12044,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12078,
											"end": 12086,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12073,
											"end": 12075,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12065,
											"end": 12071,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12061,
											"end": 12076,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12054,
											"end": 12087,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11869,
											"end": 12094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11869,
											"end": 12094,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12100,
											"end": 12350,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 12100,
											"end": 12350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12240,
											"end": 12274,
											"name": "PUSH",
											"source": 5,
											"value": "546F6B656E7320617265206F6E6C7920617661696C61626C6520616674657220"
										},
										{
											"begin": 12236,
											"end": 12237,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12228,
											"end": 12234,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12224,
											"end": 12238,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12217,
											"end": 12275,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12309,
											"end": 12342,
											"name": "PUSH",
											"source": 5,
											"value": "636F72726563742074696D6520706572696F642068617320656C617073656400"
										},
										{
											"begin": 12304,
											"end": 12306,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12296,
											"end": 12302,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12292,
											"end": 12307,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12285,
											"end": 12343,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12100,
											"end": 12350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12100,
											"end": 12350,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12356,
											"end": 12607,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 12356,
											"end": 12607,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12496,
											"end": 12530,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F7420656E6F75676820535441544520746F6B656E7320696E20796F757220"
										},
										{
											"begin": 12492,
											"end": 12493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12484,
											"end": 12490,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12480,
											"end": 12494,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12473,
											"end": 12531,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12565,
											"end": 12599,
											"name": "PUSH",
											"source": 5,
											"value": "77616C6C65742C20706C6561736520747279206C657373657220616D6F756E74"
										},
										{
											"begin": 12560,
											"end": 12562,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12552,
											"end": 12558,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12548,
											"end": 12563,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12541,
											"end": 12600,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12356,
											"end": 12607,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12356,
											"end": 12607,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12613,
											"end": 12795,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 12613,
											"end": 12795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12753,
											"end": 12787,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12749,
											"end": 12750,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12741,
											"end": 12747,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12737,
											"end": 12751,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12730,
											"end": 12788,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12613,
											"end": 12795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12613,
											"end": 12795,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12801,
											"end": 12923,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 12801,
											"end": 12923,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12874,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 12892,
											"end": 12897,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12874,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 12874,
											"end": 12898,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12874,
											"end": 12898,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 12874,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12867,
											"end": 12872,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12864,
											"end": 12899,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 12854,
											"end": 12917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 12854,
											"end": 12917,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12913,
											"end": 12914,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12910,
											"end": 12911,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12903,
											"end": 12915,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 12854,
											"end": 12917,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 12854,
											"end": 12917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12801,
											"end": 12923,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12801,
											"end": 12923,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12929,
											"end": 13045,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 12929,
											"end": 13045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12999,
											"end": 13020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 13014,
											"end": 13019,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12999,
											"end": 13020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 12999,
											"end": 13020,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12999,
											"end": 13020,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 12999,
											"end": 13020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12992,
											"end": 12997,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12989,
											"end": 13021,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 12979,
											"end": 13039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 12979,
											"end": 13039,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13035,
											"end": 13036,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13032,
											"end": 13033,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13025,
											"end": 13037,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 12979,
											"end": 13039,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 12979,
											"end": 13039,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12929,
											"end": 13045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12929,
											"end": 13045,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13051,
											"end": 13173,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 13051,
											"end": 13173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13124,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 13142,
											"end": 13147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13124,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 13124,
											"end": 13148,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13124,
											"end": 13148,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 13124,
											"end": 13148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13117,
											"end": 13122,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13114,
											"end": 13149,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 13104,
											"end": 13167,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 13104,
											"end": 13167,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13163,
											"end": 13164,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13160,
											"end": 13161,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13153,
											"end": 13165,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 13104,
											"end": 13167,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 13104,
											"end": 13167,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13051,
											"end": 13173,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13051,
											"end": 13173,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"StakeMap(address,address)": "dcb43191",
							"addToken(address)": "d48bfca7",
							"getTokenTotalStaked(address)": "83374cab",
							"getUserInfo(address)": "6386c1c7",
							"owner()": "8da5cb5b",
							"removeToken(address)": "5fa7b584",
							"renounceOwnership()": "715018a6",
							"stake(uint256,address,uint256)": "6e9c931c",
							"tokenTotalStaked(address)": "4302a2f2",
							"transferOwnership(address)": "f2fde38b",
							"unstake(uint256,address)": "8381e182",
							"validTokens(address)": "e12fb1b9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TokensUnstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"tokensStaked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"StakeMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"alreadyWithdrawn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releaseDate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"}],\"name\":\"getTokenTotalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"alreadyWithdrawn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releaseDate\",\"type\":\"uint256\"}],\"internalType\":\"struct staking.stakingInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_daysCount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenTotalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"}],\"name\":\"unstake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"validTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addToken(address)\":{\"notice\":\"add token address \"},\"getTokenTotalStaked(address)\":{\"notice\":\"get tokenTotalStaked\"},\"getUserInfo(address)\":{\"notice\":\"get User Staking Info \"},\"removeToken(address)\":{\"notice\":\"remove token address\"},\"stake(uint256,address,uint256)\":{\"notice\":\"Stake tokens\"},\"unstake(uint256,address)\":{\"notice\":\"Unstake tokens\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/staking.sol\":\"staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x38c95ad718376d43cca7df7654cd2afa13244b72836368619f1109f716e3ded4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18fa7864518cb5acc4d3bf5fb2cbfcd365b0a605585496393a53468cacb4850d\",\"dweb:/ipfs/QmWptKmAm8QGuVhBHfRASuw4JZdLJpPRPEoYEyQ6G5qnni\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/staking.sol\":{\"keccak256\":\"0x8a71427d573dc7610ef0b0aea3d76838b82003293a8478c45f1913f14c138ec6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ea511cdfcafa188f0cd4df7f74f2fae5b15c7cef75d1a1c7a0c67dbecebf82c\",\"dweb:/ipfs/Qmb8XwjE1vGurxZLGtrdCjxZBUMCwGzYXw3yu1jstzNkE7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/staking.sol:staking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 497,
								"contract": "contracts/staking.sol:staking",
								"label": "validTokens",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 504,
								"contract": "contracts/staking.sol:staking",
								"label": "StakeMap",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_struct(stakingInfo)493_storage))"
							},
							{
								"astId": 508,
								"contract": "contracts/staking.sol:staking",
								"label": "tokenTotalStaked",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_struct(stakingInfo)493_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => struct staking.stakingInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(stakingInfo)493_storage)"
							},
							"t_mapping(t_address,t_struct(stakingInfo)493_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct staking.stakingInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(stakingInfo)493_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(stakingInfo)493_storage": {
								"encoding": "inplace",
								"label": "struct staking.stakingInfo",
								"members": [
									{
										"astId": 488,
										"contract": "contracts/staking.sol:staking",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 490,
										"contract": "contracts/staking.sol:staking",
										"label": "alreadyWithdrawn",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 492,
										"contract": "contracts/staking.sol:staking",
										"label": "releaseDate",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addToken(address)": {
								"notice": "add token address "
							},
							"getTokenTotalStaked(address)": {
								"notice": "get tokenTotalStaked"
							},
							"getUserInfo(address)": {
								"notice": "get User Staking Info "
							},
							"removeToken(address)": {
								"notice": "remove token address"
							},
							"stake(uint256,address,uint256)": {
								"notice": "Stake tokens"
							},
							"unstake(uint256,address)": {
								"notice": "Unstake tokens"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							164
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 165,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 164,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								164
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 154,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							142
						]
					},
					"id": 143,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 142,
							"linearizedBaseContracts": [
								142
							],
							"name": "IERC20",
							"nameLocation": "67:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 114,
									"name": "Transfer",
									"nameLocation": "86:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "111:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "95:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "95:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "133:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "117:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "117:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "145:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "137:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "137:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "94:57:1"
									},
									"src": "80:72:1"
								},
								{
									"functionSelector": "70a08231",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "168:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "186:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "178:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "178:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "177:17:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "218:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "218:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "217:9:1"
									},
									"scope": 142,
									"src": "159:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "241:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "258:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "250:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "250:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "270:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "262:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "262:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "249:28:1"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "296:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "296:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "295:6:1"
									},
									"scope": 142,
									"src": "232:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "316:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "346:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "338:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "368:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "360:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "360:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "388:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "380:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "328:72:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "419:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "419:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "418:6:1"
									},
									"scope": 142,
									"src": "307:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 143,
							"src": "57:370:1",
							"usedErrors": []
						}
					],
					"src": "32:396:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							164
						]
					},
					"id": 165,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 144,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 145,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 164,
							"linearizedBaseContracts": [
								164
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 150,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 149,
												"id": 152,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 164,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 159,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 158,
												"id": 161,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 156,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 164,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 165,
							"src": "608:235:2",
							"usedErrors": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							476
						]
					},
					"id": 477,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 166,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 167,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:3",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 476,
							"linearizedBaseContracts": [
								476
							],
							"name": "SafeMath",
							"nameLocation": "490:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "717:140:3",
										"statements": [
											{
												"id": 197,
												"nodeType": "UncheckedBlock",
												"src": "727:124:3",
												"statements": [
													{
														"assignments": [
															180
														],
														"declarations": [
															{
																"constant": false,
																"id": 180,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 197,
																"src": "751:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 179,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 184,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "763:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 182,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "767:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 185,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 180,
																"src": "786:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 186,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "790:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 192,
														"nodeType": "IfStatement",
														"src": "782:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 190,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 178,
															"id": 191,
															"nodeType": "Return",
															"src": "793:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 194,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "838:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 195,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 178,
														"id": 196,
														"nodeType": "Return",
														"src": "824:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:3",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "657:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "668:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:3"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "702:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "708:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:3"
									},
									"scope": 476,
									"src": "641:216:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "1078:113:3",
										"statements": [
											{
												"id": 225,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 211,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "1116:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 212,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "1120:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 218,
														"nodeType": "IfStatement",
														"src": "1112:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 216,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 210,
															"id": 217,
															"nodeType": "Return",
															"src": "1123:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 220,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "1168:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 221,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 204,
																		"src": "1172:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 223,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 210,
														"id": 224,
														"nodeType": "Return",
														"src": "1154:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:3",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1018:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1029:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:3"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1063:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:3"
									},
									"scope": 476,
									"src": "1002:189:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "1415:417:3",
										"statements": [
											{
												"id": 267,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 239,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "1683:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 246,
														"nodeType": "IfStatement",
														"src": "1679:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 244,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 238,
															"id": 245,
															"nodeType": "Return",
															"src": "1691:16:3"
														}
													},
													{
														"assignments": [
															248
														],
														"declarations": [
															{
																"constant": false,
																"id": 248,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 267,
																"src": "1721:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 247,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 252,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 249,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "1733:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 250,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "1737:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 253,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 248,
																	"src": "1756:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 254,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "1760:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 256,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "1765:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 262,
														"nodeType": "IfStatement",
														"src": "1752:33:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 260,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 238,
															"id": 261,
															"nodeType": "Return",
															"src": "1768:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 264,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 248,
																	"src": "1813:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 265,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 238,
														"id": 266,
														"nodeType": "Return",
														"src": "1799:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:3",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1355:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1366:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:3"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1400:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 234,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1406:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:3"
									},
									"scope": 476,
									"src": "1339:493:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "2057:114:3",
										"statements": [
											{
												"id": 295,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 281,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "2095:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 288,
														"nodeType": "IfStatement",
														"src": "2091:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 286,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 280,
															"id": 287,
															"nodeType": "Return",
															"src": "2103:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 290,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "2148:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 291,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 274,
																		"src": "2152:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 293,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 280,
														"id": 294,
														"nodeType": "Return",
														"src": "2134:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:3",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1997:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2008:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:3"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2042:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2048:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:3"
									},
									"scope": 476,
									"src": "1981:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "2406:114:3",
										"statements": [
											{
												"id": 323,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 309,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "2444:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 316,
														"nodeType": "IfStatement",
														"src": "2440:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 314,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 308,
															"id": 315,
															"nodeType": "Return",
															"src": "2452:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 318,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 300,
																		"src": "2497:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 319,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 302,
																		"src": "2501:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 321,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 308,
														"id": 322,
														"nodeType": "Return",
														"src": "2483:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "2346:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "2357:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:3"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "2391:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 304,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "2397:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:3"
									},
									"scope": 476,
									"src": "2330:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "2822:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 335,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "2839:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 336,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "2843:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 334,
												"id": 338,
												"nodeType": "Return",
												"src": "2832:12:3"
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2768:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2779:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:3"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2813:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:3"
									},
									"scope": 476,
									"src": "2755:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "3189:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 350,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "3206:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 351,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "3210:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 349,
												"id": 353,
												"nodeType": "Return",
												"src": "3199:12:3"
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3135:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3146:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:3"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3180:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:3"
									},
									"scope": 476,
									"src": "3122:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "3532:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 365,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "3549:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 366,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "3553:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 364,
												"id": 368,
												"nodeType": "Return",
												"src": "3542:12:3"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3478:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3489:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:3"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3523:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:3"
									},
									"scope": 476,
									"src": "3465:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3917:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 380,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "3934:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 381,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3938:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3927:12:3"
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3863:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3874:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:3"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3908:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:3"
									},
									"scope": 476,
									"src": "3850:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "4466:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 395,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "4483:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 396,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "4487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 394,
												"id": 398,
												"nodeType": "Return",
												"src": "4476:12:3"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "4412:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "4423:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:3"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "4457:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:3"
									},
									"scope": 476,
									"src": "4399:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "5084:106:3",
										"statements": [
											{
												"id": 423,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 413,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "5126:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 414,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 403,
																		"src": "5131:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 416,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "5134:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 412,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 418,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 419,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "5168:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 420,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "5172:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 411,
														"id": 422,
														"nodeType": "Return",
														"src": "5161:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "4981:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "5000:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "5019:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 406,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:3"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "5075:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:3"
									},
									"scope": 476,
									"src": "4959:231:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "5799:105:3",
										"statements": [
											{
												"id": 448,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 438,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 430,
																		"src": "5841:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 441,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "5848:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 437,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 443,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 444,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "5882:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 445,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "5886:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 436,
														"id": 447,
														"nodeType": "Return",
														"src": "5875:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "5696:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "5715:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "5734:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 431,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:3"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "5790:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:3"
									},
									"scope": 476,
									"src": "5674:230:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "6675:105:3",
										"statements": [
											{
												"id": 473,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 463,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 455,
																		"src": "6717:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 466,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 457,
																	"src": "6724:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 462,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 468,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 469,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "6758:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 470,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 455,
																"src": "6762:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 461,
														"id": 472,
														"nodeType": "Return",
														"src": "6751:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "6572:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "6591:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "6610:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 456,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:3"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "6666:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:3"
									},
									"scope": 476,
									"src": "6550:230:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 477,
							"src": "482:6300:3",
							"usedErrors": []
						}
					],
					"src": "107:6676:3"
				},
				"id": 3
			},
			"contracts/staking.sol": {
				"ast": {
					"absolutePath": "contracts/staking.sol",
					"exportedSymbols": {
						"Context": [
							164
						],
						"IERC20": [
							142
						],
						"Ownable": [
							104
						],
						"SafeMath": [
							476
						],
						"staking": [
							822
						]
					},
					"id": 823,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 478,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 479,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 823,
							"sourceUnit": 105,
							"src": "60:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 480,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 823,
							"sourceUnit": 143,
							"src": "114:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 481,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 823,
							"sourceUnit": 477,
							"src": "172:57:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 482,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "253:7:4"
									},
									"id": 483,
									"nodeType": "InheritanceSpecifier",
									"src": "253:7:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 822,
							"linearizedBaseContracts": [
								822,
								104,
								164
							],
							"name": "staking",
							"nameLocation": "242:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 486,
									"libraryName": {
										"id": 484,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 476,
										"src": "292:8:4"
									},
									"nodeType": "UsingForDirective",
									"src": "286:24:4",
									"typeName": {
										"id": 485,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "305:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "staking.stakingInfo",
									"id": 493,
									"members": [
										{
											"constant": false,
											"id": 488,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "349:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 493,
											"src": "344:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 487,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "344:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 490,
											"mutability": "mutable",
											"name": "alreadyWithdrawn",
											"nameLocation": "369:16:4",
											"nodeType": "VariableDeclaration",
											"scope": 493,
											"src": "364:21:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 489,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "364:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 492,
											"mutability": "mutable",
											"name": "releaseDate",
											"nameLocation": "399:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 493,
											"src": "394:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 491,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "394:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "stakingInfo",
									"nameLocation": "323:11:4",
									"nodeType": "StructDefinition",
									"scope": 822,
									"src": "316:139:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e12fb1b9",
									"id": 497,
									"mutability": "mutable",
									"name": "validTokens",
									"nameLocation": "496:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 822,
									"src": "463:44:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 496,
										"keyType": {
											"id": 494,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "472:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "463:25:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 495,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "483:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dcb43191",
									"id": 504,
									"mutability": "mutable",
									"name": "StakeMap",
									"nameLocation": "596:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 822,
									"src": "536:68:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_stakingInfo_$493_storage_$_$",
										"typeString": "mapping(address => mapping(address => struct staking.stakingInfo))"
									},
									"typeName": {
										"id": 503,
										"keyType": {
											"id": 498,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "545:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "536:52:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_stakingInfo_$493_storage_$_$",
											"typeString": "mapping(address => mapping(address => struct staking.stakingInfo))"
										},
										"valueType": {
											"id": 502,
											"keyType": {
												"id": 499,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "564:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "556:31:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakingInfo_$493_storage_$",
												"typeString": "mapping(address => struct staking.stakingInfo)"
											},
											"valueType": {
												"id": 501,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 500,
													"name": "stakingInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 493,
													"src": "575:11:4"
												},
												"referencedDeclaration": 493,
												"src": "575:11:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_stakingInfo_$493_storage_ptr",
													"typeString": "struct staking.stakingInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4302a2f2",
									"id": 508,
									"mutability": "mutable",
									"name": "tokenTotalStaked",
									"nameLocation": "678:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 822,
									"src": "645:49:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 507,
										"keyType": {
											"id": 505,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "654:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "645:25:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 506,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "665:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 514,
									"name": "tokensStaked",
									"nameLocation": "758:12:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"indexed": false,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "779:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "771:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "771:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "791:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "786:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "786:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "770:29:4"
									},
									"src": "752:48:4"
								},
								{
									"anonymous": false,
									"id": 520,
									"name": "TokensUnstaked",
									"nameLocation": "810:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"indexed": false,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "833:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "825:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "825:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "843:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "838:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "824:27:4"
									},
									"src": "804:48:4"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "899:53:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 525,
																"name": "validTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "914:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 527,
															"indexExpression": {
																"id": 526,
																"name": "_tokenAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "926:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "914:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 524,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "906:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "906:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "906:32:4"
											},
											{
												"id": 530,
												"nodeType": "PlaceholderStatement",
												"src": "945:1:4"
											}
										]
									},
									"id": 532,
									"name": "isValidToken",
									"nameLocation": "867:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "_tokenAddr",
												"nameLocation": "888:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "880:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "879:20:4"
									},
									"src": "858:94:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "1053:43:4",
										"statements": [
											{
												"expression": {
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 540,
															"name": "validTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "1060:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 542,
														"indexExpression": {
															"id": 541,
															"name": "_tokenAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "1072:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1060:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1086:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1060:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "1060:30:4"
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "958:33:4",
										"text": " add token address "
									},
									"functionSelector": "d48bfca7",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 538,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 537,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1034:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1034:9:4"
										}
									],
									"name": "addToken",
									"nameLocation": "1004:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "_tokenAddr",
												"nameLocation": "1022:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "1014:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1014:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1012:21:4"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1053:0:4"
									},
									"scope": 822,
									"src": "995:101:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "1206:44:4",
										"statements": [
											{
												"expression": {
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 555,
															"name": "validTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "1213:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 557,
														"indexExpression": {
															"id": 556,
															"name": "_tokenAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "1225:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1213:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1239:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1213:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "1213:31:4"
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "1106:35:4",
										"text": " remove token address"
									},
									"functionSelector": "5fa7b584",
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 553,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 552,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1187:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1187:9:4"
										}
									],
									"name": "removeToken",
									"nameLocation": "1154:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "_tokenAddr",
												"nameLocation": "1175:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1167:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1167:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1165:21:4"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1206:0:4"
									},
									"scope": 822,
									"src": "1145:105:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "1409:792:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 578,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "1424:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 583,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1464:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1464:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 580,
																				"name": "_tokenAddr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 567,
																				"src": "1442:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 579,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 142,
																			"src": "1435:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$142_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1435:18:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 121,
																	"src": "1435:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1435:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1424:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820535441544520746f6b656e7320696e20796f75722077616c6c65742c20706c6561736520747279206c657373657220616d6f756e74",
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1477:66:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_967147515f75b3023d408738777e319efb166df8b2b46ac44263682325f5cb28",
																"typeString": "literal_string \"Not enough STATE tokens in your wallet, please try lesser amount\""
															},
															"value": "Not enough STATE tokens in your wallet, please try lesser amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_967147515f75b3023d408738777e319efb166df8b2b46ac44263682325f5cb28",
																"typeString": "literal_string \"Not enough STATE tokens in your wallet, please try lesser amount\""
															}
														],
														"id": 577,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1416:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1416:128:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "1416:128:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 595,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1591:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1591:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 599,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1611:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_staking_$822",
																				"typeString": "contract staking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_staking_$822",
																				"typeString": "contract staking"
																			}
																		],
																		"id": 598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1603:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 597,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1603:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1603:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 601,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "1618:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 592,
																			"name": "_tokenAddr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 567,
																			"src": "1566:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 591,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 142,
																		"src": "1559:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$142_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1559:18:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 141,
																"src": "1559:31:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1559:67:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 590,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1551:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1551:76:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "ExpressionStatement",
												"src": "1551:76:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 605,
																	"name": "StakeMap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "1640:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_stakingInfo_$493_storage_$_$",
																		"typeString": "mapping(address => mapping(address => struct staking.stakingInfo storage ref))"
																	}
																},
																"id": 607,
																"indexExpression": {
																	"id": 606,
																	"name": "_tokenAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "1649:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1640:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakingInfo_$493_storage_$",
																	"typeString": "mapping(address => struct staking.stakingInfo storage ref)"
																}
															},
															"id": 610,
															"indexExpression": {
																"expression": {
																	"id": 608,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1661:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1661:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1640:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakingInfo_$493_storage",
																"typeString": "struct staking.stakingInfo storage ref"
															}
														},
														"id": 611,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 488,
														"src": "1640:39:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1683:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1640:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 674,
													"nodeType": "Block",
													"src": "1848:204:4",
													"statements": [
														{
															"expression": {
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 640,
																				"name": "StakeMap",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "1857:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_stakingInfo_$493_storage_$_$",
																					"typeString": "mapping(address => mapping(address => struct staking.stakingInfo storage ref))"
																				}
																			},
																			"id": 644,
																			"indexExpression": {
																				"id": 641,
																				"name": "_tokenAddr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 567,
																				"src": "1866:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1857:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakingInfo_$493_storage_$",
																				"typeString": "mapping(address => struct staking.stakingInfo storage ref)"
																			}
																		},
																		"id": 645,
																		"indexExpression": {
																			"expression": {
																				"id": 642,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1878:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1878:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1857:32:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stakingInfo_$493_storage",
																			"typeString": "struct staking.stakingInfo storage ref"
																		}
																	},
																	"id": 646,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 488,
																	"src": "1857:39:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 655,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 565,
																			"src": "1943:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 647,
																						"name": "StakeMap",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 504,
																						"src": "1899:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_stakingInfo_$493_storage_$_$",
																							"typeString": "mapping(address => mapping(address => struct staking.stakingInfo storage ref))"
																						}
																					},
																					"id": 649,
																					"indexExpression": {
																						"id": 648,
																						"name": "_tokenAddr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 567,
																						"src": "1908:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1899:20:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakingInfo_$493_storage_$",
																						"typeString": "mapping(address => struct staking.stakingInfo storage ref)"
																					}
																				},
																				"id": 652,
																				"indexExpression": {
																					"expression": {
																						"id": 650,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "1920:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 651,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "1920:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1899:32:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_stakingInfo_$493_storage",
																					"typeString": "struct staking.stakingInfo storage ref"
																				}
																			},
																			"id": 653,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 488,
																			"src": "1899:39:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 340,
																		"src": "1899:43:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1899:52:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1857:94:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 658,
															"nodeType": "ExpressionStatement",
															"src": "1857:94:4"
														},
														{
															"expression": {
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 659,
																				"name": "StakeMap",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "1960:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_stakingInfo_$493_storage_$_$",
																					"typeString": "mapping(address => mapping(address => struct staking.stakingInfo storage ref))"
																				}
																			},
																			"id": 663,
																			"indexExpression": {
																				"id": 660,
																				"name": "_tokenAddr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 567,
																				"src": "1969:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1960:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakingInfo_$493_storage_$",
																				"typeString": "mapping(address => struct staking.stakingInfo storage ref)"
																			}
																		},
																		"id": 664,
																		"indexExpression": {
																			"expression": {
																				"id": 661,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1981:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1981:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1960:32:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stakingInfo_$493_storage",
																			"typeString": "struct staking.stakingInfo storage ref"
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "releaseDate",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 492,
																	"src": "1960:44:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 666,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "2007:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "2007:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 668,
																			"name": "_daysCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 569,
																			"src": "2025:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2038:6:4",
																			"subdenomination": "days",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_86400_by_1",
																				"typeString": "int_const 86400"
																			},
																			"value": "1"
																		},
																		"src": "2025:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2007:37:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1960:84:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 673,
															"nodeType": "ExpressionStatement",
															"src": "1960:84:4"
														}
													]
												},
												"id": 675,
												"nodeType": "IfStatement",
												"src": "1636:416:4",
												"trueBody": {
													"id": 639,
													"nodeType": "Block",
													"src": "1685:159:4",
													"statements": [
														{
															"expression": {
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 614,
																				"name": "StakeMap",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "1694:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_stakingInfo_$493_storage_$_$",
																					"typeString": "mapping(address => mapping(address => struct staking.stakingInfo storage ref))"
																				}
																			},
																			"id": 618,
																			"indexExpression": {
																				"id": 615,
																				"name": "_tokenAddr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 567,
																				"src": "1703:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1694:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakingInfo_$493_storage_$",
																				"typeString": "mapping(address => struct staking.stakingInfo storage ref)"
																			}
																		},
																		"id": 619,
																		"indexExpression": {
																			"expression": {
																				"id": 616,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1715:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1715:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1694:32:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stakingInfo_$493_storage",
																			"typeString": "struct staking.stakingInfo storage ref"
																		}
																	},
																	"id": 620,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 488,
																	"src": "1694:39:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 621,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "1736:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1694:49:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 623,
															"nodeType": "ExpressionStatement",
															"src": "1694:49:4"
														},
														{
															"expression": {
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 624,
																				"name": "StakeMap",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "1752:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_stakingInfo_$493_storage_$_$",
																					"typeString": "mapping(address => mapping(address => struct staking.stakingInfo storage ref))"
																				}
																			},
																			"id": 628,
																			"indexExpression": {
																				"id": 625,
																				"name": "_tokenAddr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 567,
																				"src": "1761:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1752:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakingInfo_$493_storage_$",
																				"typeString": "mapping(address => struct staking.stakingInfo storage ref)"
																			}
																		},
																		"id": 629,
																		"indexExpression": {
																			"expression": {
																				"id": 626,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1773:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1773:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1752:32:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stakingInfo_$493_storage",
																			"typeString": "struct staking.stakingInfo storage ref"
																		}
																	},
																	"id": 630,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "releaseDate",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 492,
																	"src": "1752:44:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 631,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "1799:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "1799:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 633,
																			"name": "_daysCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 569,
																			"src": "1817:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1830:6:4",
																			"subdenomination": "days",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_86400_by_1",
																				"typeString": "int_const 86400"
																			},
																			"value": "1"
																		},
																		"src": "1817:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1799:37:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1752:84:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 638,
															"nodeType": "ExpressionStatement",
															"src": "1752:84:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 676,
															"name": "tokenTotalStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "2058:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 678,
														"indexExpression": {
															"id": 677,
															"name": "_tokenAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "2075:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2058:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 683,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "2122:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 679,
																	"name": "tokenTotalStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "2089:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 681,
																"indexExpression": {
																	"id": 680,
																	"name": "_tokenAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "2106:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2089:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 340,
															"src": "2089:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2089:41:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2058:72:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "2058:72:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 688,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2157:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2157:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 690,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "2169:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 687,
														"name": "tokensStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "2144:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2144:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "EmitStatement",
												"src": "2139:38:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2191:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 576,
												"id": 694,
												"nodeType": "Return",
												"src": "2184:11:4"
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "1256:27:4",
										"text": " Stake tokens"
									},
									"functionSelector": "6e9c931c",
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 572,
													"name": "_tokenAddr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 567,
													"src": "1366:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 573,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 571,
												"name": "isValidToken",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 532,
												"src": "1353:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1353:24:4"
										}
									],
									"name": "stake",
									"nameLocation": "1296:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1307:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1302:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1302:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "_tokenAddr",
												"nameLocation": "1324:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1316:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1316:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "_daysCount",
												"nameLocation": "1341:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1336:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1336:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1301:51:4"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1404:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 574,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1404:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1403:6:4"
									},
									"scope": 822,
									"src": "1287:914:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "2347:543:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 710,
																			"name": "StakeMap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 504,
																			"src": "2362:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_stakingInfo_$493_storage_$_$",
																				"typeString": "mapping(address => mapping(address => struct staking.stakingInfo storage ref))"
																			}
																		},
																		"id": 712,
																		"indexExpression": {
																			"id": 711,
																			"name": "_tokenAddr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 701,
																			"src": "2371:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2362:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakingInfo_$493_storage_$",
																			"typeString": "mapping(address => struct staking.stakingInfo storage ref)"
																		}
																	},
																	"id": 715,
																	"indexExpression": {
																		"expression": {
																			"id": 713,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2383:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2383:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2362:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stakingInfo_$493_storage",
																		"typeString": "struct staking.stakingInfo storage ref"
																	}
																},
																"id": 716,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 488,
																"src": "2362:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2404:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2362:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 709,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2354:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2354:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "2354:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 722,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2421:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2421:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 724,
																			"name": "StakeMap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 504,
																			"src": "2439:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_stakingInfo_$493_storage_$_$",
																				"typeString": "mapping(address => mapping(address => struct staking.stakingInfo storage ref))"
																			}
																		},
																		"id": 726,
																		"indexExpression": {
																			"id": 725,
																			"name": "_tokenAddr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 701,
																			"src": "2448:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2439:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakingInfo_$493_storage_$",
																			"typeString": "mapping(address => struct staking.stakingInfo storage ref)"
																		}
																	},
																	"id": 729,
																	"indexExpression": {
																		"expression": {
																			"id": 727,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2460:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2460:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2439:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stakingInfo_$493_storage",
																		"typeString": "struct staking.stakingInfo storage ref"
																	}
																},
																"id": 730,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "releaseDate",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 492,
																"src": "2439:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2421:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e7320617265206f6e6c7920617661696c61626c6520616674657220636f72726563742074696d6520706572696f642068617320656c6170736564",
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2485:65:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68af102850755d0b1e4ca466e6b03033fe428ed967826f39fe50c0d5fdcd1a5a",
																"typeString": "literal_string \"Tokens are only available after correct time period has elapsed\""
															},
															"value": "Tokens are only available after correct time period has elapsed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68af102850755d0b1e4ca466e6b03033fe428ed967826f39fe50c0d5fdcd1a5a",
																"typeString": "literal_string \"Tokens are only available after correct time period has elapsed\""
															}
														],
														"id": 721,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2413:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2413:138:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "2413:138:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 740,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2594:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2594:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 742,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 699,
																	"src": "2606:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 737,
																			"name": "_tokenAddr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 701,
																			"src": "2573:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 736,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 142,
																		"src": "2566:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$142_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2566:18:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 130,
																"src": "2566:27:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2566:48:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 735,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2558:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2558:57:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "2558:57:4"
											},
											{
												"expression": {
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 746,
															"name": "tokenTotalStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "2624:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 748,
														"indexExpression": {
															"id": 747,
															"name": "_tokenAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "2641:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2624:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 753,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 699,
																"src": "2688:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 749,
																	"name": "tokenTotalStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "2655:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 751,
																"indexExpression": {
																	"id": 750,
																	"name": "_tokenAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "2672:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2655:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 355,
															"src": "2655:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2655:41:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2624:72:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 756,
												"nodeType": "ExpressionStatement",
												"src": "2624:72:4"
											},
											{
												"expression": {
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 757,
																	"name": "StakeMap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "2703:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_stakingInfo_$493_storage_$_$",
																		"typeString": "mapping(address => mapping(address => struct staking.stakingInfo storage ref))"
																	}
																},
																"id": 761,
																"indexExpression": {
																	"id": 758,
																	"name": "_tokenAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "2712:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2703:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakingInfo_$493_storage_$",
																	"typeString": "mapping(address => struct staking.stakingInfo storage ref)"
																}
															},
															"id": 762,
															"indexExpression": {
																"expression": {
																	"id": 759,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2724:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2724:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2703:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakingInfo_$493_storage",
																"typeString": "struct staking.stakingInfo storage ref"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "alreadyWithdrawn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 490,
														"src": "2703:49:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 772,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 699,
																"src": "2809:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 764,
																			"name": "StakeMap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 504,
																			"src": "2755:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_stakingInfo_$493_storage_$_$",
																				"typeString": "mapping(address => mapping(address => struct staking.stakingInfo storage ref))"
																			}
																		},
																		"id": 766,
																		"indexExpression": {
																			"id": 765,
																			"name": "_tokenAddr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 701,
																			"src": "2764:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2755:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakingInfo_$493_storage_$",
																			"typeString": "mapping(address => struct staking.stakingInfo storage ref)"
																		}
																	},
																	"id": 769,
																	"indexExpression": {
																		"expression": {
																			"id": 767,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2776:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2776:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2755:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stakingInfo_$493_storage",
																		"typeString": "struct staking.stakingInfo storage ref"
																	}
																},
																"id": 770,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "alreadyWithdrawn",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 490,
																"src": "2755:49:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 340,
															"src": "2755:53:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2755:62:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2703:114:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 775,
												"nodeType": "ExpressionStatement",
												"src": "2703:114:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 777,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2846:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2846:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 779,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "2858:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 776,
														"name": "TokensUnstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "2831:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "EmitStatement",
												"src": "2826:40:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2880:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 708,
												"id": 783,
												"nodeType": "Return",
												"src": "2873:11:4"
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "2207:29:4",
										"text": " Unstake tokens"
									},
									"functionSelector": "8381e182",
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 704,
													"name": "_tokenAddr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 701,
													"src": "2304:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 705,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 703,
												"name": "isValidToken",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 532,
												"src": "2291:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2291:24:4"
										}
									],
									"name": "unstake",
									"nameLocation": "2249:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2262:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "2257:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2257:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "_tokenAddr",
												"nameLocation": "2279:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "2271:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2256:34:4"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "2342:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 706,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:4"
									},
									"scope": 822,
									"src": "2240:650:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "3044:52:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 797,
															"name": "StakeMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "3058:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_stakingInfo_$493_storage_$_$",
																"typeString": "mapping(address => mapping(address => struct staking.stakingInfo storage ref))"
															}
														},
														"id": 799,
														"indexExpression": {
															"id": 798,
															"name": "_tokenAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "3067:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3058:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakingInfo_$493_storage_$",
															"typeString": "mapping(address => struct staking.stakingInfo storage ref)"
														}
													},
													"id": 802,
													"indexExpression": {
														"expression": {
															"id": 800,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3079:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3079:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3058:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stakingInfo_$493_storage",
														"typeString": "struct staking.stakingInfo storage ref"
													}
												},
												"functionReturnParameters": 796,
												"id": 803,
												"nodeType": "Return",
												"src": "3051:39:4"
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "2896:37:4",
										"text": " get User Staking Info "
									},
									"functionSelector": "6386c1c7",
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 791,
													"name": "_tokenAddr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 788,
													"src": "2991:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 792,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 790,
												"name": "isValidToken",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 532,
												"src": "2978:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2978:24:4"
										}
									],
									"name": "getUserInfo",
									"nameLocation": "2946:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "_tokenAddr",
												"nameLocation": "2966:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "2958:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2958:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2957:20:4"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "3025:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_stakingInfo_$493_memory_ptr",
													"typeString": "struct staking.stakingInfo"
												},
												"typeName": {
													"id": 794,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 793,
														"name": "stakingInfo",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 493,
														"src": "3025:11:4"
													},
													"referencedDeclaration": 493,
													"src": "3025:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stakingInfo_$493_storage_ptr",
														"typeString": "struct staking.stakingInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3024:20:4"
									},
									"scope": 822,
									"src": "2937:159:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "3246:48:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 816,
														"name": "tokenTotalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "3260:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 818,
													"indexExpression": {
														"id": 817,
														"name": "_tokenAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "3277:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3260:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 815,
												"id": 819,
												"nodeType": "Return",
												"src": "3253:35:4"
											}
										]
									},
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "3106:35:4",
										"text": " get tokenTotalStaked"
									},
									"functionSelector": "83374cab",
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 811,
													"name": "_tokenAddr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 808,
													"src": "3207:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 812,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 810,
												"name": "isValidToken",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 532,
												"src": "3194:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3194:24:4"
										}
									],
									"name": "getTokenTotalStaked",
									"nameLocation": "3154:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "_tokenAddr",
												"nameLocation": "3182:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "3174:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3174:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3173:20:4"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "3241:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3241:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3240:6:4"
									},
									"scope": 822,
									"src": "3145:149:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 823,
							"src": "233:3064:4",
							"usedErrors": []
						}
					],
					"src": "33:3264:4"
				},
				"id": 4
			}
		}
	}
}